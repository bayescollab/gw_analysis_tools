%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, February 10, 2011 3:41:14 PM CST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
2 J
0 j
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
0 J
1 j
q
q
5.00000 w
1.00000 0 0 RG
36.1000 5.00292 355.899 352.997 rc
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
5.00000 w
0 0 1.00000 RG
36.1000 5.00292 355.899 352.997 rc
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
5.00000 w
1.00000 0 0 RG
36.1000 5.00292 355.899 352.997 rc
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
5.00000 w
0 0 1.00000 RG
36.1000 5.00292 355.899 352.997 rc
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
5.00000 w
0.752941 0.752941 0.752941 RG
36.1000 5.00292 355.899 352.997 rc
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
5.00000 w
0 1.00000 1.00000 RG
36.1000 5.00292 355.899 352.997 rc
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
5.00000 w
1.00000 0 0 RG
36.1000 5.00292 355.899 352.997 rc
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
5.00000 w
0 0 1.00000 RG
36.1000 5.00292 355.899 352.997 rc
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
2 J
0 j
q
newpath
371.822 356.000 m
371.822 358.600 l
S
newpath
371.822 356.000 m
371.822 358.600 l
S
newpath
346.007 356.000 m
346.007 358.600 l
S
newpath
352.194 356.000 m
352.194 358.600 l
S
newpath
337.762 356.000 m
337.762 358.600 l
S
newpath
325.369 356.000 m
325.369 358.600 l
S
newpath
294.711 356.000 m
294.711 358.600 l
S
newpath
288.524 356.000 m
288.524 358.600 l
S
newpath
280.279 356.000 m
280.279 358.600 l
S
newpath
267.886 356.000 m
267.886 358.600 l
S
newpath
237.228 356.000 m
237.228 358.600 l
S
newpath
222.796 356.000 m
222.796 358.600 l
S
newpath
231.040 356.000 m
231.040 358.600 l
S
newpath
210.403 356.000 m
210.403 358.600 l
S
newpath
173.557 356.000 m
173.557 358.600 l
S
newpath
179.744 356.000 m
179.744 358.600 l
S
newpath
165.313 356.000 m
165.313 358.600 l
S
newpath
152.920 356.000 m
152.920 358.600 l
S
newpath
122.261 356.000 m
122.261 358.600 l
S
newpath
116.074 356.000 m
116.074 358.600 l
S
newpath
107.830 356.000 m
107.830 358.600 l
S
newpath
95.4368 356.000 m
95.4368 358.600 l
S
newpath
61.5317 356.000 m
61.5317 358.600 l
S
newpath
54.3499 356.000 m
54.3499 358.600 l
S
newpath
44.2276 356.000 m
44.2276 358.600 l
S
newpath
38.1000 356.000 m
388.999 356.000 l
S
newpath
38.1000 8.00293 m
388.999 8.00293 l
S
Q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
177 389 73 31 rc
q
newpath
188.703 402.812 m
188.484 403.656 l
186.625 403.656 l
185.234 409.203 l
184.609 411.651 183.984 413.541 183.359 414.875  c
182.474 416.760 181.515 418.062 180.484 418.781  c
179.713 419.333 178.937 419.609 178.156 419.609  c
177.645 419.609 177.213 419.458 176.859 419.156  c
176.599 418.947 176.468 418.671 176.468 418.328  c
176.468 418.057 176.575 417.822 176.789 417.625  c
177.002 417.427 177.265 417.328 177.578 417.328  c
177.807 417.328 178.000 417.401 178.156 417.546  c
178.312 417.692 178.390 417.854 178.390 418.031  c
178.390 418.218 178.302 418.395 178.125 418.562  c
177.989 418.677 177.921 418.765 177.921 418.828  c
177.921 418.901 177.953 418.958 178.015 419.000  c
178.088 419.062 178.208 419.093 178.375 419.093  c
178.739 419.093 179.122 418.979 179.523 418.750  c
179.924 418.520 180.281 418.179 180.593 417.726  c
180.906 417.273 181.203 416.619 181.484 415.765  c
181.599 415.411 181.916 414.239 182.437 412.250  c
184.640 403.656 l
182.437 403.656 l
182.609 402.812 l
183.317 402.812 183.809 402.763 184.085 402.664  c
184.362 402.565 184.617 402.380 184.851 402.109  c
185.085 401.838 185.390 401.322 185.765 400.562  c
186.265 399.552 186.744 398.765 187.203 398.203  c
187.828 397.453 188.484 396.890 189.171 396.515  c
189.859 396.140 190.510 395.953 191.125 395.953  c
191.760 395.953 192.273 396.114 192.664 396.437  c
193.054 396.760 193.250 397.114 193.250 397.500  c
193.250 397.791 193.153 398.039 192.960 398.242  c
192.768 398.445 192.515 398.546 192.203 398.546  c
191.942 398.546 191.731 398.471 191.570 398.320  c
191.408 398.169 191.328 397.989 191.328 397.781  c
191.328 397.645 191.382 397.476 191.492 397.273  c
191.601 397.070 191.656 396.937 191.656 396.875  c
191.656 396.760 191.614 396.671 191.531 396.609  c
191.427 396.526 191.270 396.484 191.062 396.484  c
190.520 396.484 190.041 396.651 189.625 396.984  c
189.052 397.432 188.541 398.135 188.093 399.093  c
187.864 399.593 187.447 400.833 186.843 402.812  c
188.703 402.812 l
h
194.895 419.187 m
201.567 396.390 l
206.973 396.390 l
206.692 397.265 l
203.161 397.265 l
197.004 418.265 l
200.536 418.265 l
200.286 419.187 l
194.895 419.187 l
h
211.248 404.468 m
219.201 404.468 l
220.451 400.218 l
220.690 399.385 220.810 398.739 220.810 398.281  c
220.810 398.062 220.758 397.875 220.654 397.718  c
220.550 397.562 220.388 397.445 220.169 397.367  c
219.951 397.289 219.518 397.250 218.873 397.250  c
218.998 396.781 l
225.935 396.781 l
225.779 397.250 l
225.196 397.239 224.758 397.302 224.466 397.437  c
224.060 397.614 223.758 397.843 223.560 398.125  c
223.289 398.520 223.008 399.218 222.716 400.218  c
219.685 410.609 l
219.425 411.474 219.294 412.093 219.294 412.468  c
219.294 412.791 219.409 413.033 219.638 413.195  c
219.867 413.356 220.404 413.468 221.248 413.531  c
221.107 414.000 l
214.404 414.000 l
214.576 413.531 l
215.242 413.510 215.685 413.453 215.904 413.359  c
216.237 413.203 216.482 413.005 216.638 412.765  c
216.857 412.432 217.128 411.713 217.451 410.609  c
218.998 405.343 l
211.013 405.343 l
209.451 410.609 l
209.201 411.453 209.076 412.072 209.076 412.468  c
209.076 412.791 209.188 413.033 209.412 413.195  c
209.636 413.356 210.169 413.468 211.013 413.531  c
210.904 414.000 l
204.154 414.000 l
204.326 413.531 l
204.992 413.510 205.435 413.453 205.654 413.359  c
205.998 413.203 206.248 413.005 206.404 412.765  c
206.623 412.421 206.893 411.703 207.216 410.609  c
210.263 400.218 l
210.513 399.364 210.638 398.718 210.638 398.281  c
210.638 398.062 210.584 397.875 210.474 397.718  c
210.365 397.562 210.198 397.445 209.974 397.367  c
209.750 397.289 209.315 397.250 208.669 397.250  c
208.810 396.781 l
215.607 396.781 l
215.466 397.250 l
214.904 397.239 214.487 397.302 214.216 397.437  c
213.810 397.604 213.518 397.828 213.341 398.109  c
213.081 398.474 212.800 399.177 212.498 400.218  c
211.248 404.468 l
h
225.805 402.812 m
233.868 402.812 l
233.868 403.125 l
225.071 412.265 l
228.805 412.265 l
229.680 412.265 230.238 412.231 230.477 412.164  c
230.717 412.096 230.935 411.953 231.133 411.734  c
231.331 411.515 231.550 411.119 231.790 410.546  c
232.258 410.546 l
231.165 414.000 l
222.899 414.000 l
222.899 413.625 l
231.680 404.484 l
228.024 404.484 l
227.253 404.484 226.790 404.505 226.633 404.546  c
226.394 404.599 226.157 404.734 225.922 404.953  c
225.688 405.171 225.451 405.531 225.211 406.031  c
224.727 406.031 l
225.805 402.812 l
h
243.220 396.390 m
236.548 419.187 l
231.127 419.187 l
231.392 418.296 l
234.955 418.296 l
241.080 397.312 l
237.564 397.312 l
237.830 396.390 l
243.220 396.390 l
h
f
Q
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
newpath
69.7327 356.000 m
69.7327 361.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
f
Q
q
newpath
61.1093 378.250 m
64.0156 376.828 l
64.2968 376.828 l
64.2968 386.906 l
64.2968 387.572 64.3255 387.987 64.3828 388.148  c
64.4401 388.309 64.5572 388.434 64.7343 388.523  c
64.9114 388.612 65.2656 388.661 65.7968 388.671  c
65.7968 389.000 l
61.3281 389.000 l
61.3281 388.671 l
61.8906 388.661 62.2526 388.614 62.4140 388.531  c
62.5755 388.447 62.6875 388.333 62.7500 388.187  c
62.8125 388.041 62.8437 387.614 62.8437 386.906  c
62.8437 380.468 l
62.8437 379.604 62.8177 379.046 62.7656 378.796  c
62.7239 378.609 62.6484 378.471 62.5390 378.382  c
62.4296 378.294 62.2968 378.250 62.1406 378.250  c
61.9322 378.250 61.6302 378.338 61.2343 378.515  c
61.1093 378.250 l
h
68.6562 383.109 m
68.6562 381.755 68.8593 380.585 69.2656 379.601  c
69.6718 378.617 70.2187 377.885 70.9062 377.406  c
71.4270 377.020 71.9687 376.828 72.5312 376.828  c
73.4479 376.828 74.2708 377.296 75.0000 378.234  c
75.9062 379.390 76.3593 380.953 76.3593 382.921  c
76.3593 384.307 76.1588 385.484 75.7578 386.453  c
75.3567 387.421 74.8489 388.125 74.2343 388.562  c
73.6197 389.000 73.0260 389.218 72.4531 389.218  c
71.3177 389.218 70.3697 388.546 69.6093 387.203  c
68.9739 386.067 68.6562 384.703 68.6562 383.109  c
h
70.3750 383.328 m
70.3750 384.974 70.5781 386.312 70.9843 387.343  c
71.3177 388.218 71.8125 388.656 72.4687 388.656  c
72.7916 388.656 73.1224 388.513 73.4609 388.226  c
73.7994 387.940 74.0572 387.463 74.2343 386.796  c
74.5052 385.796 74.6406 384.380 74.6406 382.546  c
74.6406 381.182 74.5000 380.046 74.2187 379.140  c
74.0000 378.463 73.7239 377.984 73.3906 377.703  c
73.1510 377.515 72.8645 377.421 72.5312 377.421  c
72.1250 377.421 71.7708 377.599 71.4687 377.953  c
71.0416 378.442 70.7526 379.208 70.6015 380.250  c
70.4505 381.291 70.3750 382.317 70.3750 383.328  c
h
f
Q
q
newpath
80.5625 374.343 m
84.1093 374.343 l
84.1093 375.375 l
80.5625 375.375 l
80.5625 374.343 l
h
f
Q
q
newpath
94.0781 368.734 m
93.5468 369.890 l
90.7500 369.890 l
90.1406 371.140 l
91.3489 371.317 92.3072 371.765 93.0156 372.484  c
93.6197 373.099 93.9218 373.828 93.9218 374.671  c
93.9218 375.161 93.8229 375.612 93.6250 376.023  c
93.4270 376.434 93.1796 376.786 92.8828 377.078  c
92.5859 377.369 92.2500 377.604 91.8750 377.781  c
91.3541 378.041 90.8177 378.171 90.2656 378.171  c
89.7031 378.171 89.2968 378.075 89.0468 377.882  c
88.7968 377.690 88.6718 377.479 88.6718 377.250  c
88.6718 377.125 88.7239 377.013 88.8281 376.914  c
88.9322 376.815 89.0625 376.765 89.2187 376.765  c
89.3437 376.765 89.4505 376.783 89.5390 376.820  c
89.6276 376.856 89.7760 376.953 89.9843 377.109  c
90.3281 377.338 90.6770 377.453 91.0312 377.453  c
91.5625 377.453 92.0286 377.252 92.4296 376.851  c
92.8307 376.450 93.0312 375.958 93.0312 375.375  c
93.0312 374.822 92.8515 374.302 92.4921 373.812  c
92.1328 373.322 91.6406 372.947 91.0156 372.687  c
90.5156 372.479 89.8385 372.359 88.9843 372.328  c
90.7500 368.734 l
94.0781 368.734 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
127.216 356.000 m
127.216 361.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
f
Q
q
newpath
119.109 378.250 m
122.015 376.828 l
122.296 376.828 l
122.296 386.906 l
122.296 387.572 122.325 387.987 122.382 388.148  c
122.440 388.309 122.557 388.434 122.734 388.523  c
122.911 388.612 123.265 388.661 123.796 388.671  c
123.796 389.000 l
119.328 389.000 l
119.328 388.671 l
119.890 388.661 120.252 388.614 120.414 388.531  c
120.575 388.447 120.687 388.333 120.750 388.187  c
120.812 388.041 120.843 387.614 120.843 386.906  c
120.843 380.468 l
120.843 379.604 120.817 379.046 120.765 378.796  c
120.724 378.609 120.648 378.471 120.539 378.382  c
120.429 378.294 120.296 378.250 120.140 378.250  c
119.932 378.250 119.630 378.338 119.234 378.515  c
119.109 378.250 l
h
126.656 383.109 m
126.656 381.755 126.859 380.585 127.265 379.601  c
127.671 378.617 128.218 377.885 128.906 377.406  c
129.427 377.020 129.968 376.828 130.531 376.828  c
131.447 376.828 132.270 377.296 133.000 378.234  c
133.906 379.390 134.359 380.953 134.359 382.921  c
134.359 384.307 134.158 385.484 133.757 386.453  c
133.356 387.421 132.849 388.125 132.234 388.562  c
131.619 389.000 131.026 389.218 130.453 389.218  c
129.317 389.218 128.369 388.546 127.609 387.203  c
126.974 386.067 126.656 384.703 126.656 383.109  c
h
128.375 383.328 m
128.375 384.974 128.578 386.312 128.984 387.343  c
129.317 388.218 129.812 388.656 130.468 388.656  c
130.791 388.656 131.122 388.513 131.460 388.226  c
131.799 387.940 132.057 387.463 132.234 386.796  c
132.505 385.796 132.640 384.380 132.640 382.546  c
132.640 381.182 132.500 380.046 132.218 379.140  c
132.000 378.463 131.724 377.984 131.390 377.703  c
131.151 377.515 130.864 377.421 130.531 377.421  c
130.125 377.421 129.770 377.599 129.468 377.953  c
129.041 378.442 128.752 379.208 128.601 380.250  c
128.450 381.291 128.375 382.317 128.375 383.328  c
h
f
Q
q
newpath
138.562 374.343 m
142.109 374.343 l
142.109 375.375 l
138.562 375.375 l
138.562 374.343 l
h
f
Q
q
newpath
152.515 374.578 m
152.515 375.546 l
151.265 375.546 l
151.265 378.000 l
150.140 378.000 l
150.140 375.546 l
146.218 375.546 l
146.218 374.671 l
150.515 368.531 l
151.265 368.531 l
151.265 374.578 l
152.515 374.578 l
h
150.140 374.578 m
150.140 369.984 l
146.890 374.578 l
150.140 374.578 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
184.699 356.000 m
184.699 361.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
f
Q
q
newpath
176.109 378.250 m
179.015 376.828 l
179.296 376.828 l
179.296 386.906 l
179.296 387.572 179.325 387.987 179.382 388.148  c
179.440 388.309 179.557 388.434 179.734 388.523  c
179.911 388.612 180.265 388.661 180.796 388.671  c
180.796 389.000 l
176.328 389.000 l
176.328 388.671 l
176.890 388.661 177.252 388.614 177.414 388.531  c
177.575 388.447 177.687 388.333 177.750 388.187  c
177.812 388.041 177.843 387.614 177.843 386.906  c
177.843 380.468 l
177.843 379.604 177.817 379.046 177.765 378.796  c
177.724 378.609 177.648 378.471 177.539 378.382  c
177.429 378.294 177.296 378.250 177.140 378.250  c
176.932 378.250 176.630 378.338 176.234 378.515  c
176.109 378.250 l
h
183.656 383.109 m
183.656 381.755 183.859 380.585 184.265 379.601  c
184.671 378.617 185.218 377.885 185.906 377.406  c
186.427 377.020 186.968 376.828 187.531 376.828  c
188.447 376.828 189.270 377.296 190.000 378.234  c
190.906 379.390 191.359 380.953 191.359 382.921  c
191.359 384.307 191.158 385.484 190.757 386.453  c
190.356 387.421 189.849 388.125 189.234 388.562  c
188.619 389.000 188.026 389.218 187.453 389.218  c
186.317 389.218 185.369 388.546 184.609 387.203  c
183.974 386.067 183.656 384.703 183.656 383.109  c
h
185.375 383.328 m
185.375 384.974 185.578 386.312 185.984 387.343  c
186.317 388.218 186.812 388.656 187.468 388.656  c
187.791 388.656 188.122 388.513 188.460 388.226  c
188.799 387.940 189.057 387.463 189.234 386.796  c
189.505 385.796 189.640 384.380 189.640 382.546  c
189.640 381.182 189.500 380.046 189.218 379.140  c
189.000 378.463 188.724 377.984 188.390 377.703  c
188.151 377.515 187.864 377.421 187.531 377.421  c
187.125 377.421 186.770 377.599 186.468 377.953  c
186.041 378.442 185.752 379.208 185.601 380.250  c
185.450 381.291 185.375 382.317 185.375 383.328  c
h
f
Q
q
newpath
195.562 374.343 m
199.109 374.343 l
199.109 375.375 l
195.562 375.375 l
195.562 374.343 l
h
f
Q
q
newpath
203.718 370.500 m
203.979 369.875 204.309 369.390 204.710 369.046  c
205.112 368.703 205.614 368.531 206.218 368.531  c
206.958 368.531 207.526 368.776 207.921 369.265  c
208.224 369.619 208.375 370.005 208.375 370.421  c
208.375 371.099 207.953 371.796 207.109 372.515  c
207.682 372.734 208.114 373.052 208.406 373.468  c
208.697 373.885 208.843 374.375 208.843 374.937  c
208.843 375.739 208.588 376.432 208.078 377.015  c
207.411 377.786 206.447 378.171 205.187 378.171  c
204.562 378.171 204.135 378.093 203.906 377.937  c
203.677 377.781 203.562 377.614 203.562 377.437  c
203.562 377.302 203.617 377.184 203.726 377.085  c
203.835 376.987 203.963 376.937 204.109 376.937  c
204.224 376.937 204.343 376.953 204.468 376.984  c
204.541 377.005 204.716 377.088 204.992 377.234  c
205.268 377.380 205.458 377.468 205.562 377.500  c
205.729 377.541 205.906 377.562 206.093 377.562  c
206.562 377.562 206.968 377.382 207.312 377.023  c
207.656 376.664 207.828 376.239 207.828 375.750  c
207.828 375.385 207.750 375.036 207.593 374.703  c
207.468 374.442 207.338 374.244 207.203 374.109  c
207.005 373.932 206.734 373.770 206.390 373.625  c
206.046 373.479 205.697 373.406 205.343 373.406  c
205.125 373.406 l
205.125 373.187 l
205.489 373.145 205.851 373.018 206.210 372.804  c
206.570 372.591 206.833 372.333 207.000 372.031  c
207.166 371.729 207.250 371.401 207.250 371.046  c
207.250 370.578 207.101 370.197 206.804 369.906  c
206.507 369.614 206.140 369.468 205.703 369.468  c
204.994 369.468 204.406 369.849 203.937 370.609  c
203.718 370.500 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
242.182 356.000 m
242.182 361.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
f
Q
q
newpath
234.109 378.250 m
237.015 376.828 l
237.296 376.828 l
237.296 386.906 l
237.296 387.572 237.325 387.987 237.382 388.148  c
237.440 388.309 237.557 388.434 237.734 388.523  c
237.911 388.612 238.265 388.661 238.796 388.671  c
238.796 389.000 l
234.328 389.000 l
234.328 388.671 l
234.890 388.661 235.252 388.614 235.414 388.531  c
235.575 388.447 235.687 388.333 235.750 388.187  c
235.812 388.041 235.843 387.614 235.843 386.906  c
235.843 380.468 l
235.843 379.604 235.817 379.046 235.765 378.796  c
235.724 378.609 235.648 378.471 235.539 378.382  c
235.429 378.294 235.296 378.250 235.140 378.250  c
234.932 378.250 234.630 378.338 234.234 378.515  c
234.109 378.250 l
h
241.656 383.109 m
241.656 381.755 241.859 380.585 242.265 379.601  c
242.671 378.617 243.218 377.885 243.906 377.406  c
244.427 377.020 244.968 376.828 245.531 376.828  c
246.447 376.828 247.270 377.296 248.000 378.234  c
248.906 379.390 249.359 380.953 249.359 382.921  c
249.359 384.307 249.158 385.484 248.757 386.453  c
248.356 387.421 247.849 388.125 247.234 388.562  c
246.619 389.000 246.026 389.218 245.453 389.218  c
244.317 389.218 243.369 388.546 242.609 387.203  c
241.974 386.067 241.656 384.703 241.656 383.109  c
h
243.375 383.328 m
243.375 384.974 243.578 386.312 243.984 387.343  c
244.317 388.218 244.812 388.656 245.468 388.656  c
245.791 388.656 246.122 388.513 246.460 388.226  c
246.799 387.940 247.057 387.463 247.234 386.796  c
247.505 385.796 247.640 384.380 247.640 382.546  c
247.640 381.182 247.500 380.046 247.218 379.140  c
247.000 378.463 246.724 377.984 246.390 377.703  c
246.151 377.515 245.864 377.421 245.531 377.421  c
245.125 377.421 244.770 377.599 244.468 377.953  c
244.041 378.442 243.752 379.208 243.601 380.250  c
243.450 381.291 243.375 382.317 243.375 383.328  c
h
f
Q
q
newpath
253.562 374.343 m
257.109 374.343 l
257.109 375.375 l
253.562 375.375 l
253.562 374.343 l
h
f
Q
q
newpath
267.421 376.218 m
266.765 378.000 l
261.296 378.000 l
261.296 377.750 l
262.911 376.281 264.046 375.080 264.703 374.148  c
265.359 373.216 265.687 372.364 265.687 371.593  c
265.687 371.010 265.507 370.528 265.148 370.148  c
264.789 369.768 264.354 369.578 263.843 369.578  c
263.395 369.578 262.989 369.713 262.625 369.984  c
262.260 370.255 261.994 370.645 261.828 371.156  c
261.562 371.156 l
261.677 370.312 261.971 369.664 262.445 369.210  c
262.919 368.757 263.510 368.531 264.218 368.531  c
264.968 368.531 265.596 368.773 266.101 369.257  c
266.606 369.742 266.859 370.312 266.859 370.968  c
266.859 371.437 266.750 371.906 266.531 372.375  c
266.187 373.114 265.640 373.895 264.890 374.718  c
263.755 375.958 263.041 376.708 262.750 376.968  c
265.171 376.968 l
265.671 376.968 266.020 376.950 266.218 376.914  c
266.416 376.877 266.593 376.802 266.750 376.687  c
266.906 376.572 267.046 376.416 267.171 376.218  c
267.421 376.218 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
299.665 356.000 m
299.665 361.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
f
Q
q
newpath
291.109 378.250 m
294.015 376.828 l
294.296 376.828 l
294.296 386.906 l
294.296 387.572 294.325 387.987 294.382 388.148  c
294.440 388.309 294.557 388.434 294.734 388.523  c
294.911 388.612 295.265 388.661 295.796 388.671  c
295.796 389.000 l
291.328 389.000 l
291.328 388.671 l
291.890 388.661 292.252 388.614 292.414 388.531  c
292.575 388.447 292.687 388.333 292.750 388.187  c
292.812 388.041 292.843 387.614 292.843 386.906  c
292.843 380.468 l
292.843 379.604 292.817 379.046 292.765 378.796  c
292.724 378.609 292.648 378.471 292.539 378.382  c
292.429 378.294 292.296 378.250 292.140 378.250  c
291.932 378.250 291.630 378.338 291.234 378.515  c
291.109 378.250 l
h
298.656 383.109 m
298.656 381.755 298.859 380.585 299.265 379.601  c
299.671 378.617 300.218 377.885 300.906 377.406  c
301.427 377.020 301.968 376.828 302.531 376.828  c
303.447 376.828 304.270 377.296 305.000 378.234  c
305.906 379.390 306.359 380.953 306.359 382.921  c
306.359 384.307 306.158 385.484 305.757 386.453  c
305.356 387.421 304.849 388.125 304.234 388.562  c
303.619 389.000 303.026 389.218 302.453 389.218  c
301.317 389.218 300.369 388.546 299.609 387.203  c
298.974 386.067 298.656 384.703 298.656 383.109  c
h
300.375 383.328 m
300.375 384.974 300.578 386.312 300.984 387.343  c
301.317 388.218 301.812 388.656 302.468 388.656  c
302.791 388.656 303.122 388.513 303.460 388.226  c
303.799 387.940 304.057 387.463 304.234 386.796  c
304.505 385.796 304.640 384.380 304.640 382.546  c
304.640 381.182 304.500 380.046 304.218 379.140  c
304.000 378.463 303.724 377.984 303.390 377.703  c
303.151 377.515 302.864 377.421 302.531 377.421  c
302.125 377.421 301.770 377.599 301.468 377.953  c
301.041 378.442 300.752 379.208 300.601 380.250  c
300.450 381.291 300.375 382.317 300.375 383.328  c
h
f
Q
q
newpath
310.562 374.343 m
314.109 374.343 l
314.109 375.375 l
310.562 375.375 l
310.562 374.343 l
h
f
Q
q
newpath
319.640 369.640 m
321.890 368.531 l
322.125 368.531 l
322.125 376.359 l
322.125 376.880 322.145 377.205 322.187 377.335  c
322.229 377.466 322.317 377.565 322.453 377.632  c
322.588 377.700 322.869 377.739 323.296 377.750  c
323.296 378.000 l
319.812 378.000 l
319.812 377.750 l
320.250 377.739 320.531 377.700 320.656 377.632  c
320.781 377.565 320.869 377.476 320.921 377.367  c
320.974 377.257 321.000 376.921 321.000 376.359  c
321.000 371.359 l
321.000 370.682 320.974 370.250 320.921 370.062  c
320.890 369.916 320.833 369.809 320.750 369.742  c
320.666 369.674 320.567 369.640 320.453 369.640  c
320.276 369.640 320.041 369.708 319.750 369.843  c
319.640 369.640 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
357.148 356.000 m
357.148 361.200 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
newpath
f
Q
q
newpath
354.109 378.250 m
357.015 376.828 l
357.296 376.828 l
357.296 386.906 l
357.296 387.572 357.325 387.987 357.382 388.148  c
357.440 388.309 357.557 388.434 357.734 388.523  c
357.911 388.612 358.265 388.661 358.796 388.671  c
358.796 389.000 l
354.328 389.000 l
354.328 388.671 l
354.890 388.661 355.252 388.614 355.414 388.531  c
355.575 388.447 355.687 388.333 355.750 388.187  c
355.812 388.041 355.843 387.614 355.843 386.906  c
355.843 380.468 l
355.843 379.604 355.817 379.046 355.765 378.796  c
355.724 378.609 355.648 378.471 355.539 378.382  c
355.429 378.294 355.296 378.250 355.140 378.250  c
354.932 378.250 354.630 378.338 354.234 378.515  c
354.109 378.250 l
h
361.656 383.109 m
361.656 381.755 361.859 380.585 362.265 379.601  c
362.671 378.617 363.218 377.885 363.906 377.406  c
364.427 377.020 364.968 376.828 365.531 376.828  c
366.447 376.828 367.270 377.296 368.000 378.234  c
368.906 379.390 369.359 380.953 369.359 382.921  c
369.359 384.307 369.158 385.484 368.757 386.453  c
368.356 387.421 367.849 388.125 367.234 388.562  c
366.619 389.000 366.026 389.218 365.453 389.218  c
364.317 389.218 363.369 388.546 362.609 387.203  c
361.974 386.067 361.656 384.703 361.656 383.109  c
h
363.375 383.328 m
363.375 384.974 363.578 386.312 363.984 387.343  c
364.317 388.218 364.812 388.656 365.468 388.656  c
365.791 388.656 366.122 388.513 366.460 388.226  c
366.799 387.940 367.057 387.463 367.234 386.796  c
367.505 385.796 367.640 384.380 367.640 382.546  c
367.640 381.182 367.500 380.046 367.218 379.140  c
367.000 378.463 366.724 377.984 366.390 377.703  c
366.151 377.515 365.864 377.421 365.531 377.421  c
365.125 377.421 364.770 377.599 364.468 377.953  c
364.041 378.442 363.752 379.208 363.601 380.250  c
363.450 381.291 363.375 382.317 363.375 383.328  c
h
f
Q
q
newpath
370.500 373.421 m
370.500 372.359 370.661 371.447 370.984 370.687  c
371.307 369.927 371.729 369.359 372.250 368.984  c
372.666 368.682 373.093 368.531 373.531 368.531  c
374.239 368.531 374.875 368.895 375.437 369.625  c
376.145 370.520 376.500 371.739 376.500 373.281  c
376.500 374.354 376.346 375.265 376.039 376.015  c
375.731 376.765 375.335 377.312 374.851 377.656  c
374.367 378.000 373.901 378.171 373.453 378.171  c
372.578 378.171 371.843 377.645 371.250 376.593  c
370.750 375.718 370.500 374.661 370.500 373.421  c
h
371.843 373.593 m
371.843 374.864 372.000 375.906 372.312 376.718  c
372.572 377.395 372.963 377.734 373.484 377.734  c
373.724 377.734 373.976 377.622 374.242 377.398  c
374.507 377.174 374.708 376.807 374.843 376.296  c
375.052 375.505 375.156 374.395 375.156 372.968  c
375.156 371.916 375.046 371.036 374.828 370.328  c
374.671 369.807 374.463 369.437 374.203 369.218  c
374.015 369.062 373.786 368.984 373.515 368.984  c
373.213 368.984 372.937 369.125 372.687 369.406  c
372.364 369.781 372.143 370.375 372.023 371.187  c
371.903 372.000 371.843 372.802 371.843 373.593  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
38.1000 52.6052 m
35.5000 52.6052 l
S
newpath
38.1000 132.702 m
35.5000 132.702 l
S
newpath
38.1000 208.983 m
35.5000 208.983 l
S
newpath
38.1000 281.795 m
35.5000 281.795 l
S
newpath
38.1000 351.441 m
35.5000 351.441 l
S
newpath
38.1000 356.000 m
38.1000 8.00293 l
S
newpath
388.999 356.000 m
388.999 8.00293 l
S
Q
[ 0 -1.00000 1.00000 0 -196.000 168.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
-36 167 34 31 rc
Q
cliprestore
newpath
-227.000 201.000 m
-227.000 591.000 l
163.000 591.000 l
163.000 201.000 l
h
W
Q
[ 0 -1.00000 1.00000 0 -196.000 168.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
q
q
newpath
38.1000 316.997 m
32.9000 316.997 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 313 10 18 rc
q
newpath
20.9375 323.062 m
9.06250 323.062 l
9.06250 322.125 l
20.9375 322.125 l
20.9375 323.062 l
h
f
Q
Q
q
newpath
27.2500 325.703 m
26.4218 328.000 l
19.3906 328.000 l
19.3906 327.671 l
21.4531 325.786 22.9062 324.247 23.7500 323.054  c
24.5937 321.862 25.0156 320.765 25.0156 319.765  c
25.0156 319.015 24.7838 318.398 24.3203 317.914  c
23.8567 317.429 23.3072 317.187 22.6718 317.187  c
22.0781 317.187 21.5494 317.356 21.0859 317.695  c
20.6224 318.033 20.2812 318.536 20.0625 319.203  c
19.7343 319.203 l
19.8802 318.119 20.2552 317.286 20.8593 316.703  c
21.4635 316.119 22.2187 315.828 23.1250 315.828  c
24.0937 315.828 24.9036 316.140 25.5546 316.765  c
26.2057 317.390 26.5312 318.125 26.5312 318.968  c
26.5312 319.572 26.3906 320.177 26.1093 320.781  c
25.6718 321.729 24.9687 322.734 24.0000 323.796  c
22.5312 325.390 21.6197 326.349 21.2656 326.671  c
24.3750 326.671 l
25.0000 326.671 25.4401 326.648 25.6953 326.601  c
25.9505 326.554 26.1822 326.458 26.3906 326.312  c
26.5989 326.166 26.7760 325.963 26.9218 325.703  c
27.2500 325.703 l
h
28.9218 318.343 m
29.2552 317.541 29.6822 316.921 30.2031 316.484  c
30.7239 316.046 31.3697 315.828 32.1406 315.828  c
33.0989 315.828 33.8333 316.140 34.3437 316.765  c
34.7291 317.234 34.9218 317.729 34.9218 318.250  c
34.9218 319.114 34.3750 320.010 33.2812 320.937  c
34.0104 321.229 34.5625 321.640 34.9375 322.171  c
35.3125 322.703 35.5000 323.328 35.5000 324.046  c
35.5000 325.078 35.1718 325.974 34.5156 326.734  c
33.6614 327.724 32.4218 328.218 30.7968 328.218  c
29.9947 328.218 29.4505 328.117 29.1640 327.914  c
28.8776 327.710 28.7343 327.494 28.7343 327.265  c
28.7343 327.099 28.8020 326.950 28.9375 326.820  c
29.0729 326.690 29.2395 326.625 29.4375 326.625  c
29.5833 326.625 29.7291 326.651 29.8750 326.703  c
29.9791 326.734 30.2057 326.841 30.5546 327.023  c
30.9036 327.205 31.1458 327.312 31.2812 327.343  c
31.5000 327.416 31.7343 327.453 31.9843 327.453  c
32.5781 327.453 33.0963 327.221 33.5390 326.757  c
33.9817 326.294 34.2031 325.744 34.2031 325.109  c
34.2031 324.640 34.0989 324.187 33.8906 323.750  c
33.7447 323.427 33.5781 323.177 33.3906 323.000  c
33.1406 322.770 32.7968 322.559 32.3593 322.367  c
31.9218 322.174 31.4739 322.078 31.0156 322.078  c
30.7343 322.078 l
30.7343 321.828 l
31.1927 321.765 31.6562 321.596 32.1250 321.320  c
32.5937 321.044 32.9322 320.713 33.1406 320.328  c
33.3489 319.942 33.4531 319.515 33.4531 319.046  c
33.4531 318.442 33.2656 317.955 32.8906 317.585  c
32.5156 317.216 32.0468 317.031 31.4843 317.031  c
30.5781 317.031 29.8177 317.515 29.2031 318.484  c
28.9218 318.343 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.1000 245.803 m
32.9000 245.803 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 242 10 18 rc
q
newpath
20.9375 252.062 m
9.06250 252.062 l
9.06250 251.125 l
20.9375 251.125 l
20.9375 252.062 l
h
f
Q
Q
q
newpath
27.2500 254.703 m
26.4218 257.000 l
19.3906 257.000 l
19.3906 256.671 l
21.4531 254.786 22.9062 253.247 23.7500 252.054  c
24.5937 250.862 25.0156 249.765 25.0156 248.765  c
25.0156 248.015 24.7838 247.398 24.3203 246.914  c
23.8567 246.429 23.3072 246.187 22.6718 246.187  c
22.0781 246.187 21.5494 246.356 21.0859 246.695  c
20.6224 247.033 20.2812 247.536 20.0625 248.203  c
19.7343 248.203 l
19.8802 247.119 20.2552 246.286 20.8593 245.703  c
21.4635 245.119 22.2187 244.828 23.1250 244.828  c
24.0937 244.828 24.9036 245.140 25.5546 245.765  c
26.2057 246.390 26.5312 247.125 26.5312 247.968  c
26.5312 248.572 26.3906 249.177 26.1093 249.781  c
25.6718 250.729 24.9687 251.734 24.0000 252.796  c
22.5312 254.390 21.6197 255.349 21.2656 255.671  c
24.3750 255.671 l
25.0000 255.671 25.4401 255.648 25.6953 255.601  c
25.9505 255.554 26.1822 255.458 26.3906 255.312  c
26.5989 255.166 26.7760 254.963 26.9218 254.703  c
27.2500 254.703 l
h
36.2500 254.703 m
35.4218 257.000 l
28.3906 257.000 l
28.3906 256.671 l
30.4531 254.786 31.9062 253.247 32.7500 252.054  c
33.5937 250.862 34.0156 249.765 34.0156 248.765  c
34.0156 248.015 33.7838 247.398 33.3203 246.914  c
32.8567 246.429 32.3072 246.187 31.6718 246.187  c
31.0781 246.187 30.5494 246.356 30.0859 246.695  c
29.6224 247.033 29.2812 247.536 29.0625 248.203  c
28.7343 248.203 l
28.8802 247.119 29.2552 246.286 29.8593 245.703  c
30.4635 245.119 31.2187 244.828 32.1250 244.828  c
33.0937 244.828 33.9036 245.140 34.5546 245.765  c
35.2057 246.390 35.5312 247.125 35.5312 247.968  c
35.5312 248.572 35.3906 249.177 35.1093 249.781  c
34.6718 250.729 33.9687 251.734 33.0000 252.796  c
31.5312 254.390 30.6197 255.349 30.2656 255.671  c
33.3750 255.671 l
34.0000 255.671 34.4401 255.648 34.6953 255.601  c
34.9505 255.554 35.1822 255.458 35.3906 255.312  c
35.5989 255.166 35.7760 254.963 35.9218 254.703  c
36.2500 254.703 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.1000 171.296 m
32.9000 171.296 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 168 10 18 rc
q
newpath
20.9375 178.062 m
9.06250 178.062 l
9.06250 177.125 l
20.9375 177.125 l
20.9375 178.062 l
h
f
Q
Q
q
newpath
27.2500 180.703 m
26.4218 183.000 l
19.3906 183.000 l
19.3906 182.671 l
21.4531 180.786 22.9062 179.247 23.7500 178.054  c
24.5937 176.862 25.0156 175.765 25.0156 174.765  c
25.0156 174.015 24.7838 173.398 24.3203 172.914  c
23.8567 172.429 23.3072 172.187 22.6718 172.187  c
22.0781 172.187 21.5494 172.356 21.0859 172.695  c
20.6224 173.033 20.2812 173.536 20.0625 174.203  c
19.7343 174.203 l
19.8802 173.119 20.2552 172.286 20.8593 171.703  c
21.4635 171.119 22.2187 170.828 23.1250 170.828  c
24.0937 170.828 24.9036 171.140 25.5546 171.765  c
26.2057 172.390 26.5312 173.125 26.5312 173.968  c
26.5312 174.572 26.3906 175.177 26.1093 175.781  c
25.6718 176.729 24.9687 177.734 24.0000 178.796  c
22.5312 180.390 21.6197 181.349 21.2656 181.671  c
24.3750 181.671 l
25.0000 181.671 25.4401 181.648 25.6953 181.601  c
25.9505 181.554 26.1822 181.458 26.3906 181.312  c
26.5989 181.166 26.7760 180.963 26.9218 180.703  c
27.2500 180.703 l
h
30.1093 172.250 m
33.0156 170.828 l
33.2968 170.828 l
33.2968 180.906 l
33.2968 181.572 33.3255 181.987 33.3828 182.148  c
33.4401 182.309 33.5572 182.434 33.7343 182.523  c
33.9114 182.612 34.2656 182.661 34.7968 182.671  c
34.7968 183.000 l
30.3281 183.000 l
30.3281 182.671 l
30.8906 182.661 31.2526 182.614 31.4140 182.531  c
31.5755 182.447 31.6875 182.333 31.7500 182.187  c
31.8125 182.041 31.8437 181.614 31.8437 180.906  c
31.8437 174.468 l
31.8437 173.604 31.8177 173.046 31.7656 172.796  c
31.7239 172.609 31.6484 172.471 31.5390 172.382  c
31.4296 172.294 31.2968 172.250 31.1406 172.250  c
30.9322 172.250 30.6302 172.338 30.2343 172.515  c
30.1093 172.250 l
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.1000 93.1543 m
32.9000 93.1543 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 90 10 18 rc
q
newpath
20.9375 100.062 m
9.06250 100.062 l
9.06250 99.1250 l
20.9375 99.1250 l
20.9375 100.062 l
h
f
Q
Q
q
newpath
27.2500 102.703 m
26.4218 105.000 l
19.3906 105.000 l
19.3906 104.671 l
21.4531 102.786 22.9062 101.247 23.7500 100.054  c
24.5937 98.8619 25.0156 97.7656 25.0156 96.7656  c
25.0156 96.0156 24.7838 95.3984 24.3203 94.9140  c
23.8567 94.4296 23.3072 94.1875 22.6718 94.1875  c
22.0781 94.1875 21.5494 94.3567 21.0859 94.6953  c
20.6224 95.0338 20.2812 95.5364 20.0625 96.2031  c
19.7343 96.2031 l
19.8802 95.1197 20.2552 94.2864 20.8593 93.7031  c
21.4635 93.1197 22.2187 92.8281 23.1250 92.8281  c
24.0937 92.8281 24.9036 93.1406 25.5546 93.7656  c
26.2057 94.3906 26.5312 95.1250 26.5312 95.9687  c
26.5312 96.5729 26.3906 97.1770 26.1093 97.7812  c
25.6718 98.7291 24.9687 99.7343 24.0000 100.796  c
22.5312 102.390 21.6197 103.349 21.2656 103.671  c
24.3750 103.671 l
25.0000 103.671 25.4401 103.648 25.6953 103.601  c
25.9505 103.554 26.1822 103.458 26.3906 103.312  c
26.5989 103.166 26.7760 102.963 26.9218 102.703  c
27.2500 102.703 l
h
28.6562 99.1093 m
28.6562 97.7552 28.8593 96.5859 29.2656 95.6015  c
29.6718 94.6171 30.2187 93.8854 30.9062 93.4062  c
31.4270 93.0208 31.9687 92.8281 32.5312 92.8281  c
33.4479 92.8281 34.2708 93.2968 35.0000 94.2343  c
35.9062 95.3906 36.3593 96.9531 36.3593 98.9218  c
36.3593 100.307 36.1588 101.484 35.7578 102.453  c
35.3567 103.421 34.8489 104.125 34.2343 104.562  c
33.6197 105.000 33.0260 105.218 32.4531 105.218  c
31.3177 105.218 30.3697 104.546 29.6093 103.203  c
28.9739 102.067 28.6562 100.703 28.6562 99.1093  c
h
30.3750 99.3281 m
30.3750 100.974 30.5781 102.312 30.9843 103.343  c
31.3177 104.218 31.8125 104.656 32.4687 104.656  c
32.7916 104.656 33.1224 104.513 33.4609 104.226  c
33.7994 103.940 34.0572 103.463 34.2343 102.796  c
34.5052 101.796 34.6406 100.380 34.6406 98.5468  c
34.6406 97.1822 34.5000 96.0468 34.2187 95.1406  c
34.0000 94.4635 33.7239 93.9843 33.3906 93.7031  c
33.1510 93.5156 32.8645 93.4218 32.5312 93.4218  c
32.1250 93.4218 31.7708 93.5989 31.4687 93.9531  c
31.0416 94.4427 30.7526 95.2083 30.6015 96.2500  c
30.4505 97.2916 30.3750 98.3177 30.3750 99.3281  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
38.1000 11.0029 m
32.9000 11.0029 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 8 10 18 rc
q
newpath
20.9375 18.0625 m
9.06250 18.0625 l
9.06250 17.1250 l
20.9375 17.1250 l
20.9375 18.0625 l
h
f
Q
Q
q
newpath
21.1093 12.2500 m
24.0156 10.8281 l
24.2968 10.8281 l
24.2968 20.9062 l
24.2968 21.5729 24.3255 21.9869 24.3828 22.1484  c
24.4401 22.3099 24.5572 22.4349 24.7343 22.5234  c
24.9114 22.6119 25.2656 22.6614 25.7968 22.6718  c
25.7968 23.0000 l
21.3281 23.0000 l
21.3281 22.6718 l
21.8906 22.6614 22.2526 22.6145 22.4140 22.5312  c
22.5755 22.4479 22.6875 22.3333 22.7500 22.1875  c
22.8125 22.0416 22.8437 21.6145 22.8437 20.9062  c
22.8437 14.4687 l
22.8437 13.6041 22.8177 13.0468 22.7656 12.7968  c
22.7239 12.6093 22.6484 12.4713 22.5390 12.3828  c
22.4296 12.2942 22.2968 12.2500 22.1406 12.2500  c
21.9322 12.2500 21.6302 12.3385 21.2343 12.5156  c
21.1093 12.2500 l
h
28.9531 23.2500 m
28.9531 22.9218 l
29.7135 22.9114 30.4218 22.7343 31.0781 22.3906  c
31.7343 22.0468 32.3671 21.4479 32.9765 20.5937  c
33.5859 19.7395 34.0156 18.7968 34.2656 17.7656  c
33.3385 18.3593 32.5052 18.6562 31.7656 18.6562  c
30.9218 18.6562 30.2031 18.3333 29.6093 17.6875  c
29.0156 17.0416 28.7187 16.1822 28.7187 15.1093  c
28.7187 14.0677 29.0156 13.1406 29.6093 12.3281  c
30.3281 11.3281 31.2708 10.8281 32.4375 10.8281  c
33.4062 10.8281 34.2395 11.2343 34.9375 12.0468  c
35.8020 13.0468 36.2343 14.2812 36.2343 15.7500  c
36.2343 17.0833 35.9088 18.3229 35.2578 19.4687  c
34.6067 20.6145 33.6979 21.5625 32.5312 22.3125  c
31.5937 22.9375 30.5677 23.2500 29.4531 23.2500  c
28.9531 23.2500 l
h
34.4062 17.1250 m
34.5104 16.3645 34.5625 15.7552 34.5625 15.2968  c
34.5625 14.7239 34.4661 14.1093 34.2734 13.4531  c
34.0807 12.7968 33.8046 12.2916 33.4453 11.9375  c
33.0859 11.5833 32.6822 11.4062 32.2343 11.4062  c
31.7135 11.4062 31.2578 11.6406 30.8671 12.1093  c
30.4765 12.5781 30.2812 13.2760 30.2812 14.2031  c
30.2812 15.4427 30.5416 16.4114 31.0625 17.1093  c
31.4375 17.6093 31.9062 17.8593 32.4687 17.8593  c
32.7395 17.8593 33.0599 17.7942 33.4296 17.6640  c
33.7994 17.5338 34.1250 17.3541 34.4062 17.1250  c
h
f
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
