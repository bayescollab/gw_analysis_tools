var searchData=
[
  ['p_5fn_5fdetector',['p_N_detector',['../d7/d23/detector__util_8cpp.html#aad9c958bcdfcfc478c0f3bcc2f8017d5',1,'p_N_detector(double omega, int samples, int N_detectors, std::string *detectors, int rand_seed):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#aad9c958bcdfcfc478c0f3bcc2f8017d5',1,'p_N_detector(double omega, int samples, int N_detectors, std::string *detectors, int rand_seed):&#160;detector_util.cpp']]],
  ['p_5fsingle_5fdetector',['p_single_detector',['../d7/d23/detector__util_8cpp.html#a742264b5eeff1d244e299d47cb7fa084',1,'p_single_detector(double omega, int samples):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a742264b5eeff1d244e299d47cb7fa084',1,'p_single_detector(double omega, int samples):&#160;detector_util.cpp']]],
  ['p_5fsingle_5fdetector_5ffit',['p_single_detector_fit',['../d7/d23/detector__util_8cpp.html#a0af90e8d6505794a792d2b35bf583bef',1,'p_single_detector_fit(double omega):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a0af90e8d6505794a792d2b35bf583bef',1,'p_single_detector_fit(double omega):&#160;detector_util.cpp']]],
  ['p_5fsingle_5fdetector_5finterp',['p_single_detector_interp',['../d7/d23/detector__util_8cpp.html#a38cf74dd41080e18fc64000605019c50',1,'p_single_detector_interp(double omega):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a38cf74dd41080e18fc64000605019c50',1,'p_single_detector_interp(double omega):&#160;detector_util.cpp']]],
  ['p_5ftriple_5fdetector_5ffit',['p_triple_detector_fit',['../d7/d23/detector__util_8cpp.html#a8470b24a84da4e746ee95ff9bb87bbbc',1,'p_triple_detector_fit(double omega):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a8470b24a84da4e746ee95ff9bb87bbbc',1,'p_triple_detector_fit(double omega):&#160;detector_util.cpp']]],
  ['p_5ftriple_5fdetector_5finterp',['p_triple_detector_interp',['../d7/d23/detector__util_8cpp.html#a2806107bf836833162b1f7e2b78b14d5',1,'p_triple_detector_interp(double omega):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a2806107bf836833162b1f7e2b78b14d5',1,'p_triple_detector_interp(double omega):&#160;detector_util.cpp']]],
  ['parallel_5fsample',['parallel_sample',['../dd/dc3/mc__reject_8cpp.html#a8e7fcdc575532164d9f76f27102b4c9a',1,'parallel_sample(int threadid, mcr_job job):&#160;mc_reject.cpp'],['../df/dab/mc__reject_8h.html#a8e7fcdc575532164d9f76f27102b4c9a',1,'parallel_sample(int threadid, mcr_job job):&#160;mc_reject.cpp']]],
  ['phase_5fconnection_5fcoefficients',['phase_connection_coefficients',['../d2/d3d/classIMRPhenomD.html#a6847c2c48302ff863b9a93354e71afcc',1,'IMRPhenomD']]],
  ['phase_5fins',['phase_ins',['../de/dcd/classgIMRPhenomD.html#a7f4ebb4ae13d1038a437f86862f6dce1',1,'gIMRPhenomD::phase_ins()'],['../d9/df1/classgIMRPhenomPv2.html#a38af0a8b925f448bf7f865cb6c2d4483',1,'gIMRPhenomPv2::phase_ins()'],['../d2/d3d/classIMRPhenomD.html#a7073ff2be22b0251ca419d0b69dd9990',1,'IMRPhenomD::phase_ins()'],['../d7/d38/classppE__IMRPhenomD__Inspiral.html#a3187c9dba10e42f0bf20fb1e3bac9a52',1,'ppE_IMRPhenomD_Inspiral::phase_ins()'],['../d1/df8/classppE__IMRPhenomPv2__Inspiral.html#a829118c33d81ed4bcc4b48e7349c58f6',1,'ppE_IMRPhenomPv2_Inspiral::phase_ins()']]],
  ['phase_5fint',['phase_int',['../d2/d3d/classIMRPhenomD.html#ad6a8bb9539e7494cad8a91aaa950cf50',1,'IMRPhenomD::phase_int()'],['../d6/d55/classppE__IMRPhenomD__IMR.html#a04dc31c54da6e199db28197665b469a1',1,'ppE_IMRPhenomD_IMR::phase_int()'],['../da/dbc/classppE__IMRPhenomPv2__IMR.html#a713b095dacec9472b5361c1caf884347',1,'ppE_IMRPhenomPv2_IMR::phase_int()']]],
  ['phase_5fmr',['phase_mr',['../d2/d3d/classIMRPhenomD.html#a2c9c226afc991458872e36bba204f395',1,'IMRPhenomD::phase_mr()'],['../d6/d55/classppE__IMRPhenomD__IMR.html#a3b64e9bbf566450687bcfaa85c0e493f',1,'ppE_IMRPhenomD_IMR::phase_mr()'],['../da/dbc/classppE__IMRPhenomPv2__IMR.html#a498e1d8b7ea85028b295feb9487ca066',1,'ppE_IMRPhenomPv2_IMR::phase_mr()']]],
  ['phase_5ftape',['phase_tape',['../d2/d3d/classIMRPhenomD.html#ae456c25f87c34487e6e05f9cf5d2d08c',1,'IMRPhenomD']]],
  ['phenompv2_5fjsf_5ffrom_5fparams',['PhenomPv2_JSF_from_params',['../d5/dc6/classIMRPhenomPv2.html#a9c81435792ee35948b3e7b3438c1ef1e',1,'IMRPhenomPv2']]],
  ['phenompv2_5fparam_5ftransform',['PhenomPv2_Param_Transform',['../d5/dc6/classIMRPhenomPv2.html#ae8f253a1feebc43995dd5d052c856e05',1,'IMRPhenomPv2']]],
  ['phenompv2_5fparam_5ftransform_5fj',['PhenomPv2_Param_Transform_J',['../d5/dc6/classIMRPhenomPv2.html#a684f1bbc22773a72e8000de61c1b6def',1,'IMRPhenomPv2']]],
  ['phenompv2_5fparam_5ftransform_5freduced',['PhenomPv2_Param_Transform_reduced',['../d5/dc6/classIMRPhenomPv2.html#a09917aef3521bd8e3b8d8516930077a0',1,'IMRPhenomPv2']]],
  ['phi',['phi',['../d6/dea/classgen__params__base.html#a500f71cd641e52356d6371894f7d8a07',1,'gen_params_base']]],
  ['phi_5fl',['phi_l',['../d6/dea/classgen__params__base.html#aaec5fafce24e74b099b713f47d25045f',1,'gen_params_base']]],
  ['planforward',['planforward',['../d3/d8e/classthreaded__ac__jobs__fft.html#ac862074b94a8a1403f355110bf428cfc',1,'threaded_ac_jobs_fft']]],
  ['planreverse',['planreverse',['../d3/d8e/classthreaded__ac__jobs__fft.html#a9f821f5df06f0dd6b223444759143c0e',1,'threaded_ac_jobs_fft']]],
  ['pn_5fwaveform_5futil_2ecpp',['pn_waveform_util.cpp',['../d9/d37/pn__waveform__util_8cpp.html',1,'']]],
  ['pn_5fwaveform_5futil_2eh',['pn_waveform_util.h',['../df/dc1/pn__waveform__util_8h.html',1,'']]],
  ['populate_5fnoise',['populate_noise',['../d7/d23/detector__util_8cpp.html#a96e8f667b0106557c0c285dc658b8ac3',1,'populate_noise(double *frequencies, std::string detector, double *noise_root, int length, double integration_time):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a190c1fc72354b7777f3d67261fcee374',1,'populate_noise(double *frequencies, std::string detector, double *noise_root, int length, double integration_time=48):&#160;detector_util.cpp']]],
  ['populate_5fsource_5fparameters',['populate_source_parameters',['../dd/d34/structsource__parameters.html#aa2ccc130dc3729613080a59215655aec',1,'source_parameters']]],
  ['populate_5fsource_5fparameters_5fold',['populate_source_parameters_old',['../dd/d34/structsource__parameters.html#a1b9db2c7d8abf202ca908fd4e58b0949',1,'source_parameters']]],
  ['post_5fmerger_5fvariables',['post_merger_variables',['../d2/d3d/classIMRPhenomD.html#a0d33a9a937a36f395300bab4276102af',1,'IMRPhenomD']]],
  ['postmerger_5fparams',['postmerger_params',['../d1/d3f/waveform__util_8cpp.html#a8ee807356a4303fb65463fde5286ea28',1,'postmerger_params(gen_params_base&lt; T &gt; *params, std::string generation_method, T *fpeak, T *fdamp, T *fRD):&#160;waveform_util.cpp'],['../d8/d00/waveform__util_8h.html#a8ee807356a4303fb65463fde5286ea28',1,'postmerger_params(gen_params_base&lt; T &gt; *params, std::string generation_method, T *fpeak, T *fdamp, T *fRD):&#160;waveform_util.cpp']]],
  ['pow_5fint',['pow_int',['../df/d2d/util_8cpp.html#a362581f25c83753aefac698e977cb73e',1,'pow_int(double base, int power):&#160;util.cpp'],['../d8/d3c/util_8h.html#a362581f25c83753aefac698e977cb73e',1,'pow_int(double base, int power):&#160;util.cpp']]],
  ['powerlaw_5ffrom_5funiform',['powerlaw_from_uniform',['../df/d2d/util_8cpp.html#a18c22e7aa3a49af21903a0e6779939de',1,'powerlaw_from_uniform(double x0, double x1, double power, double uniform_random_number):&#160;util.cpp'],['../d8/d3c/util_8h.html#a18c22e7aa3a49af21903a0e6779939de',1,'powerlaw_from_uniform(double x0, double x1, double power, double uniform_random_number):&#160;util.cpp']]],
  ['ppe_5fgimr_5fmapping',['ppE_gIMR_mapping',['../de/dcd/classgIMRPhenomD.html#a740109e9ea8670dd46e2bee0fa633538',1,'gIMRPhenomD']]],
  ['ppe_5fimrphenomd_2ecpp',['ppE_IMRPhenomD.cpp',['../d8/dce/ppE__IMRPhenomD_8cpp.html',1,'']]],
  ['ppe_5fimrphenomd_2eh',['ppE_IMRPhenomD.h',['../d4/d80/ppE__IMRPhenomD_8h.html',1,'']]],
  ['ppe_5fimrphenomd_5fimr',['ppE_IMRPhenomD_IMR',['../d6/d55/classppE__IMRPhenomD__IMR.html',1,'']]],
  ['ppe_5fimrphenomd_5finspiral',['ppE_IMRPhenomD_Inspiral',['../d7/d38/classppE__IMRPhenomD__Inspiral.html',1,'']]],
  ['ppe_5fimrphenomp_2ecpp',['ppE_IMRPhenomP.cpp',['../d8/d80/ppE__IMRPhenomP_8cpp.html',1,'']]],
  ['ppe_5fimrphenomp_2eh',['ppE_IMRPhenomP.h',['../d2/df2/ppE__IMRPhenomP_8h.html',1,'']]],
  ['ppe_5fimrphenompv2_5fimr',['ppE_IMRPhenomPv2_IMR',['../da/dbc/classppE__IMRPhenomPv2__IMR.html',1,'']]],
  ['ppe_5fimrphenompv2_5finspiral',['ppE_IMRPhenomPv2_Inspiral',['../d1/df8/classppE__IMRPhenomPv2__Inspiral.html',1,'']]],
  ['ppe_5ftheory_5fcovariance_5ftransformation',['ppE_theory_covariance_transformation',['../db/dd7/fisher_8cpp.html#ac47e3de572425bad945ddd38d0dfa9d7',1,'ppE_theory_covariance_transformation(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **old_cov, double **new_cov):&#160;fisher.cpp'],['../d1/dbc/fisher_8h.html#ac47e3de572425bad945ddd38d0dfa9d7',1,'ppE_theory_covariance_transformation(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **old_cov, double **new_cov):&#160;fisher.cpp']]],
  ['ppe_5ftheory_5ffisher_5ftransformation',['ppE_theory_fisher_transformation',['../db/dd7/fisher_8cpp.html#a8b73a325268c3d52e99f93aba2aba60e',1,'ppE_theory_fisher_transformation(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **old_fisher, double **new_fisher):&#160;fisher.cpp'],['../d1/dbc/fisher_8h.html#a8b73a325268c3d52e99f93aba2aba60e',1,'ppE_theory_fisher_transformation(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **old_fisher, double **new_fisher):&#160;fisher.cpp']]],
  ['ppe_5ftheory_5ftransformation_5fcalculate_5fderivatives',['ppE_theory_transformation_calculate_derivatives',['../db/dd7/fisher_8cpp.html#ad903809a1b57ad4dfee52ce8384b6ebd',1,'fisher.cpp']]],
  ['ppe_5ftheory_5ftransformation_5fjac',['ppE_theory_transformation_jac',['../db/dd7/fisher_8cpp.html#ac17390e3cb481a816a3e619a4f3f680a',1,'ppE_theory_transformation_jac(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **jac):&#160;fisher.cpp'],['../d1/dbc/fisher_8h.html#ac17390e3cb481a816a3e619a4f3f680a',1,'ppE_theory_transformation_jac(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **jac):&#160;fisher.cpp']]],
  ['precalc_5fpowers_5fins',['precalc_powers_ins',['../d2/d3d/classIMRPhenomD.html#ade98ea0729f58a3216ecec948dec9e4a',1,'IMRPhenomD']]],
  ['precalc_5fpowers_5fins_5famp',['precalc_powers_ins_amp',['../d2/d3d/classIMRPhenomD.html#ac25dfdbacff0e696d752db44dd0a6c6b',1,'IMRPhenomD']]],
  ['precalc_5fpowers_5fins_5fphase',['precalc_powers_ins_phase',['../d2/d3d/classIMRPhenomD.html#aa4647f539a66554bcc5066861328cf06',1,'IMRPhenomD']]],
  ['precalc_5fpowers_5fpi',['precalc_powers_PI',['../d2/d3d/classIMRPhenomD.html#a1181334310432c4d69ede3a3b2b0fcdb',1,'IMRPhenomD']]],
  ['printprogress',['printProgress',['../df/d2d/util_8cpp.html#a9d3b483a858efb84ce776bed255b6dd6',1,'printProgress(double percentage):&#160;util.cpp'],['../d8/d3c/util_8h.html#a9d3b483a858efb84ce776bed255b6dd6',1,'printProgress(double percentage):&#160;util.cpp']]],
  ['pt_5fdynamical_5ftimescale',['PT_dynamical_timescale',['../d9/dfd/mcmc__sampler__internals_8cpp.html#a1f07e7540a20f438aad42f569c2e22d2',1,'PT_dynamical_timescale(int t0, int nu, int t):&#160;mcmc_sampler_internals.cpp'],['../d5/dac/mcmc__sampler__internals_8h.html#a1f07e7540a20f438aad42f569c2e22d2',1,'PT_dynamical_timescale(int t0, int nu, int t):&#160;mcmc_sampler_internals.cpp']]],
  ['ptmcmc_5fmethod_5fspecific_5fprep',['PTMCMC_method_specific_prep',['../de/dbe/mcmc__gw_8cpp.html#a419df9528f286aba805c9dfa66118441',1,'PTMCMC_method_specific_prep(std::string generation_method, int dimension, double *seeding_var, bool local_seeding):&#160;mcmc_gw.cpp'],['../de/d8d/mcmc__gw_8h.html#a419df9528f286aba805c9dfa66118441',1,'PTMCMC_method_specific_prep(std::string generation_method, int dimension, double *seeding_var, bool local_seeding):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh',['PTMCMC_MH',['../d6/dd4/mcmc__sampler_8cpp.html#adc8c2c37c7af12d40b199201036874da',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../d6/dd4/mcmc__sampler_8cpp.html#a3805987151dcb4538016b063d14527f0',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a020ceda170e2318477f7a4795325cbd7',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_filename):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a4b1e9b32bf11b9b07e4f9bda1aff4818',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_filename):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc',['PTMCMC_MH_dynamic_PT_alloc',['../d6/dd4/mcmc__sampler_8cpp.html#a6948b08964cbc8335d6bf17d001d16a8',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../d6/dd4/mcmc__sampler_8cpp.html#aa13ee90d15b714f337b4ec05edca6e48',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#aa13ee90d15b714f337b4ec05edca6e48',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a6948b08964cbc8335d6bf17d001d16a8',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fgw',['PTMCMC_MH_dynamic_PT_alloc_GW',['../de/dbe/mcmc__gw_8cpp.html#a470a2c1fa859dda2a77f8ccc60c6d084',1,'PTMCMC_MH_dynamic_PT_alloc_GW(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../de/d8d/mcmc__gw_8h.html#a470a2c1fa859dda2a77f8ccc60c6d084',1,'PTMCMC_MH_dynamic_PT_alloc_GW(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5finternal',['PTMCMC_MH_dynamic_PT_alloc_internal',['../d6/dd4/mcmc__sampler_8cpp.html#aebaebeed24a14b02212b95169d9f5e15',1,'PTMCMC_MH_dynamic_PT_alloc_internal(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, bool dynamic_chain_number, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#aebaebeed24a14b02212b95169d9f5e15',1,'PTMCMC_MH_dynamic_PT_alloc_internal(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, bool dynamic_chain_number, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated',['../d6/dd4/mcmc__sampler_8cpp.html#a017885f0dceea5d00421547971475384',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../d6/dd4/mcmc__sampler_8cpp.html#a77e9deac723adb0ef632974c4050ffff',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a77e9deac723adb0ef632974c4050ffff',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a017885f0dceea5d00421547971475384',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5fgw',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW',['../de/dbe/mcmc__gw_8cpp.html#a2a17a3e7b2aa6b4ef629b8b1134fb3c1',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../de/d8d/mcmc__gw_8h.html#a2a17a3e7b2aa6b4ef629b8b1134fb3c1',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5finternal',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal',['../d6/dd4/mcmc__sampler_8cpp.html#a732fc40ca3bbbacacd1b8b32f9e93401',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a732fc40ca3bbbacacd1b8b32f9e93401',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5finternal_5fdriver',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal_driver',['../d6/dd4/mcmc__sampler_8cpp.html#ae32cdd8b461a872a9f49f32f6f8edcfa',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal_driver(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#ae32cdd8b461a872a9f49f32f6f8edcfa',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal_driver(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fgw',['PTMCMC_MH_GW',['../de/dbe/mcmc__gw_8cpp.html#acc081160a72f32b462cb0d3ca381f8bc',1,'PTMCMC_MH_GW(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_gw.cpp'],['../de/d8d/mcmc__gw_8h.html#a3fc0770dfb997e0c3d2aa87673ba3460',1,'PTMCMC_MH_GW(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detector, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_5finternal',['PTMCMC_MH_internal',['../d6/dd4/mcmc__sampler_8cpp.html#ac0eb9d19b33d6b3a34cab381c55ba2c8',1,'PTMCMC_MH_internal(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a92fcf8aa97242dc5b8c7dd9bf4ab6a06',1,'PTMCMC_MH_internal(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_filename):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5floop',['PTMCMC_MH_loop',['../d6/dd4/mcmc__sampler_8cpp.html#aaa8ccb67ad90a3d27d713fcd652adfd2',1,'PTMCMC_MH_loop(sampler *sampler):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#aaa8ccb67ad90a3d27d713fcd652adfd2',1,'PTMCMC_MH_loop(sampler *sampler):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fstep_5fincremental',['PTMCMC_MH_step_incremental',['../d6/dd4/mcmc__sampler_8cpp.html#a772e17f2034573d79c02bfa0ecd8c990',1,'PTMCMC_MH_step_incremental(sampler *sampler, int increment):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a772e17f2034573d79c02bfa0ecd8c990',1,'PTMCMC_MH_step_incremental(sampler *sampler, int increment):&#160;mcmc_sampler.cpp']]]
];
