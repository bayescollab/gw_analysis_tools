var searchData=
[
  ['radius_5fat_5flat',['radius_at_lat',['../d7/d23/detector__util_8cpp.html#adcb816dfe662ececa657888ff18132bd',1,'radius_at_lat(double latitude, double elevation):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#adcb816dfe662ececa657888ff18132bd',1,'radius_at_lat(double latitude, double elevation):&#160;detector_util.cpp']]],
  ['read_5ffile',['read_file',['../da/d12/io__util_8cpp.html#aad742282a09bb261d21080e8874578ba',1,'read_file(std::string filename, double **output, int rows, int cols):&#160;io_util.cpp'],['../da/d12/io__util_8cpp.html#abed5d6708a7adc8cd37ca0d578730b17',1,'read_file(std::string filename, int **output, int rows, int cols):&#160;io_util.cpp'],['../da/d12/io__util_8cpp.html#a788a44b839a09910024159d9d10764d0',1,'read_file(std::string filename, double *output):&#160;io_util.cpp'],['../da/d12/io__util_8cpp.html#a6add7454e404e8305cd6695b0cff428e',1,'read_file(std::string filename, int *output):&#160;io_util.cpp'],['../d8/d9b/io__util_8h.html#aad742282a09bb261d21080e8874578ba',1,'read_file(std::string filename, double **output, int rows, int cols):&#160;io_util.cpp'],['../d8/d9b/io__util_8h.html#abed5d6708a7adc8cd37ca0d578730b17',1,'read_file(std::string filename, int **output, int rows, int cols):&#160;io_util.cpp'],['../d8/d9b/io__util_8h.html#a788a44b839a09910024159d9d10764d0',1,'read_file(std::string filename, double *output):&#160;io_util.cpp'],['../d8/d9b/io__util_8h.html#a6add7454e404e8305cd6695b0cff428e',1,'read_file(std::string filename, int *output):&#160;io_util.cpp']]],
  ['read_5flosc_5fdata_5ffile',['read_LOSC_data_file',['../da/d12/io__util_8cpp.html#abbb4e70ddc93c8995739b3a481bbf3a6',1,'read_LOSC_data_file(std::string filename, double *output, double *data_start_time, double *duration, double *fs):&#160;io_util.cpp'],['../d8/d9b/io__util_8h.html#abbb4e70ddc93c8995739b3a481bbf3a6',1,'read_LOSC_data_file(std::string filename, double *output, double *data_start_time, double *duration, double *fs):&#160;io_util.cpp']]],
  ['read_5flosc_5fpsd_5ffile',['read_LOSC_PSD_file',['../da/d12/io__util_8cpp.html#a089aa96b136d368b0c740c416811c39d',1,'read_LOSC_PSD_file(std::string filename, double **output, int rows, int cols):&#160;io_util.cpp'],['../d8/d9b/io__util_8h.html#a089aa96b136d368b0c740c416811c39d',1,'read_LOSC_PSD_file(std::string filename, double **output, int rows, int cols):&#160;io_util.cpp']]],
  ['reduce_5fextrinsic',['reduce_extrinsic',['../db/dd7/fisher_8cpp.html#aada801108b3d850efe063d91c2d43176',1,'fisher.cpp']]],
  ['reduce_5foutput',['reduce_output',['../d9/dfd/mcmc__sampler__internals_8cpp.html#aca274b24f586441830d2b946d3ee9b99',1,'mcmc_sampler_internals.cpp']]],
  ['repack_5fnon_5fparameter_5foptions',['repack_non_parameter_options',['../db/dd7/fisher_8cpp.html#a92eebd80a98aa7fb1872bb8700702f77',1,'repack_non_parameter_options(gen_params_base&lt; T &gt; *waveform_params, gen_params_base&lt; double &gt; *input_params, std::string gen_method):&#160;fisher.cpp'],['../d1/dbc/fisher_8h.html#a92eebd80a98aa7fb1872bb8700702f77',1,'repack_non_parameter_options(gen_params_base&lt; T &gt; *waveform_params, gen_params_base&lt; double &gt; *input_params, std::string gen_method):&#160;fisher.cpp']]],
  ['repack_5fparameters',['repack_parameters',['../db/dd7/fisher_8cpp.html#ae9abf5e34ebefb45c534eacd8c6d408b',1,'repack_parameters(T *avec_parameters, gen_params_base&lt; T &gt; *a_params, std::string generation_method, int dim, gen_params_base&lt; double &gt; *original_params):&#160;fisher.cpp'],['../d1/dbc/fisher_8h.html#ae9abf5e34ebefb45c534eacd8c6d408b',1,'repack_parameters(T *avec_parameters, gen_params_base&lt; T &gt; *a_params, std::string generation_method, int dim, gen_params_base&lt; double &gt; *original_params):&#160;fisher.cpp']]],
  ['right_5finterferometer',['right_interferometer',['../d7/d23/detector__util_8cpp.html#aba61bbb9ec49fa1a781bc29925ee4f05',1,'right_interferometer(det_res_pat&lt; T &gt; *r_pat, T theta, T phi, T psi):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#aba61bbb9ec49fa1a781bc29925ee4f05',1,'right_interferometer(det_res_pat&lt; T &gt; *r_pat, T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fb',['right_interferometer_b',['../d7/d23/detector__util_8cpp.html#aed0d23e90ea879f1a6fabd1b15ea44b1',1,'right_interferometer_b(T theta, T phi, T psi):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#aed0d23e90ea879f1a6fabd1b15ea44b1',1,'right_interferometer_b(T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fcross',['right_interferometer_cross',['../d7/d23/detector__util_8cpp.html#a3d3d83c7a398244da315cc9a6f0b15df',1,'right_interferometer_cross(T theta, T phi):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a3d3d83c7a398244da315cc9a6f0b15df',1,'right_interferometer_cross(T theta, T phi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fl',['right_interferometer_l',['../d7/d23/detector__util_8cpp.html#a3a648f1c03e4bdfc299e295a6e7bf800',1,'right_interferometer_l(T theta, T phi, T psi):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a3a648f1c03e4bdfc299e295a6e7bf800',1,'right_interferometer_l(T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fplus',['right_interferometer_plus',['../d7/d23/detector__util_8cpp.html#aa60bf261e973bd490d1c83015af22aad',1,'right_interferometer_plus(T theta, T phi):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#aa60bf261e973bd490d1c83015af22aad',1,'right_interferometer_plus(T theta, T phi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fx',['right_interferometer_x',['../d7/d23/detector__util_8cpp.html#a8f39969b71899fdcb11e2a1aebfc38b4',1,'right_interferometer_x(T theta, T phi, T psi):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a8f39969b71899fdcb11e2a1aebfc38b4',1,'right_interferometer_x(T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fy',['right_interferometer_y',['../d7/d23/detector__util_8cpp.html#a3c1df4557169dde7770caf08e9825460',1,'right_interferometer_y(T theta, T phi, T psi):&#160;detector_util.cpp'],['../da/d7a/detector__util_8h.html#a3c1df4557169dde7770caf08e9825460',1,'right_interferometer_y(T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['rj_5fsmooth_5fhistory',['RJ_smooth_history',['../d9/dfd/mcmc__sampler__internals_8cpp.html#a1b5c301686c971e3f9359cdd661529b3',1,'RJ_smooth_history(sampler *sampler, double *current_param, int *current_param_status, int base_history_id, double *eff_history_coord, int *eff_history_status, int chain_id):&#160;mcmc_sampler_internals.cpp'],['../d5/dac/mcmc__sampler__internals_8h.html#a1b5c301686c971e3f9359cdd661529b3',1,'RJ_smooth_history(sampler *sampler, double *current_param, int *current_param_status, int base_history_id, double *eff_history_coord, int *eff_history_status, int chain_id):&#160;mcmc_sampler_internals.cpp']]],
  ['rj_5fstep',['RJ_step',['../d9/dfd/mcmc__sampler__internals_8cpp.html#ae73004b2441610fb3ebb6b148db7eec4',1,'RJ_step(sampler *sampler, double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, int chain_number):&#160;mcmc_sampler_internals.cpp'],['../d5/dac/mcmc__sampler__internals_8h.html#ae73004b2441610fb3ebb6b148db7eec4',1,'RJ_step(sampler *sampler, double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, int chain_number):&#160;mcmc_sampler_internals.cpp']]],
  ['rjptmcmc_5fmethod_5fspecific_5fprep',['RJPTMCMC_method_specific_prep',['../de/dbe/mcmc__gw_8cpp.html#a2e8407e705ac51ccc0e1685858ff946f',1,'RJPTMCMC_method_specific_prep(std::string generation_method, int max_dim, int min_dim, double *seeding_var, bool local_seeding):&#160;mcmc_gw.cpp'],['../de/d8d/mcmc__gw_8h.html#a2e8407e705ac51ccc0e1685858ff946f',1,'RJPTMCMC_method_specific_prep(std::string generation_method, int max_dim, int min_dim, double *seeding_var, bool local_seeding):&#160;mcmc_gw.cpp']]],
  ['rjptmcmc_5fmh',['RJPTMCMC_MH',['../d6/dd4/mcmc__sampler_8cpp.html#a752684398a4c441810545550968434cb',1,'mcmc_sampler.cpp']]],
  ['rjptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fcomprehensive_5f2wf_5fgw',['RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_2WF_GW',['../de/dbe/mcmc__gw_8cpp.html#a7004d90447a5b542e634291e9ec94e21',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_2WF_GW(mcmc_sampler_output *sampler_output, double **output, int **status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double **prior_ranges, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method_base, std::string generation_method_extended, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../de/d8d/mcmc__gw_8h.html#a7004d90447a5b542e634291e9ec94e21',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_2WF_GW(mcmc_sampler_output *sampler_output, double **output, int **status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double **prior_ranges, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method_base, std::string generation_method_extended, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['rjptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fcomprehensive_5finternal',['RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal',['../d6/dd4/mcmc__sampler_8cpp.html#a8ae38e866a03e4c009c9cabd989d4eac',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal(mcmc_sampler_output *sampler_output, double **output, int **parameter_status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a8ae38e866a03e4c009c9cabd989d4eac',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal(mcmc_sampler_output *sampler_output, double **output, int **parameter_status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['rjptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fcomprehensive_5finternal_5fdriver',['RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal_driver',['../d6/dd4/mcmc__sampler_8cpp.html#a1c8f7c799d85e866d9cfdd01d70a2bda',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal_driver(mcmc_sampler_output *sampler_output, double **output, int **status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a1c8f7c799d85e866d9cfdd01d70a2bda',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal_driver(mcmc_sampler_output *sampler_output, double **output, int **status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['rjptmcmc_5fmh_5finternal',['RJPTMCMC_MH_internal',['../d6/dd4/mcmc__sampler_8cpp.html#a115d879a7cc88c6d66ceaf1feee8aafa',1,'RJPTMCMC_MH_internal(double ***output, int ***parameter_status, int **model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a03a9c0abb63eb66e92f193c1265a5eb2',1,'RJPTMCMC_MH_internal(double ***output, int ***parameter_status, int **model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_position, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['rm_5ffisher_5fdim',['rm_fisher_dim',['../df/d2d/util_8cpp.html#aa3b3e1ddc0801e2dcfa09d5683936817',1,'rm_fisher_dim(double **input, int full_dim, double **output, int reduced_dim, int *removed_dims):&#160;util.cpp'],['../d8/d3c/util_8h.html#aa3b3e1ddc0801e2dcfa09d5683936817',1,'rm_fisher_dim(double **input, int full_dim, double **output, int reduced_dim, int *removed_dims):&#160;util.cpp']]]
];
