var searchData=
[
  ['calculate_5fchirpmass',['calculate_chirpmass',['../df/d2d/util_8cpp.html#af7aeeebcf190ab70c667a478a51ce435',1,'calculate_chirpmass(double mass1, double mass2):&#160;util.cpp'],['../d8/d3c/util_8h.html#af7aeeebcf190ab70c667a478a51ce435',1,'calculate_chirpmass(double mass1, double mass2):&#160;util.cpp']]],
  ['calculate_5fdelta_5fparameter_5f0',['calculate_delta_parameter_0',['../d2/d3d/classIMRPhenomD.html#abd81c0aa321c96077823483c91ae01d4',1,'IMRPhenomD']]],
  ['calculate_5fdelta_5fparameter_5f1',['calculate_delta_parameter_1',['../d2/d3d/classIMRPhenomD.html#a6fd680e8cace47a635e7c3956dfb4b32',1,'IMRPhenomD']]],
  ['calculate_5fdelta_5fparameter_5f2',['calculate_delta_parameter_2',['../d2/d3d/classIMRPhenomD.html#acc1918553367dbe59ffb4959b0a0f5b2',1,'IMRPhenomD']]],
  ['calculate_5fdelta_5fparameter_5f3',['calculate_delta_parameter_3',['../d2/d3d/classIMRPhenomD.html#a4201abf06608c7a11adfee232f7eb581',1,'IMRPhenomD']]],
  ['calculate_5fdelta_5fparameter_5f4',['calculate_delta_parameter_4',['../d2/d3d/classIMRPhenomD.html#a22f9b0bc83c4ed555a46b03260c0d91d',1,'IMRPhenomD']]],
  ['calculate_5fderivatives_5fautodiff',['calculate_derivatives_autodiff',['../db/dd7/fisher_8cpp.html#aada6ef4bab65e527ed6ba7e40fbcf309',1,'calculate_derivatives_autodiff(double *frequency, int length, int dimension, std::string generation_method, gen_params *parameters, std::complex&lt; double &gt; **waveform_deriv, int *waveform_tapes, std::string detector, bool autodiff_time_deriv, std::string reference_detector):&#160;fisher.cpp'],['../d1/dbc/fisher_8h.html#aada6ef4bab65e527ed6ba7e40fbcf309',1,'calculate_derivatives_autodiff(double *frequency, int length, int dimension, std::string generation_method, gen_params *parameters, std::complex&lt; double &gt; **waveform_deriv, int *waveform_tapes, std::string detector, bool autodiff_time_deriv, std::string reference_detector):&#160;fisher.cpp']]],
  ['calculate_5feta',['calculate_eta',['../df/d2d/util_8cpp.html#a06ffbad5fe4daa3872db626f90556202',1,'calculate_eta(double mass1, double mass2):&#160;util.cpp'],['../d8/d3c/util_8h.html#a06ffbad5fe4daa3872db626f90556202',1,'calculate_eta(double mass1, double mass2):&#160;util.cpp']]],
  ['calculate_5feuler_5fcoeffs',['calculate_euler_coeffs',['../d5/dc6/classIMRPhenomPv2.html#afc0f88c773f46ab060482bc530f60115',1,'IMRPhenomPv2']]],
  ['calculate_5ffisher_5felements_5fbatch',['calculate_fisher_elements_batch',['../db/dd7/fisher_8cpp.html#adabed0003b88c9a4ffdc4035862219a4',1,'calculate_fisher_elements_batch(double *frequency, int length, int base_dimension, int full_dimension, std::complex&lt; double &gt; **response_deriv, double **output, double *psd, std::string integration_method, double *weights, bool log10_f):&#160;fisher.cpp'],['../d1/dbc/fisher_8h.html#adabed0003b88c9a4ffdc4035862219a4',1,'calculate_fisher_elements_batch(double *frequency, int length, int base_dimension, int full_dimension, std::complex&lt; double &gt; **response_deriv, double **output, double *psd, std::string integration_method, double *weights, bool log10_f):&#160;fisher.cpp']]],
  ['calculate_5fintegrand_5fautodiff_5fgsl_5fsubroutine',['calculate_integrand_autodiff_gsl_subroutine',['../db/dd7/fisher_8cpp.html#a0483f09b0c7a53ae7b65d3dff7385697',1,'calculate_integrand_autodiff_gsl_subroutine(double frequency, void *params_in):&#160;fisher.cpp'],['../d1/dbc/fisher_8h.html#a0483f09b0c7a53ae7b65d3dff7385697',1,'calculate_integrand_autodiff_gsl_subroutine(double frequency, void *params_in):&#160;fisher.cpp']]],
  ['calculate_5fmass1',['calculate_mass1',['../df/d2d/util_8cpp.html#a85a0fc50a6f06dd519a18a6d273a0b4a',1,'calculate_mass1(double chirpmass, double eta):&#160;util.cpp'],['../d8/d3c/util_8h.html#a85a0fc50a6f06dd519a18a6d273a0b4a',1,'calculate_mass1(double chirpmass, double eta):&#160;util.cpp']]],
  ['calculate_5fmass2',['calculate_mass2',['../df/d2d/util_8cpp.html#a5f62f4a7c1011180080d72e0032cef1b',1,'calculate_mass2(double chirpmass, double eta):&#160;util.cpp'],['../d8/d3c/util_8h.html#a5f62f4a7c1011180080d72e0032cef1b',1,'calculate_mass2(double chirpmass, double eta):&#160;util.cpp']]],
  ['calculate_5fsnr',['calculate_snr',['../d1/d3f/waveform__util_8cpp.html#a05babb5fb4cb68076f9d5d7bdd4721c0',1,'calculate_snr(std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double *frequencies, int length, std::string integration_method, double *weights, bool log10_freq):&#160;waveform_util.cpp'],['../d1/d3f/waveform__util_8cpp.html#aa81e29fb23990c77521954d4cf735ce5',1,'calculate_snr(std::string sensitivity_curve, std::complex&lt; double &gt; *waveform, double *frequencies, int length, std::string integration_method, double *weights, bool log10_freq):&#160;waveform_util.cpp'],['../d8/d00/waveform__util_8h.html#adaf1d5381b3ad4774532bf2e496b2893',1,'calculate_snr(std::string sensitivity_curve, std::complex&lt; double &gt; *waveform, double *frequencies, int length, std::string integration_method=&quot;SIMPSONS&quot;, double *weights=NULL, bool log10_freq=false):&#160;waveform_util.cpp'],['../d8/d00/waveform__util_8h.html#a61ef9a5f55e645fb1d67f38e5ff02b19',1,'calculate_snr(std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double *frequencies, int length, std::string integration_method=&quot;SIMPSONS&quot;, double *weights=NULL, bool log10_freq=false):&#160;waveform_util.cpp']]],
  ['calculate_5fsnr_5fgsl',['calculate_snr_gsl',['../d1/d3f/waveform__util_8cpp.html#ae457f376ac6868d88fa7c428a1cc0798',1,'calculate_snr_gsl(double *snr, std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double f_min, double f_max, double relative_error):&#160;waveform_util.cpp'],['../d1/d3f/waveform__util_8cpp.html#a7a6b3d3d9c2f2fee67faef89f435f780',1,'calculate_snr_gsl(double *snr, std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double f_min, double f_max, double relative_error, gsl_integration_workspace *w, int np):&#160;waveform_util.cpp'],['../d8/d00/waveform__util_8h.html#ae457f376ac6868d88fa7c428a1cc0798',1,'calculate_snr_gsl(double *snr, std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double f_min, double f_max, double relative_error):&#160;waveform_util.cpp'],['../d8/d00/waveform__util_8h.html#a7a6b3d3d9c2f2fee67faef89f435f780',1,'calculate_snr_gsl(double *snr, std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double f_min, double f_max, double relative_error, gsl_integration_workspace *w, int np):&#160;waveform_util.cpp']]],
  ['calculate_5ftime_5fshift',['calculate_time_shift',['../d5/dc6/classIMRPhenomPv2.html#a6b27bd676726358b699a35cfbd10fe79',1,'IMRPhenomPv2::calculate_time_shift(source_parameters&lt; double &gt; *params, useful_powers&lt; double &gt; *pows, double *pn_phase_coeffs, lambda_parameters&lt; double &gt; *lambda)'],['../d5/dc6/classIMRPhenomPv2.html#a61ec2bf7f72ec82b5a583e7098b2daab',1,'IMRPhenomPv2::calculate_time_shift(source_parameters&lt; adouble &gt; *params, useful_powers&lt; adouble &gt; *pows, adouble *pn_phase_coeffs, lambda_parameters&lt; adouble &gt; *lambda)']]],
  ['cbrt_5finternal',['cbrt_internal',['../df/d2d/util_8cpp.html#a9e568dd0950bb2aa1ae125c8153b8f4e',1,'cbrt_internal(double base):&#160;util.cpp'],['../df/d2d/util_8cpp.html#a8dfef0b07ebb62c8d9f1f70624fa3e00',1,'cbrt_internal(adouble base):&#160;util.cpp'],['../d8/d3c/util_8h.html#a9e568dd0950bb2aa1ae125c8153b8f4e',1,'cbrt_internal(double base):&#160;util.cpp'],['../d8/d3c/util_8h.html#a8dfef0b07ebb62c8d9f1f70624fa3e00',1,'cbrt_internal(adouble base):&#160;util.cpp']]],
  ['celestial_5fhorizon_5ftransform',['celestial_horizon_transform',['../d7/d23/detector__util_8cpp.html#af252cb74fb621c53ebe8db50f58841d2',1,'celestial_horizon_transform(T RA, T DEC, double gps_time, std::string detector, T *phi, T *theta):&#160;detector_util.cpp'],['../df/d2d/util_8cpp.html#a55f693ec3edcca174373eb928d513dbc',1,'celestial_horizon_transform(T RA, T DEC, double gps_time, T LONG, T LAT, T *phi, T *theta):&#160;util.cpp'],['../da/d7a/detector__util_8h.html#af252cb74fb621c53ebe8db50f58841d2',1,'celestial_horizon_transform(T RA, T DEC, double gps_time, std::string detector, T *phi, T *theta):&#160;detector_util.cpp'],['../d8/d3c/util_8h.html#a55f693ec3edcca174373eb928d513dbc',1,'celestial_horizon_transform(T RA, T DEC, double gps_time, T LONG, T LAT, T *phi, T *theta):&#160;util.cpp']]],
  ['chain_5fnumber_5ffrom_5fcheckpoint_5ffile',['chain_number_from_checkpoint_file',['../d9/dfd/mcmc__sampler__internals_8cpp.html#aecfd6c1ef213a233c95a98ae87897123',1,'chain_number_from_checkpoint_file(std::string check_file, int *chain_N):&#160;mcmc_sampler_internals.cpp'],['../d5/dac/mcmc__sampler__internals_8h.html#aecfd6c1ef213a233c95a98ae87897123',1,'chain_number_from_checkpoint_file(std::string check_file, int *chain_N):&#160;mcmc_sampler_internals.cpp']]],
  ['chain_5fswap',['chain_swap',['../d9/dfd/mcmc__sampler__internals_8cpp.html#ae328d199338081b9affb09d1f8e71351',1,'chain_swap(sampler *sampler, double ***output, int ***param_status, int step_num, int *swp_accepted, int *swp_rejected):&#160;mcmc_sampler_internals.cpp'],['../d5/dac/mcmc__sampler__internals_8h.html#ae328d199338081b9affb09d1f8e71351',1,'chain_swap(sampler *sampler, double ***output, int ***param_status, int step_num, int *swp_accepted, int *swp_rejected):&#160;mcmc_sampler_internals.cpp']]],
  ['change_5fparameter_5fbasis',['change_parameter_basis',['../d2/d3d/classIMRPhenomD.html#aa0e18ec42afcc215093b0c3a57580826',1,'IMRPhenomD']]],
  ['check_5flist',['check_list',['../df/d2d/util_8cpp.html#a9631c2bd8b5493af4df2528a44886fc6',1,'check_list(T j, T *list, int length):&#160;util.cpp'],['../d8/d3c/util_8h.html#a9631c2bd8b5493af4df2528a44886fc6',1,'check_list(T j, T *list, int length):&#160;util.cpp']]],
  ['check_5flist_5fid',['check_list_id',['../df/d2d/util_8cpp.html#af81850392cb5ff136ea8d334952844e0',1,'check_list_id(T j, T *list, int length):&#160;util.cpp'],['../d8/d3c/util_8h.html#af81850392cb5ff136ea8d334952844e0',1,'check_list_id(T j, T *list, int length):&#160;util.cpp']]],
  ['check_5fsampler_5fstatus',['check_sampler_status',['../d9/dfd/mcmc__sampler__internals_8cpp.html#a00a4c2a3dcd245bd563ec73963553421',1,'check_sampler_status(sampler *samplerptr):&#160;mcmc_sampler_internals.cpp'],['../d5/dac/mcmc__sampler__internals_8h.html#a00a4c2a3dcd245bd563ec73963553421',1,'check_sampler_status(sampler *samplerptr):&#160;mcmc_sampler_internals.cpp']]],
  ['construct_5famplitude',['construct_amplitude',['../d2/d3d/classIMRPhenomD.html#a95e7946061fa24fdb7a770dba02147be',1,'IMRPhenomD']]],
  ['construct_5famplitude_5fderivative',['construct_amplitude_derivative',['../d2/d3d/classIMRPhenomD.html#a4142331cc7a6471d13274b1ac8727378',1,'IMRPhenomD']]],
  ['construct_5fphase',['construct_phase',['../d2/d3d/classIMRPhenomD.html#abcbaafd0dc4086d2abe1f5ce256908c2',1,'IMRPhenomD::construct_phase()'],['../d5/dc6/classIMRPhenomPv2.html#a05877c187dedd47f2479939907b4b2e9',1,'IMRPhenomPv2::construct_phase()']]],
  ['construct_5fphase_5fderivative',['construct_phase_derivative',['../d2/d3d/classIMRPhenomD.html#a26da276caf4c148016f558541d6914f6',1,'IMRPhenomD']]],
  ['construct_5fwaveform',['construct_waveform',['../d2/d3d/classIMRPhenomD.html#aa7192bf99437b49e0b4f27a342a79dae',1,'IMRPhenomD::construct_waveform(T *frequencies, int length, std::complex&lt; T &gt; *waveform, source_parameters&lt; T &gt; *params)'],['../d2/d3d/classIMRPhenomD.html#a1c15236140d34ea2ae1d9a540af7bdab',1,'IMRPhenomD::construct_waveform(T frequency, source_parameters&lt; T &gt; *params)'],['../d5/dc6/classIMRPhenomPv2.html#af147bf8756311a9386b3f9bcdefa7dd5',1,'IMRPhenomPv2::construct_waveform()']]],
  ['continue_5fptmcmc_5fmh',['continue_PTMCMC_MH',['../d6/dd4/mcmc__sampler_8cpp.html#a75bf3e64885b57d9219166e927961eca',1,'continue_PTMCMC_MH(std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string end_checkpoint_file, bool tune):&#160;mcmc_sampler.cpp'],['../d6/dd4/mcmc__sampler_8cpp.html#a9cfb53e52a73340d90d3ffcb37c4cb36',1,'continue_PTMCMC_MH(std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string end_checkpoint_file, bool tune):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a75bf3e64885b57d9219166e927961eca',1,'continue_PTMCMC_MH(std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string end_checkpoint_file, bool tune):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a9cfb53e52a73340d90d3ffcb37c4cb36',1,'continue_PTMCMC_MH(std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string end_checkpoint_file, bool tune):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc',['continue_PTMCMC_MH_dynamic_PT_alloc',['../d6/dd4/mcmc__sampler_8cpp.html#a344ac9d2442d274cb67e405c26669b3c',1,'continue_PTMCMC_MH_dynamic_PT_alloc(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../d6/dd4/mcmc__sampler_8cpp.html#a76dac9bb7de055f89f2e6da6e49f7ed9',1,'continue_PTMCMC_MH_dynamic_PT_alloc(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a76dac9bb7de055f89f2e6da6e49f7ed9',1,'continue_PTMCMC_MH_dynamic_PT_alloc(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a344ac9d2442d274cb67e405c26669b3c',1,'continue_PTMCMC_MH_dynamic_PT_alloc(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc_5finternal',['continue_PTMCMC_MH_dynamic_PT_alloc_internal',['../d6/dd4/mcmc__sampler_8cpp.html#a8558d799134a0924085f9d0bc58bd816',1,'continue_PTMCMC_MH_dynamic_PT_alloc_internal(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, bool dynamic_chain_number, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a8558d799134a0924085f9d0bc58bd816',1,'continue_PTMCMC_MH_dynamic_PT_alloc_internal(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, bool dynamic_chain_number, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated',['continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated',['../d6/dd4/mcmc__sampler_8cpp.html#a7c884769dc81e761da9ec02294744081',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated(std::string checkpoint_file_start, mcmc_sampler_output *sampler_output, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../d6/dd4/mcmc__sampler_8cpp.html#a83e874e49a63d43f491398fb408ba8ec',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated(std::string checkpoint_file_start, mcmc_sampler_output *sampler_output, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a83e874e49a63d43f491398fb408ba8ec',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated(std::string checkpoint_file_start, mcmc_sampler_output *sampler_output, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a7c884769dc81e761da9ec02294744081',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated(std::string checkpoint_file_start, mcmc_sampler_output *sampler_output, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5fgw',['continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW',['../de/dbe/mcmc__gw_8cpp.html#a476ff3f0d0b51647943df5186342c0a3',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(std::string checkpoint_file_start, mcmc_sampler_output *sampler_output, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../de/d8d/mcmc__gw_8h.html#a476ff3f0d0b51647943df5186342c0a3',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(std::string checkpoint_file_start, mcmc_sampler_output *sampler_output, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5finternal',['continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal',['../d6/dd4/mcmc__sampler_8cpp.html#a1c1d07cfb11d0e5b3b03457c3e8cfffc',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(std::string checkpoint_file_start, mcmc_sampler_output *sampler_output, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a1c1d07cfb11d0e5b3b03457c3e8cfffc',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(std::string checkpoint_file_start, mcmc_sampler_output *sampler_output, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fgw',['continue_PTMCMC_MH_GW',['../de/dbe/mcmc__gw_8cpp.html#aa2b4de1201be6184a67954cea6087698',1,'continue_PTMCMC_MH_GW(std::string start_checkpoint_file, double ***output, int dimension, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string final_checkpoint_filename, bool tune):&#160;mcmc_gw.cpp'],['../de/d8d/mcmc__gw_8h.html#af326fc27d4be6638aad4191e628b9c75',1,'continue_PTMCMC_MH_GW(std::string start_checkpoint_file, double ***output, int dimension, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detector, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string final_checkpoint_filename, bool tune):&#160;mcmc_gw.cpp']]],
  ['continue_5fptmcmc_5fmh_5finternal',['continue_PTMCMC_MH_internal',['../d6/dd4/mcmc__sampler_8cpp.html#aba4ba27266245bf00834c274dc6e110f',1,'continue_PTMCMC_MH_internal(sampler *sampler, std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string end_checkpoint_file, bool tune):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a57afcec1b833ce865ffb7f5834e20e21',1,'continue_PTMCMC_MH_internal(sampler *samplerptr, std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string end_checkpoint_file, bool tune):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fsimulated_5fannealing_5finternal',['continue_PTMCMC_MH_simulated_annealing_internal',['../d6/dd4/mcmc__sampler_8cpp.html#a82851301c8b2afed8240ea6bc56b0d80',1,'mcmc_sampler.cpp']]],
  ['continue_5frjptmcmc_5fmh',['continue_RJPTMCMC_MH',['../d6/dd4/mcmc__sampler_8cpp.html#afe6b144b31fb6363ad1a9e31bfa8d72e',1,'continue_RJPTMCMC_MH(std::string start_checkpoint_file, double ***output, int ***status, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int max_dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int *status, int max_dimension, int chain_id, void *parameters), void(*fisher)(double *param, int *status, int max_dimension, double **fisher, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dimension, int chain_id, double gaussian_width, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp'],['../d6/dd4/mcmc__sampler_8cpp.html#a10588e41b80a7dd3aad0e933030add38',1,'continue_RJPTMCMC_MH(std::string start_checkpoint_file, double ***output, int ***status, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int max_dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int *status, int max_dimension, int chain_id, void *parameters), void(*fisher)(double *param, int *status, int max_dimension, double **fisher, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dimension, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp'],['../da/d2a/mcmc__sampler_8h.html#a10588e41b80a7dd3aad0e933030add38',1,'continue_RJPTMCMC_MH(std::string start_checkpoint_file, double ***output, int ***status, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int max_dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int *status, int max_dimension, int chain_id, void *parameters), void(*fisher)(double *param, int *status, int max_dimension, double **fisher, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dimension, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5frjptmcmc_5fmh_5fgw',['continue_RJPTMCMC_MH_GW',['../de/dbe/mcmc__gw_8cpp.html#aa2c474150b406eae708eecc5666858db',1,'continue_RJPTMCMC_MH_GW(std::string start_checkpoint_file, double ***output, int ***status, int max_dim, int min_dim, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int dimension, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dim, int chain_id, double step_width, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, double *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string final_checkpoint_filename):&#160;mcmc_gw.cpp'],['../de/d8d/mcmc__gw_8h.html#aa2c474150b406eae708eecc5666858db',1,'continue_RJPTMCMC_MH_GW(std::string start_checkpoint_file, double ***output, int ***status, int max_dim, int min_dim, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int dimension, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dim, int chain_id, double step_width, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, double *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string final_checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['continue_5frjptmcmc_5fmh_5finternal',['continue_RJPTMCMC_MH_internal',['../d6/dd4/mcmc__sampler_8cpp.html#a54bc1026eeef7c887e42d892af5acb1b',1,'mcmc_sampler.cpp']]],
  ['copy_5fbase_5fcheckpoint_5fproperties',['copy_base_checkpoint_properties',['../d9/dfd/mcmc__sampler__internals_8cpp.html#a036d12e6378958e6b373866894a1081d',1,'copy_base_checkpoint_properties(std::string check_file, sampler *samplerptr):&#160;mcmc_sampler_internals.cpp'],['../d5/dac/mcmc__sampler__internals_8h.html#a036d12e6378958e6b373866894a1081d',1,'copy_base_checkpoint_properties(std::string check_file, sampler *samplerptr):&#160;mcmc_sampler_internals.cpp']]],
  ['copy_5fdata_5fto_5fdevice',['copy_data_to_device',['../d4/dd1/autocorrelation__cuda_8cu.html#a00159a0e9eb7e40725a034becb3110c0',1,'copy_data_to_device(GPUplan *plan, double **input_data, int data_length, int dimension, int num_segments):&#160;autocorrelation_cuda.cu'],['../d7/d33/autocorrelation__cuda_8hu.html#a00159a0e9eb7e40725a034becb3110c0',1,'copy_data_to_device(GPUplan *plan, double **input_data, int data_length, int dimension, int num_segments):&#160;autocorrelation_cuda.cu']]],
  ['cosmology_5finterpolation_5ffunction',['cosmology_interpolation_function',['../df/d2d/util_8cpp.html#afc70040a4b2855ffc42c1f8b91e87fc2',1,'cosmology_interpolation_function(double x, double *coeffs, int interp_degree):&#160;util.cpp'],['../df/d2d/util_8cpp.html#a89c3042d0c813fd58dcb6a433d26eaa4',1,'cosmology_interpolation_function(adouble x, double *coeffs, int interp_degree):&#160;util.cpp'],['../d8/d3c/util_8h.html#afc70040a4b2855ffc42c1f8b91e87fc2',1,'cosmology_interpolation_function(double x, double *coeffs, int interp_degree):&#160;util.cpp'],['../d8/d3c/util_8h.html#a89c3042d0c813fd58dcb6a433d26eaa4',1,'cosmology_interpolation_function(adouble x, double *coeffs, int interp_degree):&#160;util.cpp']]],
  ['cosmology_5flookup',['cosmology_lookup',['../df/d2d/util_8cpp.html#ae0af9cd9151668bb4490288655aa000b',1,'cosmology_lookup(std::string cosmology):&#160;util.cpp'],['../d8/d3c/util_8h.html#ae0af9cd9151668bb4490288655aa000b',1,'cosmology_lookup(std::string cosmology):&#160;util.cpp']]],
  ['count_5flines_5fdata_5ffile',['count_lines_data_file',['../da/d12/io__util_8cpp.html#aabb38ec649dc87bca9ddd9ddd1baea78',1,'count_lines_data_file(std::string file, int *count):&#160;io_util.cpp'],['../d8/d9b/io__util_8h.html#aabb38ec649dc87bca9ddd9ddd1baea78',1,'count_lines_data_file(std::string file, int *count):&#160;io_util.cpp']]],
  ['count_5flines_5flosc_5fdata_5ffile',['count_lines_LOSC_data_file',['../da/d12/io__util_8cpp.html#a2d2ec12ff7cb75ea68ec4139513bab4c',1,'count_lines_LOSC_data_file(std::string file, int *count):&#160;io_util.cpp'],['../d8/d9b/io__util_8h.html#a2d2ec12ff7cb75ea68ec4139513bab4c',1,'count_lines_LOSC_data_file(std::string file, int *count):&#160;io_util.cpp']]],
  ['count_5flines_5flosc_5fpsd_5ffile',['count_lines_LOSC_PSD_file',['../da/d12/io__util_8cpp.html#aaf15f8db5f36caf636d88f41e29b17be',1,'count_lines_LOSC_PSD_file(std::string file, int *count):&#160;io_util.cpp'],['../d8/d9b/io__util_8h.html#aaf15f8db5f36caf636d88f41e29b17be',1,'count_lines_LOSC_PSD_file(std::string file, int *count):&#160;io_util.cpp']]]
];
