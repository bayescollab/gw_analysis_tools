var searchData=
[
  ['c_46',['c',['../util_8h.html#a8fc6defe4e499b1b9b9c275689e44352',1,'util.h']]],
  ['calculate_5fchirpmass_47',['calculate_chirpmass',['../util_8cpp.html#af7aeeebcf190ab70c667a478a51ce435',1,'calculate_chirpmass(double mass1, double mass2):&#160;util.cpp'],['../util_8h.html#af7aeeebcf190ab70c667a478a51ce435',1,'calculate_chirpmass(double mass1, double mass2):&#160;util.cpp']]],
  ['calculate_5fdelta_5fparameter_5f0_48',['calculate_delta_parameter_0',['../classIMRPhenomD.html#abd81c0aa321c96077823483c91ae01d4',1,'IMRPhenomD']]],
  ['calculate_5fdelta_5fparameter_5f1_49',['calculate_delta_parameter_1',['../classIMRPhenomD.html#a6fd680e8cace47a635e7c3956dfb4b32',1,'IMRPhenomD']]],
  ['calculate_5fdelta_5fparameter_5f2_50',['calculate_delta_parameter_2',['../classIMRPhenomD.html#acc1918553367dbe59ffb4959b0a0f5b2',1,'IMRPhenomD']]],
  ['calculate_5fdelta_5fparameter_5f3_51',['calculate_delta_parameter_3',['../classIMRPhenomD.html#a4201abf06608c7a11adfee232f7eb581',1,'IMRPhenomD']]],
  ['calculate_5fdelta_5fparameter_5f4_52',['calculate_delta_parameter_4',['../classIMRPhenomD.html#a22f9b0bc83c4ed555a46b03260c0d91d',1,'IMRPhenomD']]],
  ['calculate_5fderivatives_5fautodiff_53',['calculate_derivatives_autodiff',['../fisher_8cpp.html#a4a22d78a622d1a942e6e93c91fbb0999',1,'calculate_derivatives_autodiff(double *frequency, int length, int dimension, std::string generation_method, gen_params *parameters, std::complex&lt; double &gt; **waveform_deriv, int *waveform_tapes, std::string detector, bool autodiff_time_deriv):&#160;fisher.cpp'],['../fisher_8h.html#a4a22d78a622d1a942e6e93c91fbb0999',1,'calculate_derivatives_autodiff(double *frequency, int length, int dimension, std::string generation_method, gen_params *parameters, std::complex&lt; double &gt; **waveform_deriv, int *waveform_tapes, std::string detector, bool autodiff_time_deriv):&#160;fisher.cpp']]],
  ['calculate_5feta_54',['calculate_eta',['../util_8cpp.html#a06ffbad5fe4daa3872db626f90556202',1,'calculate_eta(double mass1, double mass2):&#160;util.cpp'],['../util_8h.html#a06ffbad5fe4daa3872db626f90556202',1,'calculate_eta(double mass1, double mass2):&#160;util.cpp']]],
  ['calculate_5feuler_5fcoeffs_55',['calculate_euler_coeffs',['../classIMRPhenomPv2.html#afc0f88c773f46ab060482bc530f60115',1,'IMRPhenomPv2']]],
  ['calculate_5ffisher_5felements_5fbatch_56',['calculate_fisher_elements_batch',['../fisher_8cpp.html#acae7abfd22bc80580996b8f677be9156',1,'calculate_fisher_elements_batch(double *frequency, int length, int base_dimension, int full_dimension, std::complex&lt; double &gt; **response_deriv, double **output, double *psd):&#160;fisher.cpp'],['../fisher_8h.html#acae7abfd22bc80580996b8f677be9156',1,'calculate_fisher_elements_batch(double *frequency, int length, int base_dimension, int full_dimension, std::complex&lt; double &gt; **response_deriv, double **output, double *psd):&#160;fisher.cpp']]],
  ['calculate_5fintegrand_5fautodiff_5fgsl_5fsubroutine_57',['calculate_integrand_autodiff_gsl_subroutine',['../fisher_8cpp.html#a0483f09b0c7a53ae7b65d3dff7385697',1,'calculate_integrand_autodiff_gsl_subroutine(double frequency, void *params_in):&#160;fisher.cpp'],['../fisher_8h.html#a0483f09b0c7a53ae7b65d3dff7385697',1,'calculate_integrand_autodiff_gsl_subroutine(double frequency, void *params_in):&#160;fisher.cpp']]],
  ['calculate_5fmass1_58',['calculate_mass1',['../util_8cpp.html#a85a0fc50a6f06dd519a18a6d273a0b4a',1,'calculate_mass1(double chirpmass, double eta):&#160;util.cpp'],['../util_8h.html#a85a0fc50a6f06dd519a18a6d273a0b4a',1,'calculate_mass1(double chirpmass, double eta):&#160;util.cpp']]],
  ['calculate_5fmass2_59',['calculate_mass2',['../util_8cpp.html#a5f62f4a7c1011180080d72e0032cef1b',1,'calculate_mass2(double chirpmass, double eta):&#160;util.cpp'],['../util_8h.html#a5f62f4a7c1011180080d72e0032cef1b',1,'calculate_mass2(double chirpmass, double eta):&#160;util.cpp']]],
  ['calculate_5fsnr_60',['calculate_snr',['../waveform__util_8cpp.html#a24123fc7426785f73e4b393af556e3b2',1,'calculate_snr(std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double *frequencies, int length):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a65e74aae0c49a3854f81e349413b20e5',1,'calculate_snr(std::string sensitivity_curve, std::complex&lt; double &gt; *waveform, double *frequencies, int length):&#160;waveform_util.cpp'],['../waveform__util_8h.html#a65e74aae0c49a3854f81e349413b20e5',1,'calculate_snr(std::string sensitivity_curve, std::complex&lt; double &gt; *waveform, double *frequencies, int length):&#160;waveform_util.cpp'],['../waveform__util_8h.html#a24123fc7426785f73e4b393af556e3b2',1,'calculate_snr(std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double *frequencies, int length):&#160;waveform_util.cpp']]],
  ['calculate_5fsnr_5fgsl_61',['calculate_snr_gsl',['../waveform__util_8cpp.html#ae457f376ac6868d88fa7c428a1cc0798',1,'calculate_snr_gsl(double *snr, std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double f_min, double f_max, double relative_error):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a7a6b3d3d9c2f2fee67faef89f435f780',1,'calculate_snr_gsl(double *snr, std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double f_min, double f_max, double relative_error, gsl_integration_workspace *w, int np):&#160;waveform_util.cpp'],['../waveform__util_8h.html#ae457f376ac6868d88fa7c428a1cc0798',1,'calculate_snr_gsl(double *snr, std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double f_min, double f_max, double relative_error):&#160;waveform_util.cpp'],['../waveform__util_8h.html#a7a6b3d3d9c2f2fee67faef89f435f780',1,'calculate_snr_gsl(double *snr, std::string sensitivity_curve, std::string detector, std::string generation_method, gen_params_base&lt; double &gt; *params, double f_min, double f_max, double relative_error, gsl_integration_workspace *w, int np):&#160;waveform_util.cpp']]],
  ['calculate_5ftime_5fshift_62',['calculate_time_shift',['../classIMRPhenomPv2.html#a6b27bd676726358b699a35cfbd10fe79',1,'IMRPhenomPv2::calculate_time_shift(source_parameters&lt; double &gt; *params, useful_powers&lt; double &gt; *pows, double *pn_phase_coeffs, lambda_parameters&lt; double &gt; *lambda)'],['../classIMRPhenomPv2.html#a61ec2bf7f72ec82b5a583e7098b2daab',1,'IMRPhenomPv2::calculate_time_shift(source_parameters&lt; adouble &gt; *params, useful_powers&lt; adouble &gt; *pows, adouble *pn_phase_coeffs, lambda_parameters&lt; adouble &gt; *lambda)']]],
  ['cbrt_5finternal_63',['cbrt_internal',['../util_8cpp.html#a9e568dd0950bb2aa1ae125c8153b8f4e',1,'cbrt_internal(double base):&#160;util.cpp'],['../util_8cpp.html#a8dfef0b07ebb62c8d9f1f70624fa3e00',1,'cbrt_internal(adouble base):&#160;util.cpp'],['../util_8h.html#a9e568dd0950bb2aa1ae125c8153b8f4e',1,'cbrt_internal(double base):&#160;util.cpp'],['../util_8h.html#a8dfef0b07ebb62c8d9f1f70624fa3e00',1,'cbrt_internal(adouble base):&#160;util.cpp']]],
  ['ce_5fd_64',['CE_D',['../detector__util_8h.html#ae506281be5379ceefab70d21a60c02e2',1,'detector_util.h']]],
  ['celestial_5fhorizon_5ftransform_65',['celestial_horizon_transform',['../detector__util_8cpp.html#af252cb74fb621c53ebe8db50f58841d2',1,'celestial_horizon_transform(T RA, T DEC, double gps_time, std::string detector, T *phi, T *theta):&#160;detector_util.cpp'],['../util_8cpp.html#a55f693ec3edcca174373eb928d513dbc',1,'celestial_horizon_transform(T RA, T DEC, double gps_time, T LONG, T LAT, T *phi, T *theta):&#160;util.cpp'],['../detector__util_8h.html#af252cb74fb621c53ebe8db50f58841d2',1,'celestial_horizon_transform(T RA, T DEC, double gps_time, std::string detector, T *phi, T *theta):&#160;detector_util.cpp'],['../util_8h.html#a55f693ec3edcca174373eb928d513dbc',1,'celestial_horizon_transform(T RA, T DEC, double gps_time, T LONG, T LAT, T *phi, T *theta):&#160;util.cpp']]],
  ['chain_5fnumber_5ffrom_5fcheckpoint_5ffile_66',['chain_number_from_checkpoint_file',['../mcmc__sampler__internals_8cpp.html#aecfd6c1ef213a233c95a98ae87897123',1,'chain_number_from_checkpoint_file(std::string check_file, int *chain_N):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8h.html#aecfd6c1ef213a233c95a98ae87897123',1,'chain_number_from_checkpoint_file(std::string check_file, int *chain_N):&#160;mcmc_sampler_internals.cpp']]],
  ['chain_5fswap_67',['chain_swap',['../mcmc__sampler__internals_8cpp.html#ae328d199338081b9affb09d1f8e71351',1,'chain_swap(sampler *sampler, double ***output, int ***param_status, int step_num, int *swp_accepted, int *swp_rejected):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8h.html#ae328d199338081b9affb09d1f8e71351',1,'chain_swap(sampler *sampler, double ***output, int ***param_status, int step_num, int *swp_accepted, int *swp_rejected):&#160;mcmc_sampler_internals.cpp']]],
  ['change_5fparameter_5fbasis_68',['change_parameter_basis',['../classIMRPhenomD.html#aa0e18ec42afcc215093b0c3a57580826',1,'IMRPhenomD']]],
  ['check_5flist_69',['check_list',['../util_8cpp.html#a9631c2bd8b5493af4df2528a44886fc6',1,'check_list(T j, T *list, int length):&#160;util.cpp'],['../util_8h.html#a9631c2bd8b5493af4df2528a44886fc6',1,'check_list(T j, T *list, int length):&#160;util.cpp']]],
  ['check_5flist_5fid_70',['check_list_id',['../util_8cpp.html#af81850392cb5ff136ea8d334952844e0',1,'check_list_id(T j, T *list, int length):&#160;util.cpp'],['../util_8h.html#af81850392cb5ff136ea8d334952844e0',1,'check_list_id(T j, T *list, int length):&#160;util.cpp']]],
  ['check_5fsampler_5fstatus_71',['check_sampler_status',['../mcmc__sampler__internals_8cpp.html#a00a4c2a3dcd245bd563ec73963553421',1,'check_sampler_status(sampler *samplerptr):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8h.html#a00a4c2a3dcd245bd563ec73963553421',1,'check_sampler_status(sampler *samplerptr):&#160;mcmc_sampler_internals.cpp']]],
  ['chi_5fa_72',['chi_a',['../structsource__parameters.html#abb7188532f4129d5b952aa040ca2a68f',1,'source_parameters']]],
  ['chi_5feff_73',['chi_eff',['../structsource__parameters.html#af76e6fbb66cdb45dc7ce96eb7ff1440c',1,'source_parameters']]],
  ['chi_5fpn_74',['chi_pn',['../structsource__parameters.html#aa1898ec9379fb825dd3a327292e7466e',1,'source_parameters']]],
  ['chi_5fs_75',['chi_s',['../structsource__parameters.html#a795a4c996933c8096dc507fb4b77660c',1,'source_parameters']]],
  ['chirpmass_76',['chirpmass',['../structsource__parameters.html#a45ed5fee56015020945397cad4090c0b',1,'source_parameters']]],
  ['comparator_77',['Comparator',['../classComparator.html',1,'']]],
  ['comparator_5fac_5ffft_78',['comparator_ac_fft',['../classcomparator__ac__fft.html',1,'']]],
  ['comparator_5fac_5fserial_79',['comparator_ac_serial',['../classcomparator__ac__serial.html',1,'']]],
  ['comparatorswap_80',['Comparatorswap',['../classComparatorswap.html',1,'']]],
  ['construct_5famplitude_81',['construct_amplitude',['../classIMRPhenomD.html#a95e7946061fa24fdb7a770dba02147be',1,'IMRPhenomD::construct_amplitude()'],['../classdCS__IMRPhenomD__log.html#a769498326cbe7738a855fc93201f6e6a',1,'dCS_IMRPhenomD_log::construct_amplitude()'],['../classdCS__IMRPhenomD.html#ad9dbe0caa4aed7d22b8e6226114ed4d9',1,'dCS_IMRPhenomD::construct_amplitude()'],['../classEdGB__IMRPhenomD__log.html#ac6acdf1b0231e33b861202bcd9c51ee7',1,'EdGB_IMRPhenomD_log::construct_amplitude()'],['../classEdGB__IMRPhenomD.html#ae845acb1900b80ce6b23952939f64f2a',1,'EdGB_IMRPhenomD::construct_amplitude()']]],
  ['construct_5famplitude_5fderivative_82',['construct_amplitude_derivative',['../classIMRPhenomD.html#a4142331cc7a6471d13274b1ac8727378',1,'IMRPhenomD::construct_amplitude_derivative()'],['../classppE__IMRPhenomD__Inspiral.html#a97d35197595f31d6cfbf6a8cf7c9a9ad',1,'ppE_IMRPhenomD_Inspiral::construct_amplitude_derivative()'],['../classppE__IMRPhenomD__IMR.html#a5b80e5ae4dd83da49beb15e6e5f17715',1,'ppE_IMRPhenomD_IMR::construct_amplitude_derivative()']]],
  ['construct_5fphase_83',['construct_phase',['../classIMRPhenomD.html#abcbaafd0dc4086d2abe1f5ce256908c2',1,'IMRPhenomD::construct_phase()'],['../classIMRPhenomPv2.html#a05877c187dedd47f2479939907b4b2e9',1,'IMRPhenomPv2::construct_phase()'],['../classdCS__IMRPhenomD__log.html#a6f26f618b1ab6e41ae32eb94fefcc185',1,'dCS_IMRPhenomD_log::construct_phase()'],['../classdCS__IMRPhenomD.html#aeee3339b07c8088fc6a1f2c3390f92a4',1,'dCS_IMRPhenomD::construct_phase()'],['../classEdGB__IMRPhenomD__log.html#a62aa82aaadc4210d09e95f8807f8f3c4',1,'EdGB_IMRPhenomD_log::construct_phase()'],['../classEdGB__IMRPhenomD.html#ad4a5d858678d07912f43e8a045f5979b',1,'EdGB_IMRPhenomD::construct_phase()']]],
  ['construct_5fphase_5fderivative_84',['construct_phase_derivative',['../classIMRPhenomD.html#a26da276caf4c148016f558541d6914f6',1,'IMRPhenomD::construct_phase_derivative()'],['../classppE__IMRPhenomD__Inspiral.html#a28d189808db2bd204e0d0051a1ed6427',1,'ppE_IMRPhenomD_Inspiral::construct_phase_derivative()'],['../classppE__IMRPhenomD__IMR.html#a78151d1f34693b69cf6ccbc28df4caa6',1,'ppE_IMRPhenomD_IMR::construct_phase_derivative()']]],
  ['construct_5fwaveform_85',['construct_waveform',['../classIMRPhenomD.html#aa7192bf99437b49e0b4f27a342a79dae',1,'IMRPhenomD::construct_waveform(T *frequencies, int length, std::complex&lt; T &gt; *waveform, source_parameters&lt; T &gt; *params)'],['../classIMRPhenomD.html#a1c15236140d34ea2ae1d9a540af7bdab',1,'IMRPhenomD::construct_waveform(T frequency, source_parameters&lt; T &gt; *params)'],['../classIMRPhenomPv2.html#af147bf8756311a9386b3f9bcdefa7dd5',1,'IMRPhenomPv2::construct_waveform()'],['../classdCS__IMRPhenomD__log.html#a15ecc7dbe3cf829ac2b2067060aef0c2',1,'dCS_IMRPhenomD_log::construct_waveform()'],['../classdCS__IMRPhenomD.html#ad6fa19d2181da900203c2bf1e182a60b',1,'dCS_IMRPhenomD::construct_waveform()'],['../classEdGB__IMRPhenomD__log.html#afbb021b8af2b53b51ca24d7c29c0d487',1,'EdGB_IMRPhenomD_log::construct_waveform()'],['../classEdGB__IMRPhenomD.html#a11f86d5239ced2ab1372375cd930f12c',1,'EdGB_IMRPhenomD::construct_waveform()']]],
  ['continue_5fptmcmc_5fmh_86',['continue_PTMCMC_MH',['../mcmc__sampler_8cpp.html#acdf5252a577ccae2d4e7c90d8f054612',1,'continue_PTMCMC_MH(std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a89d287443349069d59b0a8ea2698a4c0',1,'continue_PTMCMC_MH(std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#acdf5252a577ccae2d4e7c90d8f054612',1,'continue_PTMCMC_MH(std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a89d287443349069d59b0a8ea2698a4c0',1,'continue_PTMCMC_MH(std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc_87',['continue_PTMCMC_MH_dynamic_PT_alloc',['../mcmc__sampler_8cpp.html#a9e62c6b1a844fa628615a70cfd01b416',1,'continue_PTMCMC_MH_dynamic_PT_alloc(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a2624b845ec2f8a11949347fd3c52b435',1,'continue_PTMCMC_MH_dynamic_PT_alloc(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a2624b845ec2f8a11949347fd3c52b435',1,'continue_PTMCMC_MH_dynamic_PT_alloc(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a9e62c6b1a844fa628615a70cfd01b416',1,'continue_PTMCMC_MH_dynamic_PT_alloc(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc_5finternal_88',['continue_PTMCMC_MH_dynamic_PT_alloc_internal',['../mcmc__sampler_8cpp.html#a199737224362b3c9359a74e0663c1561',1,'continue_PTMCMC_MH_dynamic_PT_alloc_internal(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a199737224362b3c9359a74e0663c1561',1,'continue_PTMCMC_MH_dynamic_PT_alloc_internal(std::string checkpoint_file_start, double ***output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_89',['continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated',['../mcmc__sampler_8cpp.html#aca0ec45aeec4fbd2af0a0b222eefe53a',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated(std::string checkpoint_file_start, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a74c970893516b24e60511fc41ad93708',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated(std::string checkpoint_file_start, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a74c970893516b24e60511fc41ad93708',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated(std::string checkpoint_file_start, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#aca0ec45aeec4fbd2af0a0b222eefe53a',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated(std::string checkpoint_file_start, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5fgw_90',['continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW',['../mcmc__gw_8cpp.html#a5dfa2e7aa11c0d6947bb08d04eb56499',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(std::string checkpoint_file_start, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a5dfa2e7aa11c0d6947bb08d04eb56499',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(std::string checkpoint_file_start, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['continue_5fptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5finternal_91',['continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal',['../mcmc__sampler_8cpp.html#a5d33cf90836be53bbedcc7d09f62911b',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(std::string checkpoint_file_start, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a5d33cf90836be53bbedcc7d09f62911b',1,'continue_PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(std::string checkpoint_file_start, double **output, int N_steps, int max_chain_N_thermo_ensemble, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5fptmcmc_5fmh_5fgw_92',['continue_PTMCMC_MH_GW',['../mcmc__gw_8cpp.html#a4478b96c8918d852f3940ada3f054bdd',1,'continue_PTMCMC_MH_GW(std::string start_checkpoint_file, double ***output, int dimension, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string final_checkpoint_filename):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#adce91c5bc6db381f1bc40d31b41d4211',1,'continue_PTMCMC_MH_GW(std::string start_checkpoint_file, double ***output, int dimension, int N_steps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detector, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string final_checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['continue_5fptmcmc_5fmh_5finternal_93',['continue_PTMCMC_MH_internal',['../mcmc__sampler_8cpp.html#ae7668cb8a4889e7d97254ee794898b20',1,'continue_PTMCMC_MH_internal(sampler *sampler, std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#ab4fc446d8f455eb4d4a7bfbf24dd1560',1,'continue_PTMCMC_MH_internal(sampler *samplerptr, std::string start_checkpoint_file, double ***output, int N_steps, int swp_freq, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5frjptmcmc_5fmh_94',['continue_RJPTMCMC_MH',['../mcmc__sampler_8cpp.html#afe6b144b31fb6363ad1a9e31bfa8d72e',1,'continue_RJPTMCMC_MH(std::string start_checkpoint_file, double ***output, int ***status, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int max_dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int *status, int max_dimension, int chain_id, void *parameters), void(*fisher)(double *param, int *status, int max_dimension, double **fisher, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dimension, int chain_id, double gaussian_width, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a10588e41b80a7dd3aad0e933030add38',1,'continue_RJPTMCMC_MH(std::string start_checkpoint_file, double ***output, int ***status, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int max_dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int *status, int max_dimension, int chain_id, void *parameters), void(*fisher)(double *param, int *status, int max_dimension, double **fisher, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dimension, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a10588e41b80a7dd3aad0e933030add38',1,'continue_RJPTMCMC_MH(std::string start_checkpoint_file, double ***output, int ***status, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int max_dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int *status, int max_dimension, int chain_id, void *parameters), void(*fisher)(double *param, int *status, int max_dimension, double **fisher, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dimension, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string end_checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['continue_5frjptmcmc_5fmh_5fgw_95',['continue_RJPTMCMC_MH_GW',['../mcmc__gw_8cpp.html#a79282d2ebb680bf028fcfc2a2e75b539',1,'continue_RJPTMCMC_MH_GW(std::string start_checkpoint_file, double ***output, int ***status, int max_dim, int min_dim, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int dimension, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dim, int chain_id, double step_width, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string final_checkpoint_filename):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a79282d2ebb680bf028fcfc2a2e75b539',1,'continue_RJPTMCMC_MH_GW(std::string start_checkpoint_file, double ***output, int ***status, int max_dim, int min_dim, int N_steps, int swp_freq, double(*log_prior)(double *param, int *status, int dimension, int chain_id, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int max_dim, int chain_id, double step_width, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string final_checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['continue_5frjptmcmc_5fmh_5finternal_96',['continue_RJPTMCMC_MH_internal',['../mcmc__sampler_8cpp.html#a54bc1026eeef7c887e42d892af5acb1b',1,'mcmc_sampler.cpp']]],
  ['copy_5fbase_5fcheckpoint_5fproperties_97',['copy_base_checkpoint_properties',['../mcmc__sampler__internals_8cpp.html#a036d12e6378958e6b373866894a1081d',1,'copy_base_checkpoint_properties(std::string check_file, sampler *samplerptr):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8h.html#a036d12e6378958e6b373866894a1081d',1,'copy_base_checkpoint_properties(std::string check_file, sampler *samplerptr):&#160;mcmc_sampler_internals.cpp']]],
  ['copy_5fdata_5fto_5fdevice_98',['copy_data_to_device',['../autocorrelation__cuda_8cu.html#a00159a0e9eb7e40725a034becb3110c0',1,'copy_data_to_device(GPUplan *plan, double **input_data, int data_length, int dimension, int num_segments):&#160;autocorrelation_cuda.cu'],['../autocorrelation__cuda_8hu.html#a00159a0e9eb7e40725a034becb3110c0',1,'copy_data_to_device(GPUplan *plan, double **input_data, int data_length, int dimension, int num_segments):&#160;autocorrelation_cuda.cu']]],
  ['cosmology_5finterpolation_5ffunction_99',['cosmology_interpolation_function',['../util_8cpp.html#afc70040a4b2855ffc42c1f8b91e87fc2',1,'cosmology_interpolation_function(double x, double *coeffs, int interp_degree):&#160;util.cpp'],['../util_8cpp.html#a89c3042d0c813fd58dcb6a433d26eaa4',1,'cosmology_interpolation_function(adouble x, double *coeffs, int interp_degree):&#160;util.cpp'],['../util_8h.html#afc70040a4b2855ffc42c1f8b91e87fc2',1,'cosmology_interpolation_function(double x, double *coeffs, int interp_degree):&#160;util.cpp'],['../util_8h.html#a89c3042d0c813fd58dcb6a433d26eaa4',1,'cosmology_interpolation_function(adouble x, double *coeffs, int interp_degree):&#160;util.cpp']]],
  ['cosmology_5flookup_100',['cosmology_lookup',['../util_8cpp.html#afda1342d7215e52bcbb8f483ca576524',1,'cosmology_lookup(std::string cosmology):&#160;util.cpp'],['../util_8h.html#afda1342d7215e52bcbb8f483ca576524',1,'cosmology_lookup(std::string cosmology):&#160;util.cpp']]],
  ['count_5flines_5fdata_5ffile_101',['count_lines_data_file',['../io__util_8cpp.html#aabb38ec649dc87bca9ddd9ddd1baea78',1,'count_lines_data_file(std::string file, int *count):&#160;io_util.cpp'],['../io__util_8h.html#aabb38ec649dc87bca9ddd9ddd1baea78',1,'count_lines_data_file(std::string file, int *count):&#160;io_util.cpp']]],
  ['count_5flines_5flosc_5fdata_5ffile_102',['count_lines_LOSC_data_file',['../io__util_8cpp.html#a2d2ec12ff7cb75ea68ec4139513bab4c',1,'count_lines_LOSC_data_file(std::string file, int *count):&#160;io_util.cpp'],['../io__util_8h.html#a2d2ec12ff7cb75ea68ec4139513bab4c',1,'count_lines_LOSC_data_file(std::string file, int *count):&#160;io_util.cpp']]],
  ['count_5flines_5flosc_5fpsd_5ffile_103',['count_lines_LOSC_PSD_file',['../io__util_8cpp.html#aaf15f8db5f36caf636d88f41e29b17be',1,'count_lines_LOSC_PSD_file(std::string file, int *count):&#160;io_util.cpp'],['../io__util_8h.html#aaf15f8db5f36caf636d88f41e29b17be',1,'count_lines_LOSC_PSD_file(std::string file, int *count):&#160;io_util.cpp']]]
];
