var searchData=
[
  ['m_238',['M',['../structsource__parameters.html#a52eefefefdf8c0bc989b64a115aed48a',1,'source_parameters']]],
  ['mass1_239',['mass1',['../classgen__params__base.html#a8e7626a0841f4d2224b625e327f7679a',1,'gen_params_base::mass1()'],['../structsource__parameters.html#a1a222ddfbc43359da566d085d92e7b72',1,'source_parameters::mass1()']]],
  ['mass2_240',['mass2',['../classgen__params__base.html#a8bb568ea6c20f9442a5fd0f1b01344e0',1,'gen_params_base::mass2()'],['../structsource__parameters.html#a889d5e8ae96cec656504784f19916b5d',1,'source_parameters::mass2()']]],
  ['max_5fserial_241',['MAX_SERIAL',['../autocorrelation_8cpp.html#a997bd514ed5e4f822888206a11fc8065',1,'autocorrelation.cpp']]],
  ['maximized_5fcoal_5flog_5flikelihood_242',['maximized_coal_Log_Likelihood',['../mcmc__gw_8cpp.html#ae6cc4bb69ba72e0e49a53042cfecaffe',1,'maximized_coal_Log_Likelihood(std::complex&lt; double &gt; *data, double *psd, double *frequencies, size_t length, gen_params_base&lt; double &gt; *params, std::string detector, std::string generation_method, fftw_outline *plan, double *tc, double *phic):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#ae6cc4bb69ba72e0e49a53042cfecaffe',1,'maximized_coal_Log_Likelihood(std::complex&lt; double &gt; *data, double *psd, double *frequencies, size_t length, gen_params_base&lt; double &gt; *params, std::string detector, std::string generation_method, fftw_outline *plan, double *tc, double *phic):&#160;mcmc_gw.cpp']]],
  ['maximized_5fcoal_5flog_5flikelihood_5fimrphenomd_243',['maximized_coal_log_likelihood_IMRPhenomD',['../mcmc__gw_8cpp.html#abd627450e43bf7ef683d875d804b7503',1,'maximized_coal_log_likelihood_IMRPhenomD(double *frequencies, int length, std::complex&lt; double &gt; *data, double *noise, double SNR, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, bool NSflag, fftw_outline *plan):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#ae78896f8e8acd8dfaff6ff33a732284a',1,'maximized_coal_log_likelihood_IMRPhenomD(double *frequencies, size_t length, double *real_data, double *imag_data, double *noise, double SNR, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, bool NSflag):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#a2635acb06ca0e448854aaab3fd7037c3',1,'maximized_coal_log_likelihood_IMRPhenomD(double *frequencies, size_t length, double *real_data, double *imag_data, double *noise, double SNR, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, bool NSflag, fftw_outline *plan):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#abd627450e43bf7ef683d875d804b7503',1,'maximized_coal_log_likelihood_IMRPhenomD(double *frequencies, int length, std::complex&lt; double &gt; *data, double *noise, double SNR, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, bool NSflag, fftw_outline *plan):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#ae78896f8e8acd8dfaff6ff33a732284a',1,'maximized_coal_log_likelihood_IMRPhenomD(double *frequencies, size_t length, double *real_data, double *imag_data, double *noise, double SNR, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, bool NSflag):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a2635acb06ca0e448854aaab3fd7037c3',1,'maximized_coal_log_likelihood_IMRPhenomD(double *frequencies, size_t length, double *real_data, double *imag_data, double *noise, double SNR, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, bool NSflag, fftw_outline *plan):&#160;mcmc_gw.cpp']]],
  ['maximized_5fcoal_5flog_5flikelihood_5fimrphenomd_5ffull_5fparam_244',['maximized_coal_log_likelihood_IMRPhenomD_Full_Param',['../mcmc__gw_8cpp.html#ac66db6fc5c75ee33b84a48724b4738ef',1,'maximized_coal_log_likelihood_IMRPhenomD_Full_Param(double *frequencies, int length, std::complex&lt; double &gt; *data, double *noise, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, double Luminosity_Distance, double theta, double phi, double iota, bool NSflag, fftw_outline *plan):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#a2322ab4b42380145e742ad564c643874',1,'maximized_coal_log_likelihood_IMRPhenomD_Full_Param(double *frequencies, size_t length, double *real_data, double *imag_data, double *noise, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, double Luminosity_Distance, double theta, double phi, double iota, bool NSflag):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#a3fbdbcf0651bad5541eb6e366c62de23',1,'maximized_coal_log_likelihood_IMRPhenomD_Full_Param(double *frequencies, size_t length, double *real_data, double *imag_data, double *noise, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, double Luminosity_Distance, double theta, double phi, double iota, bool NSflag, fftw_outline *plan):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#ac66db6fc5c75ee33b84a48724b4738ef',1,'maximized_coal_log_likelihood_IMRPhenomD_Full_Param(double *frequencies, int length, std::complex&lt; double &gt; *data, double *noise, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, double Luminosity_Distance, double theta, double phi, double iota, bool NSflag, fftw_outline *plan):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a2322ab4b42380145e742ad564c643874',1,'maximized_coal_log_likelihood_IMRPhenomD_Full_Param(double *frequencies, size_t length, double *real_data, double *imag_data, double *noise, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, double Luminosity_Distance, double theta, double phi, double iota, bool NSflag):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a3fbdbcf0651bad5541eb6e366c62de23',1,'maximized_coal_log_likelihood_IMRPhenomD_Full_Param(double *frequencies, size_t length, double *real_data, double *imag_data, double *noise, double chirpmass, double symmetric_mass_ratio, double spin1, double spin2, double Luminosity_Distance, double theta, double phi, double iota, bool NSflag, fftw_outline *plan):&#160;mcmc_gw.cpp']]],
  ['maximized_5flog_5flikelihood_245',['maximized_Log_Likelihood',['../mcmc__gw_8cpp.html#a0ae3ffbe1994b8a368c130b7f552ea28',1,'maximized_Log_Likelihood(std::complex&lt; double &gt; *data, double *psd, double *frequencies, size_t length, gen_params_base&lt; double &gt; *params, std::string detector, std::string generation_method, fftw_outline *plan):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a0ae3ffbe1994b8a368c130b7f552ea28',1,'maximized_Log_Likelihood(std::complex&lt; double &gt; *data, double *psd, double *frequencies, size_t length, gen_params_base&lt; double &gt; *params, std::string detector, std::string generation_method, fftw_outline *plan):&#160;mcmc_gw.cpp']]],
  ['maximized_5flog_5flikelihood_5faligned_5fspin_5finternal_246',['maximized_Log_Likelihood_aligned_spin_internal',['../mcmc__gw_8cpp.html#aecba6e7ba4f5a7463c95e0d65cfb3145',1,'maximized_Log_Likelihood_aligned_spin_internal(std::complex&lt; double &gt; *data, double *psd, double *frequencies, std::complex&lt; double &gt; *detector_response, size_t length, fftw_outline *plan):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#aecba6e7ba4f5a7463c95e0d65cfb3145',1,'maximized_Log_Likelihood_aligned_spin_internal(std::complex&lt; double &gt; *data, double *psd, double *frequencies, std::complex&lt; double &gt; *detector_response, size_t length, fftw_outline *plan):&#160;mcmc_gw.cpp']]],
  ['maximized_5flog_5flikelihood_5funaligned_5fspin_5finternal_247',['maximized_Log_Likelihood_unaligned_spin_internal',['../mcmc__gw_8cpp.html#a2c44e4b3acd713ae4ad07b92b96ac017',1,'maximized_Log_Likelihood_unaligned_spin_internal(std::complex&lt; double &gt; *data, double *psd, double *frequencies, std::complex&lt; double &gt; *hplus, std::complex&lt; double &gt; *hcross, size_t length, fftw_outline *plan):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a2c44e4b3acd713ae4ad07b92b96ac017',1,'maximized_Log_Likelihood_unaligned_spin_internal(std::complex&lt; double &gt; *data, double *psd, double *frequencies, std::complex&lt; double &gt; *hplus, std::complex&lt; double &gt; *hcross, size_t length, fftw_outline *plan):&#160;mcmc_gw.cpp']]],
  ['mc_5freject_2ecpp_248',['mc_reject.cpp',['../mc__reject_8cpp.html',1,'']]],
  ['mc_5freject_2eh_249',['mc_reject.h',['../mc__reject_8h.html',1,'']]],
  ['mcmc_5fgw_2ecpp_250',['mcmc_gw.cpp',['../mcmc__gw_8cpp.html',1,'']]],
  ['mcmc_5fgw_2eh_251',['mcmc_gw.h',['../mcmc__gw_8h.html',1,'']]],
  ['mcmc_5fgw_5ftool_2ecpp_252',['mcmc_gw_tool.cpp',['../mcmc__gw__tool_8cpp.html',1,'']]],
  ['mcmc_5fprep_5fparams_253',['MCMC_prep_params',['../mcmc__gw_8cpp.html#a3d25fe8ffdebc05616f1e003485770ba',1,'MCMC_prep_params(double *param, double *temp_params, gen_params_base&lt; double &gt; *gen_params, int dimension, std::string generation_method):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a3d25fe8ffdebc05616f1e003485770ba',1,'MCMC_prep_params(double *param, double *temp_params, gen_params_base&lt; double &gt; *gen_params, int dimension, std::string generation_method):&#160;mcmc_gw.cpp']]],
  ['mcmc_5fsampler_2ecpp_254',['mcmc_sampler.cpp',['../mcmc__sampler_8cpp.html',1,'']]],
  ['mcmc_5fsampler_2eh_255',['mcmc_sampler.h',['../mcmc__sampler_8h.html',1,'']]],
  ['mcmc_5fsampler_5finternals_2ecpp_256',['mcmc_sampler_internals.cpp',['../mcmc__sampler__internals_8cpp.html',1,'']]],
  ['mcmc_5fsampler_5finternals_2eh_257',['mcmc_sampler_internals.h',['../mcmc__sampler__internals_8h.html',1,'']]],
  ['mcmc_5fstep_258',['mcmc_step',['../mcmc__sampler__internals_8cpp.html#a980887f02fa645f29724117539565a91',1,'mcmc_step(sampler *sampler, double *current_param, double *next_param, int *current_status, int *next_status, int chain_number):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8h.html#a980887f02fa645f29724117539565a91',1,'mcmc_step(sampler *sampler, double *current_param, double *next_param, int *current_status, int *next_status, int chain_number):&#160;mcmc_sampler_internals.cpp']]],
  ['mcr_5fjob_259',['mcr_job',['../structmcr__job.html',1,'']]],
  ['mcr_5fsampler_260',['mcr_sampler',['../classmcr__sampler.html',1,'mcr_sampler'],['../classmcr__sampler.html#a9f9da59f2b90a771e1fcd659aedbf920',1,'mcr_sampler::mcr_sampler(void(*probability)(double *prob, void *parameters, int d, int threadid), void(*draw_parameters)(void *prop_parameters, int d, int threadid, gsl_rng *r), int dimension, double *param_ranges_max, double *param_ranges_min)'],['../classmcr__sampler.html#a180f9fed263d2a277185a57604e85dd4',1,'mcr_sampler::mcr_sampler(void(*probability)(double *prob, void *parameters, int d, int threadid), void(*draw_parameters)(void *prop_parameters, int d, int threadid, gsl_rng *r), int dimension, double *param_ranges_max, double *param_ranges_min, int thread_num, bool thread_safe)']]],
  ['mmala_5fstep_261',['mmala_step',['../mcmc__sampler__internals_8cpp.html#a251e0a0b4059499d25f6d3c9957ceb1d',1,'mmala_step(sampler *sampler, double *current_param, double *proposed_param, int *current_status, int *proposed_status):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8h.html#a251e0a0b4059499d25f6d3c9957ceb1d',1,'mmala_step(sampler *sampler, double *current_param, double *proposed_param, int *current_status, int *proposed_status):&#160;mcmc_sampler_internals.cpp']]],
  ['mpc_5fsec_262',['MPC_SEC',['../util_8h.html#a47be806b6c8a58bd030f167ca91ed201',1,'util.h']]],
  ['msol_5fsec_263',['MSOL_SEC',['../util_8h.html#a498f9210d23417e309c01ad5cb9a635b',1,'util.h']]]
];
