var searchData=
[
  ['p_5fn_5fdetector_673',['p_N_detector',['../detector__util_8cpp.html#aad9c958bcdfcfc478c0f3bcc2f8017d5',1,'p_N_detector(double omega, int samples, int N_detectors, std::string *detectors, int rand_seed):&#160;detector_util.cpp'],['../detector__util_8h.html#aad9c958bcdfcfc478c0f3bcc2f8017d5',1,'p_N_detector(double omega, int samples, int N_detectors, std::string *detectors, int rand_seed):&#160;detector_util.cpp']]],
  ['p_5fsingle_5fdetector_674',['p_single_detector',['../detector__util_8cpp.html#a742264b5eeff1d244e299d47cb7fa084',1,'p_single_detector(double omega, int samples):&#160;detector_util.cpp'],['../detector__util_8h.html#a742264b5eeff1d244e299d47cb7fa084',1,'p_single_detector(double omega, int samples):&#160;detector_util.cpp']]],
  ['p_5fsingle_5fdetector_5ffit_675',['p_single_detector_fit',['../detector__util_8cpp.html#a0af90e8d6505794a792d2b35bf583bef',1,'p_single_detector_fit(double omega):&#160;detector_util.cpp'],['../detector__util_8h.html#a0af90e8d6505794a792d2b35bf583bef',1,'p_single_detector_fit(double omega):&#160;detector_util.cpp']]],
  ['p_5fsingle_5fdetector_5finterp_676',['p_single_detector_interp',['../detector__util_8cpp.html#a38cf74dd41080e18fc64000605019c50',1,'p_single_detector_interp(double omega):&#160;detector_util.cpp'],['../detector__util_8h.html#a38cf74dd41080e18fc64000605019c50',1,'p_single_detector_interp(double omega):&#160;detector_util.cpp']]],
  ['p_5ftriple_5fdetector_5ffit_677',['p_triple_detector_fit',['../detector__util_8cpp.html#a8470b24a84da4e746ee95ff9bb87bbbc',1,'p_triple_detector_fit(double omega):&#160;detector_util.cpp'],['../detector__util_8h.html#a8470b24a84da4e746ee95ff9bb87bbbc',1,'p_triple_detector_fit(double omega):&#160;detector_util.cpp']]],
  ['p_5ftriple_5fdetector_5finterp_678',['p_triple_detector_interp',['../detector__util_8cpp.html#a2806107bf836833162b1f7e2b78b14d5',1,'p_triple_detector_interp(double omega):&#160;detector_util.cpp'],['../detector__util_8h.html#a2806107bf836833162b1f7e2b78b14d5',1,'p_triple_detector_interp(double omega):&#160;detector_util.cpp']]],
  ['parallel_5fsample_679',['parallel_sample',['../mc__reject_8cpp.html#a8e7fcdc575532164d9f76f27102b4c9a',1,'parallel_sample(int threadid, mcr_job job):&#160;mc_reject.cpp'],['../mc__reject_8h.html#a8e7fcdc575532164d9f76f27102b4c9a',1,'parallel_sample(int threadid, mcr_job job):&#160;mc_reject.cpp']]],
  ['phase_5fconnection_5fcoefficients_680',['phase_connection_coefficients',['../classIMRPhenomD.html#a6847c2c48302ff863b9a93354e71afcc',1,'IMRPhenomD']]],
  ['phase_5fins_681',['phase_ins',['../classgIMRPhenomD.html#a7f4ebb4ae13d1038a437f86862f6dce1',1,'gIMRPhenomD::phase_ins()'],['../classIMRPhenomD.html#a7073ff2be22b0251ca419d0b69dd9990',1,'IMRPhenomD::phase_ins()'],['../classppE__IMRPhenomD__Inspiral.html#a3187c9dba10e42f0bf20fb1e3bac9a52',1,'ppE_IMRPhenomD_Inspiral::phase_ins()'],['../classppE__IMRPhenomPv2__Inspiral.html#a829118c33d81ed4bcc4b48e7349c58f6',1,'ppE_IMRPhenomPv2_Inspiral::phase_ins()']]],
  ['phase_5fint_682',['phase_int',['../classIMRPhenomD.html#ad6a8bb9539e7494cad8a91aaa950cf50',1,'IMRPhenomD::phase_int()'],['../classppE__IMRPhenomD__IMR.html#a04dc31c54da6e199db28197665b469a1',1,'ppE_IMRPhenomD_IMR::phase_int()'],['../classppE__IMRPhenomPv2__IMR.html#a3597ad7a8a3c56227960673270f54ca2',1,'ppE_IMRPhenomPv2_IMR::phase_int()']]],
  ['phase_5fmr_683',['phase_mr',['../classIMRPhenomD.html#a2c9c226afc991458872e36bba204f395',1,'IMRPhenomD::phase_mr()'],['../classppE__IMRPhenomD__IMR.html#a3b64e9bbf566450687bcfaa85c0e493f',1,'ppE_IMRPhenomD_IMR::phase_mr()'],['../classppE__IMRPhenomPv2__IMR.html#af311f690d37b4dba25559ff330339467',1,'ppE_IMRPhenomPv2_IMR::phase_mr()']]],
  ['phase_5ftape_684',['phase_tape',['../classIMRPhenomD.html#ae456c25f87c34487e6e05f9cf5d2d08c',1,'IMRPhenomD::phase_tape()'],['../classppE__IMRPhenomD__Inspiral.html#a2fb1a8fb66e4204dbe397b792933afbe',1,'ppE_IMRPhenomD_Inspiral::phase_tape()'],['../classppE__IMRPhenomD__IMR.html#acf2ed8617b3e24ecc273a409ff579ce4',1,'ppE_IMRPhenomD_IMR::phase_tape()']]],
  ['phenompv2_5fjsf_5ffrom_5fparams_685',['PhenomPv2_JSF_from_params',['../classIMRPhenomPv2.html#a9c81435792ee35948b3e7b3438c1ef1e',1,'IMRPhenomPv2']]],
  ['phenompv2_5fparam_5ftransform_686',['PhenomPv2_Param_Transform',['../classIMRPhenomPv2.html#ae8f253a1feebc43995dd5d052c856e05',1,'IMRPhenomPv2']]],
  ['phenompv2_5fparam_5ftransform_5fj_687',['PhenomPv2_Param_Transform_J',['../classIMRPhenomPv2.html#a684f1bbc22773a72e8000de61c1b6def',1,'IMRPhenomPv2']]],
  ['phenompv2_5fparam_5ftransform_5freduced_688',['PhenomPv2_Param_Transform_reduced',['../classIMRPhenomPv2.html#a09917aef3521bd8e3b8d8516930077a0',1,'IMRPhenomPv2']]],
  ['populate_5fnoise_689',['populate_noise',['../detector__util_8cpp.html#ac7de9bc27fe8b7bc13e4c0a356d3b18d',1,'populate_noise(double *frequencies, std::string detector, double *noise_root, int length):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a96e8f667b0106557c0c285dc658b8ac3',1,'populate_noise(double *frequencies, std::string detector, double *noise_root, int length, double integration_time):&#160;detector_util.cpp'],['../detector__util_8h.html#a551c603f441283ca3fe5d415d47bdc4d',1,'populate_noise(double *frequencies, std::string detector, double *noise_root, int length=0):&#160;detector_util.cpp'],['../detector__util_8h.html#a96e8f667b0106557c0c285dc658b8ac3',1,'populate_noise(double *frequencies, std::string detector, double *noise_root, int length, double integration_time):&#160;detector_util.cpp']]],
  ['populate_5fsource_5fparameters_690',['populate_source_parameters',['../structsource__parameters.html#aa6b0e1aa5122c2887a3db4d40714ac84',1,'source_parameters']]],
  ['populate_5fsource_5fparameters_5fold_691',['populate_source_parameters_old',['../structsource__parameters.html#a1b9db2c7d8abf202ca908fd4e58b0949',1,'source_parameters']]],
  ['post_5fmerger_5fvariables_692',['post_merger_variables',['../classIMRPhenomD.html#a0d33a9a937a36f395300bab4276102af',1,'IMRPhenomD']]],
  ['pow_5fint_693',['pow_int',['../util_8cpp.html#a362581f25c83753aefac698e977cb73e',1,'pow_int(double base, int power):&#160;util.cpp'],['../util_8h.html#a362581f25c83753aefac698e977cb73e',1,'pow_int(double base, int power):&#160;util.cpp']]],
  ['precalc_5fpowers_5fins_694',['precalc_powers_ins',['../classIMRPhenomD.html#ade98ea0729f58a3216ecec948dec9e4a',1,'IMRPhenomD']]],
  ['precalc_5fpowers_5fins_5famp_695',['precalc_powers_ins_amp',['../classIMRPhenomD.html#ac25dfdbacff0e696d752db44dd0a6c6b',1,'IMRPhenomD']]],
  ['precalc_5fpowers_5fins_5fphase_696',['precalc_powers_ins_phase',['../classIMRPhenomD.html#aa4647f539a66554bcc5066861328cf06',1,'IMRPhenomD']]],
  ['precalc_5fpowers_5fpi_697',['precalc_powers_PI',['../classIMRPhenomD.html#a1181334310432c4d69ede3a3b2b0fcdb',1,'IMRPhenomD']]],
  ['printprogress_698',['printProgress',['../util_8cpp.html#a9d3b483a858efb84ce776bed255b6dd6',1,'printProgress(double percentage):&#160;util.cpp'],['../util_8h.html#a9d3b483a858efb84ce776bed255b6dd6',1,'printProgress(double percentage):&#160;util.cpp']]],
  ['pt_5fdynamical_5ftimescale_699',['PT_dynamical_timescale',['../mcmc__sampler__internals_8cpp.html#a1f07e7540a20f438aad42f569c2e22d2',1,'PT_dynamical_timescale(int t0, int nu, int t):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8h.html#a1f07e7540a20f438aad42f569c2e22d2',1,'PT_dynamical_timescale(int t0, int nu, int t):&#160;mcmc_sampler_internals.cpp']]],
  ['ptmcmc_5fmethod_5fspecific_5fprep_700',['PTMCMC_method_specific_prep',['../mcmc__gw_8cpp.html#a419df9528f286aba805c9dfa66118441',1,'PTMCMC_method_specific_prep(std::string generation_method, int dimension, double *seeding_var, bool local_seeding):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a419df9528f286aba805c9dfa66118441',1,'PTMCMC_method_specific_prep(std::string generation_method, int dimension, double *seeding_var, bool local_seeding):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_701',['PTMCMC_MH',['../mcmc__sampler_8cpp.html#af796088bcd5cd8e794d02d1b82610d5e',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a0c07c5f7d1d6a5391f0ee25cdafb42ac',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#ae64c69d79e039a5b9404ecdde3b3377f',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a9bb270581c6d0a3822ff411eebd86cb0',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_702',['PTMCMC_MH_dynamic_PT_alloc',['../mcmc__sampler_8cpp.html#a6c63ce25491ebdf9b2aa6dd4651c0790',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a7fd6c85a11abf530541c10cbaf99f30f',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a7fd6c85a11abf530541c10cbaf99f30f',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a6c63ce25491ebdf9b2aa6dd4651c0790',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fgw_703',['PTMCMC_MH_dynamic_PT_alloc_GW',['../mcmc__gw_8cpp.html#a70290cf146e82c84ba0b7966db67f4c2',1,'PTMCMC_MH_dynamic_PT_alloc_GW(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a70290cf146e82c84ba0b7966db67f4c2',1,'PTMCMC_MH_dynamic_PT_alloc_GW(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5finternal_704',['PTMCMC_MH_dynamic_PT_alloc_internal',['../mcmc__sampler_8cpp.html#a8839fc4572cf8e0d17ebceec408e782a',1,'PTMCMC_MH_dynamic_PT_alloc_internal(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a8839fc4572cf8e0d17ebceec408e782a',1,'PTMCMC_MH_dynamic_PT_alloc_internal(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_705',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated',['../mcmc__sampler_8cpp.html#a33783ee80c1f93b43d1e9bca0dc55907',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a94f07c794491ccf76b31a57f4805e928',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a94f07c794491ccf76b31a57f4805e928',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), double(*log_likelihood)(double *param, int dimension, int chain_id, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, int chain_id, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a33783ee80c1f93b43d1e9bca0dc55907',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, void *parameters), double(*log_likelihood)(double *param, int dimension, void *parameters), void(*fisher)(double *param, int dimension, double **fisher, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5fgw_706',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW',['../mcmc__gw_8cpp.html#a810de43cfcb8a71ee343bfea775d59b0',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#a810de43cfcb8a71ee343bfea775d59b0',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5finternal_707',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal',['../mcmc__sampler_8cpp.html#a084c31ec2e87873946a4866b104fd733',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a084c31ec2e87873946a4866b104fd733',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5finternal_5fdriver_708',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal_driver',['../mcmc__sampler_8cpp.html#afa5117c4dfe1ac8bd457fb7bee622c6f',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal_driver(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#afa5117c4dfe1ac8bd457fb7bee622c6f',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal_driver(double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int corr_threshold, int corr_segments, double corr_converge_thresh, double corr_target_ac, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fgw_709',['PTMCMC_MH_GW',['../mcmc__gw_8cpp.html#a6ca0efb402fc7c541f018dabfb2c2c10',1,'PTMCMC_MH_GW(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_gw.cpp'],['../mcmc__gw_8h.html#acd2a3db010fe47534467fc7a3eefca53',1,'PTMCMC_MH_GW(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int dimension, int chain_id, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detector, int Nmod, int *bppe, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_5finternal_710',['PTMCMC_MH_internal',['../mcmc__sampler_8cpp.html#a5c94625e7e33e0d077ebb9ea7501fbe6',1,'PTMCMC_MH_internal(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#aab024a0142f4a4227385763c498dbe28',1,'PTMCMC_MH_internal(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, int, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, int, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, int, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5floop_711',['PTMCMC_MH_loop',['../mcmc__sampler_8cpp.html#aaa8ccb67ad90a3d27d713fcd652adfd2',1,'PTMCMC_MH_loop(sampler *sampler):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#aaa8ccb67ad90a3d27d713fcd652adfd2',1,'PTMCMC_MH_loop(sampler *sampler):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fstep_5fincremental_712',['PTMCMC_MH_step_incremental',['../mcmc__sampler_8cpp.html#a772e17f2034573d79c02bfa0ecd8c990',1,'PTMCMC_MH_step_incremental(sampler *sampler, int increment):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8h.html#a772e17f2034573d79c02bfa0ecd8c990',1,'PTMCMC_MH_step_incremental(sampler *sampler, int increment):&#160;mcmc_sampler.cpp']]]
];
