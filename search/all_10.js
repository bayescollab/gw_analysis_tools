var searchData=
[
  ['p_0',['p',['../structfftw__outline.html#a42f638a5f1b1792685c1897c6cb746ef',1,'fftw_outline']]],
  ['p_5fn_5fdetector_1',['p_N_detector',['../detector__util_8h.html#aad9c958bcdfcfc478c0f3bcc2f8017d5',1,'p_N_detector(double omega, int samples, int N_detectors, std::string *detectors, int rand_seed):&#160;detector_util.cpp'],['../detector__util_8cpp.html#aad9c958bcdfcfc478c0f3bcc2f8017d5',1,'p_N_detector(double omega, int samples, int N_detectors, std::string *detectors, int rand_seed):&#160;detector_util.cpp']]],
  ['p_5fsingle_5fdetector_2',['p_single_detector',['../detector__util_8h.html#a742264b5eeff1d244e299d47cb7fa084',1,'p_single_detector(double omega, int samples):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a742264b5eeff1d244e299d47cb7fa084',1,'p_single_detector(double omega, int samples):&#160;detector_util.cpp']]],
  ['p_5fsingle_5fdetector_5ffit_3',['p_single_detector_fit',['../detector__util_8h.html#a0af90e8d6505794a792d2b35bf583bef',1,'p_single_detector_fit(double omega):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a0af90e8d6505794a792d2b35bf583bef',1,'p_single_detector_fit(double omega):&#160;detector_util.cpp']]],
  ['p_5fsingle_5fdetector_5finterp_4',['p_single_detector_interp',['../detector__util_8h.html#a38cf74dd41080e18fc64000605019c50',1,'p_single_detector_interp(double omega):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a38cf74dd41080e18fc64000605019c50',1,'p_single_detector_interp(double omega):&#160;detector_util.cpp']]],
  ['p_5ftriple_5fdetector_5ffit_5',['p_triple_detector_fit',['../detector__util_8h.html#a8470b24a84da4e746ee95ff9bb87bbbc',1,'p_triple_detector_fit(double omega):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a8470b24a84da4e746ee95ff9bb87bbbc',1,'p_triple_detector_fit(double omega):&#160;detector_util.cpp']]],
  ['p_5ftriple_5fdetector_5finterp_6',['p_triple_detector_interp',['../detector__util_8h.html#a2806107bf836833162b1f7e2b78b14d5',1,'p_triple_detector_interp(double omega):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a2806107bf836833162b1f7e2b78b14d5',1,'p_triple_detector_interp(double omega):&#160;detector_util.cpp']]],
  ['pack_5flocal_5fmod_5fstructure_7',['pack_local_mod_structure',['../mcmc__gw_8h.html#af13370b402086ce1b8367743279c93e0',1,'pack_local_mod_structure(mcmc_data_interface *interface, double *param, int *status, std::string waveform_extended, void *parameters, MCMC_modification_struct *full_struct, MCMC_modification_struct *local_struct):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#af13370b402086ce1b8367743279c93e0',1,'pack_local_mod_structure(mcmc_data_interface *interface, double *param, int *status, std::string waveform_extended, void *parameters, MCMC_modification_struct *full_struct, MCMC_modification_struct *local_struct):&#160;mcmc_gw.cpp']]],
  ['pack_5flocal_5fmod_5fstructure_5fpy_8',['pack_local_mod_structure_py',['../gwatpy__wrapping_8h.html#a0b8e8698db5ab9ca537e60a7e854f7fd',1,'pack_local_mod_structure_py(mcmc_data_interface *interface, double *param, int *status, char *waveform_extended, MCMC_modification_struct *full_struct, MCMC_modification_struct *local_struct):&#160;gwatpy_wrapping.cpp'],['../gwatpy__wrapping_8cpp.html#a0b8e8698db5ab9ca537e60a7e854f7fd',1,'pack_local_mod_structure_py(mcmc_data_interface *interface, double *param, int *status, char *waveform_extended, MCMC_modification_struct *full_struct, MCMC_modification_struct *local_struct):&#160;gwatpy_wrapping.cpp']]],
  ['pack_5flocal_5fmod_5fstructure_5fv2_9',['pack_local_mod_structure_v2',['../mcmc__gw__extended_8cpp.html#a0dd88d4609aeb55ef44db27915146b2a',1,'mcmc_gw_extended.cpp']]],
  ['pade_10',['Pade',['../classIMRPhenomD__NRT.html#a7a0a71083576eec8667744829c179b3f',1,'IMRPhenomD_NRT']]],
  ['pair_5fpop_11',['pair_pop',['../classThreadPool.html#a68826d3070757ae2089f1d4d5cdde966',1,'ThreadPool']]],
  ['parallel_5fjob_5fnum_12',['parallel_job_num',['../classmcr__sampler.html#af8f92c143d75d35fae0714ec955b81b9',1,'mcr_sampler']]],
  ['parallel_5fsample_13',['parallel_sample',['../mc__reject_8h.html#a8e7fcdc575532164d9f76f27102b4c9a',1,'parallel_sample(int threadid, mcr_job job):&#160;mc_reject.cpp'],['../mc__reject_8cpp.html#a8e7fcdc575532164d9f76f27102b4c9a',1,'parallel_sample(int threadid, mcr_job job):&#160;mc_reject.cpp']]],
  ['param_5franges_5fmax_14',['param_ranges_max',['../classmcr__sampler.html#a962ef98523fcd354b538175f335baf58',1,'mcr_sampler']]],
  ['param_5franges_5fmin_15',['param_ranges_min',['../classmcr__sampler.html#a99855b66f70b2fbea2458aa4046088e8',1,'mcr_sampler']]],
  ['param_5fstatus_16',['param_status',['../classsampler.html#aa04bac8a01666df1e63f66106978fc0e',1,'sampler']]],
  ['params_17',['params',['../structgsl__snr__struct.html#a0919a6d9e322d8c8192216608f39eaf1',1,'gsl_snr_struct']]],
  ['pbstr_18',['PBSTR',['../util_8h.html#a93f03159397f25c687840129b18c972d',1,'util.h']]],
  ['pbwidth_19',['PBWIDTH',['../util_8h.html#a69793e71975c25754a8236df29896e15',1,'util.h']]],
  ['pd_20',['PD',['../classlogPriorStandard__D.html#a259ae129ea361121e4eb205b04b83fba',1,'logPriorStandard_D::PD'],['../classlogPriorStandard__P.html#ad58cbf1731002882504b359836065358',1,'logPriorStandard_P::PD']]],
  ['pdet_5ftriple_5fdetector_5ffit_21',['pdet_triple_detector_fit',['../detector__util_8h.html#a844b28c8dcc0fcbb014b38c1ba013811',1,'pdet_triple_detector_fit(double rho_thresh, double rho_opt):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a844b28c8dcc0fcbb014b38c1ba013811',1,'pdet_triple_detector_fit(double rho_thresh, double rho_opt):&#160;detector_util.cpp']]],
  ['pfn_22',['pfn',['../classmcr__sampler.html#ad87f2d7738158ed37629c34336b0aa60',1,'mcr_sampler']]],
  ['phase_5fconnection_5fcoefficients_23',['phase_connection_coefficients',['../classIMRPhenomD.html#a6847c2c48302ff863b9a93354e71afcc',1,'IMRPhenomD']]],
  ['phase_5fins_24',['phase_ins',['../classgIMRPhenomD.html#a7f4ebb4ae13d1038a437f86862f6dce1',1,'gIMRPhenomD::phase_ins()'],['../classgIMRPhenomPv2.html#a38af0a8b925f448bf7f865cb6c2d4483',1,'gIMRPhenomPv2::phase_ins()'],['../classIMRPhenomD.html#a7073ff2be22b0251ca419d0b69dd9990',1,'IMRPhenomD::phase_ins()'],['../classIMRPhenomPv2__NRT.html#ac49ec33ba8d2a4e45bee6e16ca02af38',1,'IMRPhenomPv2_NRT::phase_ins()'],['../classppE__IMRPhenomD__Inspiral.html#a3187c9dba10e42f0bf20fb1e3bac9a52',1,'ppE_IMRPhenomD_Inspiral::phase_ins()'],['../classppE__IMRPhenomD__NRT__Inspiral.html#a38c7ff85cfba10a20c8561c519937a0a',1,'ppE_IMRPhenomD_NRT_Inspiral::phase_ins()'],['../classppE__IMRPhenomPv2__Inspiral.html#a829118c33d81ed4bcc4b48e7349c58f6',1,'ppE_IMRPhenomPv2_Inspiral::phase_ins()']]],
  ['phase_5fins_5fnrt_25',['phase_ins_NRT',['../classIMRPhenomD__NRT.html#a6bd23859be4f934e5fd6b8ef6b3b92ff',1,'IMRPhenomD_NRT']]],
  ['phase_5fins_5fnrt_5fd_26',['phase_ins_NRT_D',['../classIMRPhenomD__NRT.html#aef78a1f9a65b4aec6d25d5f7cfc0fa9c',1,'IMRPhenomD_NRT']]],
  ['phase_5fint_27',['phase_int',['../classIMRPhenomD.html#ad6a8bb9539e7494cad8a91aaa950cf50',1,'IMRPhenomD::phase_int()'],['../classppE__IMRPhenomD__IMR.html#a04dc31c54da6e199db28197665b469a1',1,'ppE_IMRPhenomD_IMR::phase_int()'],['../classppE__IMRPhenomD__NRT__IMR.html#a1dceb35bc8f7b9e762c7965c793448bb',1,'ppE_IMRPhenomD_NRT_IMR::phase_int()'],['../classppE__IMRPhenomPv2__IMR.html#a713b095dacec9472b5361c1caf884347',1,'ppE_IMRPhenomPv2_IMR::phase_int()']]],
  ['phase_5fmr_28',['phase_mr',['../classIMRPhenomD.html#a2c9c226afc991458872e36bba204f395',1,'IMRPhenomD::phase_mr()'],['../classppE__IMRPhenomD__IMR.html#a3b64e9bbf566450687bcfaa85c0e493f',1,'ppE_IMRPhenomD_IMR::phase_mr()'],['../classppE__IMRPhenomD__NRT__IMR.html#aee02b90af458755882f48d3db9694ae6',1,'ppE_IMRPhenomD_NRT_IMR::phase_mr()'],['../classppE__IMRPhenomPv2__IMR.html#a498e1d8b7ea85028b295feb9487ca066',1,'ppE_IMRPhenomPv2_IMR::phase_mr()']]],
  ['phase_5fspin_5fnrt_29',['phase_spin_NRT',['../classIMRPhenomD__NRT.html#a81b3310101eaabfd7641c4ebeee8c591',1,'IMRPhenomD_NRT']]],
  ['phase_5ftape_30',['phase_tape',['../classIMRPhenomD.html#ae456c25f87c34487e6e05f9cf5d2d08c',1,'IMRPhenomD']]],
  ['phase_5ftapes_31',['phase_tapes',['../structgsl__subroutine.html#ae3f14cb143f4e7d1b6d0be279370ad26',1,'gsl_subroutine']]],
  ['phenomp_5ffisher_32',['PhenomP_fisher',['../fisher_8h.html#ac16fd5c6296dd496e81c51ab67fcc983',1,'fisher.h']]],
  ['phenomp_5fparametersfromsourceframe_33',['PhenomP_ParametersFromSourceFrame',['../IMRPhenomPv3utils_8h.html#a9338257091810f8819f1e9d49ab7fd3b',1,'PhenomP_ParametersFromSourceFrame(T *chi1_l, T *chi2_l, T *chip, T *thetaJN, T *alpha0, T *phi_aligned, T *zeta_polariz, const T m1, const T m2, const T f_ref, const T phiRef, const T incl, const T s1x, const T s1y, const T s1z, const T s2x, const T s2y, const T s2z, IMRPhenomP_version_type IMRPhenomP_version):&#160;IMRPhenomPv3utils.cpp'],['../IMRPhenomPv3utils_8cpp.html#a9338257091810f8819f1e9d49ab7fd3b',1,'PhenomP_ParametersFromSourceFrame(T *chi1_l, T *chi2_l, T *chip, T *thetaJN, T *alpha0, T *phi_aligned, T *zeta_polariz, const T m1, const T m2, const T f_ref, const T phiRef, const T incl, const T s1x, const T s1y, const T s1z, const T s2x, const T s2y, const T s2z, IMRPhenomP_version_type IMRPhenomP_version):&#160;IMRPhenomPv3utils.cpp']]],
  ['phenomp_5fparametersfromsourceframe_3c_20adouble_20_3e_34',['PhenomP_ParametersFromSourceFrame&lt; adouble &gt;',['../IMRPhenomPv3utils_8cpp.html#aa404c19887dccea6bbc99bee27a7dd92',1,'IMRPhenomPv3utils.cpp']]],
  ['phenomp_5fparametersfromsourceframe_3c_20double_20_3e_35',['PhenomP_ParametersFromSourceFrame&lt; double &gt;',['../IMRPhenomPv3utils_8cpp.html#aeb8e809f6618d310e31148b1706507eb',1,'IMRPhenomPv3utils.cpp']]],
  ['phenompcomputewignerd_36',['PhenomPComputeWignerD',['../IMRPhenomPv3_8h.html#a639f6740d99c72a414dbc6b1a8aafc8e',1,'PhenomPComputeWignerD(T d2[5], T dm2[5], T b, source_parameters&lt; T &gt; *params):&#160;IMRPhenomPv3.cpp'],['../IMRPhenomPv3_8cpp.html#a639f6740d99c72a414dbc6b1a8aafc8e',1,'PhenomPComputeWignerD(T d2[5], T dm2[5], T b, source_parameters&lt; T &gt; *params):&#160;IMRPhenomPv3.cpp']]],
  ['phenomprecessingspinenforceprimary_37',['PhenomPrecessingSpinEnforcePrimary',['../IMRPhenomPv3utils_8h.html#ab58222e2596b99aa5d8594b5ce6a13ee',1,'PhenomPrecessingSpinEnforcePrimary(T *m1, T *m2, T *chi1x, T *chi1y, T *chi1z, T *chi2x, T *chi2y, T *chi2z):&#160;IMRPhenomPv3utils.cpp'],['../IMRPhenomPv3utils_8cpp.html#ab58222e2596b99aa5d8594b5ce6a13ee',1,'PhenomPrecessingSpinEnforcePrimary(T *m1, T *m2, T *chi1x, T *chi1y, T *chi1z, T *chi2x, T *chi2y, T *chi2z):&#160;IMRPhenomPv3utils.cpp']]],
  ['phenomprecessingspinenforceprimary_3c_20adouble_20_3e_38',['PhenomPrecessingSpinEnforcePrimary&lt; adouble &gt;',['../IMRPhenomPv3utils_8cpp.html#a127039293897f87663500bc1be218352',1,'IMRPhenomPv3utils.cpp']]],
  ['phenomprecessingspinenforceprimary_3c_20double_20_3e_39',['PhenomPrecessingSpinEnforcePrimary&lt; double &gt;',['../IMRPhenomPv3utils_8cpp.html#a07762b5905193f7d434534cd7b8f1e21',1,'IMRPhenomPv3utils.cpp']]],
  ['phenompv2_5finplane_5fspin_40',['PhenomPv2_inplane_spin',['../classIMRPhenomPv2.html#a3ac01e83cf58d5fe70056afd66e9d7fe',1,'IMRPhenomPv2']]],
  ['phenompv2_5fjsf_5ffrom_5fparams_41',['PhenomPv2_JSF_from_params',['../classIMRPhenomPv2.html#a9c81435792ee35948b3e7b3438c1ef1e',1,'IMRPhenomPv2']]],
  ['phenompv2_5fparam_5ftransform_42',['PhenomPv2_Param_Transform',['../classIMRPhenomPv2.html#ae8f253a1feebc43995dd5d052c856e05',1,'IMRPhenomPv2']]],
  ['phenompv2_5fparam_5ftransform_5fj_43',['PhenomPv2_Param_Transform_J',['../classIMRPhenomPv2.html#a684f1bbc22773a72e8000de61c1b6def',1,'IMRPhenomPv2']]],
  ['phenompv2_5fparam_5ftransform_5freduced_44',['PhenomPv2_Param_Transform_reduced',['../classIMRPhenomPv2.html#a09917aef3521bd8e3b8d8516930077a0',1,'IMRPhenomPv2']]],
  ['phenompv3_5fparam_5ftransform_45',['PhenomPv3_Param_Transform',['../IMRPhenomPv3utils_8h.html#a99ef9bf0c8381e7427a8b63dfc9f20c8',1,'PhenomPv3_Param_Transform(source_parameters&lt; T &gt; *out, gen_params_base&lt; T &gt; *in):&#160;IMRPhenomPv3utils.cpp'],['../IMRPhenomPv3utils_8cpp.html#a99ef9bf0c8381e7427a8b63dfc9f20c8',1,'PhenomPv3_Param_Transform(source_parameters&lt; T &gt; *out, gen_params_base&lt; T &gt; *in):&#160;IMRPhenomPv3utils.cpp']]],
  ['phenompv3_5fparam_5ftransform_3c_20adouble_20_3e_46',['PhenomPv3_Param_Transform&lt; adouble &gt;',['../IMRPhenomPv3utils_8cpp.html#a00f26d28602162891b31c9e472cd469a',1,'IMRPhenomPv3utils.cpp']]],
  ['phenompv3_5fparam_5ftransform_3c_20double_20_3e_47',['PhenomPv3_Param_Transform&lt; double &gt;',['../IMRPhenomPv3utils_8cpp.html#a9f75abfccacae9dca74ea02b06c20193',1,'IMRPhenomPv3utils.cpp']]],
  ['phenompv3storage_48',['PhenomPv3Storage',['../structPhenomPv3Storage.html',1,'']]],
  ['phi_49',['PHI',['../classTaylorT2.html#a86043dddc96c05ad7e5c243b5920a3f8',1,'TaylorT2']]],
  ['phi_50',['phi',['../classgen__params__base.html#a500f71cd641e52356d6371894f7d8a07',1,'gen_params_base::phi'],['../structsource__parameters.html#ac9b7d9ce563fe8e9241e5b9165746b13',1,'source_parameters::phi']]],
  ['phi1_5fprior_51',['phi1_prior',['../structpriorData.html#a76c28978943499e22a43edacf25c8a6b',1,'priorData']]],
  ['phi2_5fprior_52',['phi2_prior',['../structpriorData.html#a52f750e26b360be4e2359d19c052659d',1,'priorData']]],
  ['phi_5faligned_53',['phi_aligned',['../structPhenomPv3Storage.html#a097071685ea27eae7d253b6634b8bcd8',1,'PhenomPv3Storage::phi_aligned'],['../classgen__params__base.html#a1b6c91991fff3feea67e473e0e6ab448',1,'gen_params_base::phi_aligned'],['../structsource__parameters.html#a0b50846d1e17e9cded5879e3ecc76841',1,'source_parameters::phi_aligned']]],
  ['phi_5fj_5fecl_54',['phi_j_ecl',['../classgen__params__base.html#a7cf7b18272c57aa3f07efac05ad8ddd9',1,'gen_params_base']]],
  ['phi_5fl_55',['phi_l',['../classgen__params__base.html#aaec5fafce24e74b099b713f47d25045f',1,'gen_params_base']]],
  ['phii_56',['phii',['../classgen__params__base.html#a6a47aa9b90719251e70da1481acd3ca8',1,'gen_params_base::phii'],['../structsource__parameters.html#a753157760fe4a88dc5550bb3eaad8eba',1,'source_parameters::phii']]],
  ['phijl_57',['phiJL',['../classgen__params__base.html#ab37864386335e3df52d0d7beb077d57a',1,'gen_params_base::phiJL'],['../structsource__parameters.html#a6d6642a6ac2b70e0ed5c7a56e3b3372c',1,'source_parameters::phiJL']]],
  ['phip_58',['phip',['../classgen__params__base.html#a313d4d82fe7474eba59562af31cb20b8',1,'gen_params_base::phip'],['../structsource__parameters.html#aaab7aa48e3f89cadaa2b1c768f1ab0d1',1,'source_parameters::phip']]],
  ['phiref_59',['phiRef',['../structPhenomPv3Storage.html#aeab5be9838f0adf6a2b2922cf0bb19da',1,'PhenomPv3Storage::phiRef'],['../classgen__params__base.html#a321a6f0749f80d869c47eba274d8b6ff',1,'gen_params_base::phiRef'],['../structsource__parameters.html#a9f287773c706c559ea190229ff0773b4',1,'source_parameters::phiRef']]],
  ['phiz_5f0_60',['phiz_0',['../structsysprecquant.html#a597ca31e9b70f3d8170ffea781447c51',1,'sysprecquant']]],
  ['phiz_5fof_5fxi_61',['phiz_of_xi',['../IMRPhenomPv3utils_8h.html#aa3d904e69f7487bde419c9c99472e8a6',1,'phiz_of_xi(const T xi, const T xi_2, const T J_norm, const sysprecquant&lt; T &gt; *system):&#160;IMRPhenomPv3utils.cpp'],['../IMRPhenomPv3utils_8cpp.html#aa3d904e69f7487bde419c9c99472e8a6',1,'phiz_of_xi(const T xi, const T xi_2, const T J_norm, const sysprecquant&lt; T &gt; *system):&#160;IMRPhenomPv3utils.cpp']]],
  ['phiz_5fof_5fxi_3c_20adouble_20_3e_62',['phiz_of_xi&lt; adouble &gt;',['../IMRPhenomPv3utils_8cpp.html#a1507412a0a5527adce38debb7b664c08',1,'IMRPhenomPv3utils.cpp']]],
  ['phiz_5fof_5fxi_3c_20double_20_3e_63',['phiz_of_xi&lt; double &gt;',['../IMRPhenomPv3utils_8cpp.html#a876f3e7a0e9570bbfedb1dda0c0f3b84',1,'IMRPhenomPv3utils.cpp']]],
  ['pi2third_64',['PI2third',['../structuseful__powers.html#acb8ebe3afa5700faabee08772532f11e',1,'useful_powers']]],
  ['pi4third_65',['PI4third',['../structuseful__powers.html#ab980b3eea9af1225b75450837c6da7ab',1,'useful_powers']]],
  ['pi5third_66',['PI5third',['../structuseful__powers.html#a844f8ca2f137bdd2bd51bcacb8a11fd0',1,'useful_powers']]],
  ['pi7third_67',['PI7third',['../structuseful__powers.html#a398b4320fabb77a71a6cfb942ccf4fb8',1,'useful_powers']]],
  ['picube_68',['PIcube',['../structuseful__powers.html#abf93d647fb55848266bfa179a6118c22',1,'useful_powers']]],
  ['piminus_5f5third_69',['PIminus_5third',['../structuseful__powers.html#a4053c92711daa53f53a1e46d239cf19e',1,'useful_powers']]],
  ['pisquare_70',['PIsquare',['../structuseful__powers.html#a17019be1f43fc88a0a8906c0b0c86179',1,'useful_powers']]],
  ['pithird_71',['PIthird',['../structuseful__powers.html#a4b48e36e3acf84d91a81fe1cc8d9a7a7',1,'useful_powers']]],
  ['planforward_72',['planforward',['../classthreaded__ac__jobs__fft.html#ac862074b94a8a1403f355110bf428cfc',1,'threaded_ac_jobs_fft']]],
  ['planreverse_73',['planreverse',['../classthreaded__ac__jobs__fft.html#a9f821f5df06f0dd6b223444759143c0e',1,'threaded_ac_jobs_fft']]],
  ['pn_5fwaveform_5futil_2ecpp_74',['pn_waveform_util.cpp',['../pn__waveform__util_8cpp.html',1,'']]],
  ['pn_5fwaveform_5futil_2eh_75',['pn_waveform_util.h',['../pn__waveform__util_8h.html',1,'']]],
  ['pnorder_76',['PNorder',['../classgen__params__base.html#a23d99c66d665358ce6d0208342fe1951',1,'gen_params_base::PNorder'],['../structsource__parameters.html#a2ed0bb61662da9585b4eb00c04c1bbbc',1,'source_parameters::PNorder']]],
  ['pnseries_5fbeta_77',['PNSeries_beta',['../ppE__utilities_8h.html#a7f550078445f8196254ab50925c99473',1,'ppE_utilities.h']]],
  ['pool_78',['pool',['../classsampler.html#aa674666a7515ce0853734e1337ffd402',1,'sampler']]],
  ['poolptr_79',['poolptr',['../mcmc__sampler_8cpp.html#abdef295640937ef20f6a403db46c3946',1,'mcmc_sampler.cpp']]],
  ['populate_5fchain_5ftemperatures_80',['populate_chain_temperatures',['../classmcmc__sampler__output.html#ad4341553ced6c483f35bbaaf7af38471',1,'mcmc_sampler_output']]],
  ['populate_5finitial_5foutput_81',['populate_initial_output',['../classmcmc__sampler__output.html#aad3fd5092183b7b36735ccc6ca822284',1,'mcmc_sampler_output']]],
  ['populate_5fnoise_82',['populate_noise',['../detector__util_8h.html#a190c1fc72354b7777f3d67261fcee374',1,'populate_noise(double *frequencies, std::string detector, double *noise_root, int length, double integration_time=48):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a96e8f667b0106557c0c285dc658b8ac3',1,'populate_noise(double *frequencies, std::string detector, double *noise_root, int length, double integration_time):&#160;detector_util.cpp']]],
  ['populate_5fnoise_5fpy_83',['populate_noise_py',['../gwatpy__wrapping_8h.html#a252c604dc1f52c2fb54cf3bb327afa74',1,'populate_noise_py(double *frequencies, char *detector, double *noise_root, int length, double integration_time):&#160;gwatpy_wrapping.cpp'],['../gwatpy__wrapping_8cpp.html#a252c604dc1f52c2fb54cf3bb327afa74',1,'populate_noise_py(double *frequencies, char *detector, double *noise_root, int length, double integration_time):&#160;gwatpy_wrapping.cpp']]],
  ['populate_5fsource_5fparameters_84',['populate_source_parameters',['../structsource__parameters.html#aa2ccc130dc3729613080a59215655aec',1,'source_parameters']]],
  ['populate_5fsource_5fparameters_5fold_85',['populate_source_parameters_old',['../structsource__parameters.html#a1b9db2c7d8abf202ca908fd4e58b0949',1,'source_parameters']]],
  ['post_5fmerger_5fvariables_86',['post_merger_variables',['../classIMRPhenomD.html#a0d33a9a937a36f395300bab4276102af',1,'IMRPhenomD']]],
  ['postmerger_5fparams_87',['postmerger_params',['../waveform__util_8h.html#a8ee807356a4303fb65463fde5286ea28',1,'postmerger_params(gen_params_base&lt; T &gt; *params, std::string generation_method, T *fpeak, T *fdamp, T *fRD):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a8ee807356a4303fb65463fde5286ea28',1,'postmerger_params(gen_params_base&lt; T &gt; *params, std::string generation_method, T *fpeak, T *fdamp, T *fRD):&#160;waveform_util.cpp']]],
  ['postmerger_5fparams_3c_20adouble_20_3e_88',['postmerger_params&lt; adouble &gt;',['../waveform__util_8cpp.html#a30cab76614a6152996df1e71871337db',1,'waveform_util.cpp']]],
  ['postmerger_5fparams_3c_20double_20_3e_89',['postmerger_params&lt; double &gt;',['../waveform__util_8cpp.html#acfbfa7a6f00e70cb658c34fabc1a3b6b',1,'waveform_util.cpp']]],
  ['pow_5fint_90',['pow_int',['../util_8h.html#a362581f25c83753aefac698e977cb73e',1,'pow_int(double base, int power):&#160;util.cpp'],['../util_8h.html#a2777502ea85828774e2a331576db996d',1,'pow_int(adouble base, int power):&#160;util.cpp'],['../util_8cpp.html#a362581f25c83753aefac698e977cb73e',1,'pow_int(double base, int power):&#160;util.cpp'],['../util_8cpp.html#a2777502ea85828774e2a331576db996d',1,'pow_int(adouble base, int power):&#160;util.cpp']]],
  ['powerlaw_5ffrom_5funiform_91',['powerlaw_from_uniform',['../util_8h.html#a18c22e7aa3a49af21903a0e6779939de',1,'powerlaw_from_uniform(double x0, double x1, double power, double uniform_random_number):&#160;util.cpp'],['../util_8cpp.html#a18c22e7aa3a49af21903a0e6779939de',1,'powerlaw_from_uniform(double x0, double x1, double power, double uniform_random_number):&#160;util.cpp']]],
  ['ppe_5fgimr_5fmapping_92',['ppE_gIMR_mapping',['../classgIMRPhenomD.html#a740109e9ea8670dd46e2bee0fa633538',1,'gIMRPhenomD']]],
  ['ppe_5fimrphenomd_2ecpp_93',['ppE_IMRPhenomD.cpp',['../ppE__IMRPhenomD_8cpp.html',1,'']]],
  ['ppe_5fimrphenomd_2eh_94',['ppE_IMRPhenomD.h',['../ppE__IMRPhenomD_8h.html',1,'']]],
  ['ppe_5fimrphenomd_5fimr_95',['ppE_IMRPhenomD_IMR',['../classppE__IMRPhenomD__IMR.html',1,'']]],
  ['ppe_5fimrphenomd_5finspiral_96',['ppE_IMRPhenomD_Inspiral',['../classppE__IMRPhenomD__Inspiral.html',1,'']]],
  ['ppe_5fimrphenomd_5fnrt_2ecpp_97',['ppE_IMRPhenomD_NRT.cpp',['../ppE__IMRPhenomD__NRT_8cpp.html',1,'']]],
  ['ppe_5fimrphenomd_5fnrt_2eh_98',['ppE_IMRPhenomD_NRT.h',['../ppE__IMRPhenomD__NRT_8h.html',1,'']]],
  ['ppe_5fimrphenomd_5fnrt_5fimr_99',['ppE_IMRPhenomD_NRT_IMR',['../classppE__IMRPhenomD__NRT__IMR.html',1,'']]],
  ['ppe_5fimrphenomd_5fnrt_5finspiral_100',['ppE_IMRPhenomD_NRT_Inspiral',['../classppE__IMRPhenomD__NRT__Inspiral.html',1,'']]],
  ['ppe_5fimrphenomp_2ecpp_101',['ppE_IMRPhenomP.cpp',['../ppE__IMRPhenomP_8cpp.html',1,'']]],
  ['ppe_5fimrphenomp_2eh_102',['ppE_IMRPhenomP.h',['../ppE__IMRPhenomP_8h.html',1,'']]],
  ['ppe_5fimrphenompv2_5fimr_103',['ppE_IMRPhenomPv2_IMR',['../classppE__IMRPhenomPv2__IMR.html',1,'']]],
  ['ppe_5fimrphenompv2_5finspiral_104',['ppE_IMRPhenomPv2_Inspiral',['../classppE__IMRPhenomPv2__Inspiral.html',1,'']]],
  ['ppe_5fmethod_105',['ppE_method',['../structtheory__ppE__map.html#a51bc00cc59defbab5a921531f703d776',1,'theory_ppE_map']]],
  ['ppe_5fnmod_106',['ppE_Nmod',['../structMCMC__modification__struct.html#a2fff76fa1a56a3be939d394789ec0315',1,'MCMC_modification_struct']]],
  ['ppe_5ftheory_5fcovariance_5ftransformation_107',['ppE_theory_covariance_transformation',['../fisher_8h.html#ac47e3de572425bad945ddd38d0dfa9d7',1,'ppE_theory_covariance_transformation(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **old_cov, double **new_cov):&#160;fisher.cpp'],['../fisher_8cpp.html#ac47e3de572425bad945ddd38d0dfa9d7',1,'ppE_theory_covariance_transformation(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **old_cov, double **new_cov):&#160;fisher.cpp']]],
  ['ppe_5ftheory_5ffisher_5ftransformation_108',['ppE_theory_fisher_transformation',['../fisher_8h.html#a8b73a325268c3d52e99f93aba2aba60e',1,'ppE_theory_fisher_transformation(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **old_fisher, double **new_fisher):&#160;fisher.cpp'],['../fisher_8cpp.html#a8b73a325268c3d52e99f93aba2aba60e',1,'ppE_theory_fisher_transformation(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **old_fisher, double **new_fisher):&#160;fisher.cpp']]],
  ['ppe_5ftheory_5ffisher_5ftransformation_5fcalculate_5fderivatives_109',['ppE_theory_fisher_transformation_calculate_derivatives',['../fisher_8h.html#a6ad1ade356b3dcec5f3f94df5dbdc991',1,'fisher.h']]],
  ['ppe_5ftheory_5ffisher_5ftransformation_5fpy_110',['ppE_theory_fisher_transformation_py',['../gwatpy__wrapping_8h.html#a253cfa9edb2504313aca887ee454856c',1,'ppE_theory_fisher_transformation_py(double m1, double m2, double *spin1, double *spin2, double chip, double phip, double Luminosity_Distance, double phiRef, double tc, double RA, double DEC, double phi_l, double theta_l, double psi, double incl_angle, double gmst, bool reduced_spin, bool sky_average, bool NSflag1, bool NSflag2, bool horizon_coord, bool equatorial_orientation, int Nmod, double *betappe, double **original_fisher, double **new_fisher, char *original_method, char *new_method, int dimension):&#160;gwatpy_wrapping.cpp'],['../gwatpy__wrapping_8cpp.html#a253cfa9edb2504313aca887ee454856c',1,'ppE_theory_fisher_transformation_py(double m1, double m2, double *spin1, double *spin2, double chip, double phip, double Luminosity_Distance, double phiRef, double tc, double RA, double DEC, double phi_l, double theta_l, double psi, double incl_angle, double gmst, bool reduced_spin, bool sky_average, bool NSflag1, bool NSflag2, bool horizon_coord, bool equatorial_orientation, int Nmod, double *betappe, double **original_fisher, double **new_fisher, char *original_method, char *new_method, int dimension):&#160;gwatpy_wrapping.cpp']]],
  ['ppe_5ftheory_5ftransformation_5fcalculate_5fderivatives_111',['ppE_theory_transformation_calculate_derivatives',['../fisher_8cpp.html#ad903809a1b57ad4dfee52ce8384b6ebd',1,'fisher.cpp']]],
  ['ppe_5ftheory_5ftransformation_5fjac_112',['ppE_theory_transformation_jac',['../fisher_8h.html#ac17390e3cb481a816a3e619a4f3f680a',1,'ppE_theory_transformation_jac(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **jac):&#160;fisher.cpp'],['../fisher_8cpp.html#ac17390e3cb481a816a3e619a4f3f680a',1,'ppE_theory_transformation_jac(std::string original_method, std::string new_method, int dimension, gen_params_base&lt; double &gt; *param, double **jac):&#160;fisher.cpp']]],
  ['ppe_5futilities_2ecpp_113',['ppE_utilities.cpp',['../ppE__utilities_8cpp.html',1,'']]],
  ['ppe_5futilities_2eh_114',['ppE_utilities.h',['../ppE__utilities_8h.html',1,'']]],
  ['ppealt_5fbeta_115',['ppEAlt_beta',['../ppE__utilities_8h.html#a975c20355f9f2b87eb5365098a0561f3',1,'ppE_utilities.h']]],
  ['ppefisherrjvariables_116',['ppEFisherRJVariables',['../classppEFisherRJVariables.html',1,'ppEFisherRJVariables'],['../classppEFisherRJVariables.html#a6381d09f76553ec1bdd119798bc02cf6',1,'ppEFisherRJVariables::ppEFisherRJVariables()']]],
  ['pre_5fcalculate_5fea_5ffactors_117',['pre_calculate_EA_factors',['../classEA__IMRPhenomD__NRT.html#a79cc74d96e2cf879e24e4d8b2b7324c0',1,'EA_IMRPhenomD_NRT']]],
  ['precalc_5fpowers_5fins_118',['precalc_powers_ins',['../classIMRPhenomD.html#ade98ea0729f58a3216ecec948dec9e4a',1,'IMRPhenomD']]],
  ['precalc_5fpowers_5fins_5famp_119',['precalc_powers_ins_amp',['../classIMRPhenomD.html#ac25dfdbacff0e696d752db44dd0a6c6b',1,'IMRPhenomD']]],
  ['precalc_5fpowers_5fins_5fphase_120',['precalc_powers_ins_phase',['../classIMRPhenomD.html#aa4647f539a66554bcc5066861328cf06',1,'IMRPhenomD']]],
  ['precalc_5fpowers_5fpi_121',['precalc_powers_PI',['../classIMRPhenomD.html#a1181334310432c4d69ede3a3b2b0fcdb',1,'IMRPhenomD']]],
  ['precess_5freduced_5fflag_122',['precess_reduced_flag',['../classgen__params__base.html#ab0d2c6df726cc6118d6a58661e6ac7e8',1,'gen_params_base']]],
  ['precessing_123',['PRECESSING',['../structPhenomPv3Storage.html#af3bf075dbf1049dcfd63bcd2fd14e1ee',1,'PhenomPv3Storage']]],
  ['prep_5ffisher_5fcalculation_124',['prep_fisher_calculation',['../fisher_8h.html#a889b2789fdd2c018b72544a3ad05c921',1,'fisher.h']]],
  ['prep_5fgsl_5fsubroutine_125',['prep_gsl_subroutine',['../fisher_8h.html#a06005d743a31e704ea51c2e1b2f7d69b',1,'prep_gsl_subroutine(gsl_subroutine *params_packed):&#160;fisher.cpp'],['../fisher_8cpp.html#a06005d743a31e704ea51c2e1b2f7d69b',1,'prep_gsl_subroutine(gsl_subroutine *params_packed):&#160;fisher.cpp']]],
  ['prep_5fsource_5fparameters_126',['prep_source_parameters',['../waveform__generator_8h.html#aafe9f9f2b36c822e490164e2057f324e',1,'prep_source_parameters(source_parameters&lt; T &gt; *out, gen_params_base&lt; T &gt; *in, std::string generation_method):&#160;waveform_generator.cpp'],['../waveform__generator_8cpp.html#aafe9f9f2b36c822e490164e2057f324e',1,'prep_source_parameters(source_parameters&lt; T &gt; *out, gen_params_base&lt; T &gt; *in, std::string generation_method):&#160;waveform_generator.cpp'],['../waveform__generator_8cpp.html#af7756bb5b42d34469cb0f3a66948ac19',1,'prep_source_parameters(source_parameters&lt; adouble &gt; *, gen_params_base&lt; adouble &gt; *, std::string):&#160;waveform_generator.cpp'],['../waveform__generator_8cpp.html#a1144ffa962a6bc4bfacb2b01029077d3',1,'prep_source_parameters(source_parameters&lt; double &gt; *, gen_params_base&lt; double &gt; *, std::string):&#160;waveform_generator.cpp']]],
  ['print_5fproperties_127',['print_properties',['../classgen__params__base.html#aa756dbb5f369104ede70c636aecc9a22',1,'gen_params_base']]],
  ['printprogress_128',['printProgress',['../util_8h.html#a9d3b483a858efb84ce776bed255b6dd6',1,'printProgress(double percentage):&#160;util.cpp'],['../util_8cpp.html#a9d3b483a858efb84ce776bed255b6dd6',1,'printProgress(double percentage):&#160;util.cpp']]],
  ['priordata_129',['priorData',['../structpriorData.html',1,'']]],
  ['prioritize_5fcold_5fchains_130',['prioritize_cold_chains',['../classsampler.html#ac82b14511b477b6fb3f1031fd3eb8e6d',1,'sampler']]],
  ['priority_131',['priority',['../classsampler.html#a94d70e8841cb2472895f5c275b70024f',1,'sampler']]],
  ['prob_5fboundaries_132',['prob_boundaries',['../classsampler.html#adc62297d359d487fc09358b69df3baba',1,'sampler']]],
  ['progress_133',['progress',['../classsampler.html#af248578ba42f306ff0d9d1e47a75c055',1,'sampler']]],
  ['prop_5fmh_5ffactor_134',['prop_MH_factor',['../classsampler.html#ab72a903105e9ccb18356e3db4312b9ba',1,'sampler']]],
  ['proper_5ffisher_135',['proper_fisher',['../classsampler.html#a2f740ef7f8608a9e46b3b1849553c81a',1,'sampler']]],
  ['psd_136',['psd',['../structifo__data__struct.html#aa64f4e40c54660a7a7763359ac072c70',1,'ifo_data_struct']]],
  ['psds_137',['psds',['../classppEFisherRJVariables.html#a1074a4077a7a823b9161a10c6bbb91f3',1,'ppEFisherRJVariables']]],
  ['psi_138',['psi',['../classgen__params__base.html#af1c02da522106d065ee3ebefe77a11a6',1,'gen_params_base']]],
  ['psidot_139',['psidot',['../IMRPhenomPv3utils_8cpp.html#a34b9ad41924891a5d0a1cac7a8dc4826',1,'IMRPhenomPv3utils.cpp']]],
  ['pt_5falloc_140',['PT_alloc',['../classsampler.html#afdcb7687d4e6f6d818795b916f2912cf',1,'sampler']]],
  ['pt_5fdynamical_5ftimescale_141',['PT_dynamical_timescale',['../mcmc__sampler__internals_8h.html#a1f07e7540a20f438aad42f569c2e22d2',1,'PT_dynamical_timescale(int t0, int nu, int t):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8cpp.html#a1f07e7540a20f438aad42f569c2e22d2',1,'PT_dynamical_timescale(int t0, int nu, int t):&#160;mcmc_sampler_internals.cpp']]],
  ['ptmcmc_5fmethod_5fspecific_5fprep_142',['PTMCMC_method_specific_prep',['../mcmc__gw_8h.html#ae05b6d20ce302112ce0dc42c35002e5d',1,'PTMCMC_method_specific_prep(std::string generation_method, int dimension, double **seeding_var_ptr, bool local_seeding):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#aa4da9c253a52a34fbe6de4fab41d3f10',1,'PTMCMC_method_specific_prep(std::string generation_method, int dimension, double **seeding_var, bool local_seeding):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmethod_5fspecific_5fprep_5fv2_143',['PTMCMC_method_specific_prep_v2',['../mcmc__gw__extended_8h.html#aa2d0967783115a9affc49025ab6121dd',1,'PTMCMC_method_specific_prep_v2(std::string generation_method, int dimension, bool *intrinsic, MCMC_modification_struct *mod_struct):&#160;mcmc_gw_extended.cpp'],['../mcmc__gw__extended_8cpp.html#aa2d0967783115a9affc49025ab6121dd',1,'PTMCMC_method_specific_prep_v2(std::string generation_method, int dimension, bool *intrinsic, MCMC_modification_struct *mod_struct):&#160;mcmc_gw_extended.cpp']]],
  ['ptmcmc_5fmh_144',['PTMCMC_MH',['../mcmc__sampler_8h.html#abadd32f3c10e69def18edd0b567da43b',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double **ensemble_initial_position, double *chain_temps, int swp_freq, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), double(*log_likelihood)(double *param, mcmc_data_interface *interface, void *parameters), void(*fisher)(double *param, double **fisher, mcmc_data_interface *interface, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_filename):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a88ef32c99e2ec7e0a7c214b762f1ac6f',1,'PTMCMC_MH(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), double(*log_likelihood)(double *param, mcmc_data_interface *interface, void *parameters), void(*fisher)(double *param, double **fisher, mcmc_data_interface *interface, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_145',['PTMCMC_MH_dynamic_PT_alloc',['../mcmc__sampler_8h.html#a0c85884d4dbcd69be3c57db40518c3a4',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_position, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), double(*log_likelihood)(double *param, mcmc_data_interface *interface, void *parameters), void(*fisher)(double *param, double **fisher, mcmc_data_interface *interface, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#abc455062a5c2d5e6f7eaead859faf515',1,'PTMCMC_MH_dynamic_PT_alloc(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), double(*log_likelihood)(double *param, mcmc_data_interface *interface, void *parameters), void(*fisher)(double *param, double **fisher, mcmc_data_interface *interface, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fgw_146',['PTMCMC_MH_dynamic_PT_alloc_GW',['../mcmc__gw_8h.html#ae2ea76adaa9e6d6142114a9bb63b497b',1,'PTMCMC_MH_dynamic_PT_alloc_GW(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#ae2ea76adaa9e6d6142114a9bb63b497b',1,'PTMCMC_MH_dynamic_PT_alloc_GW(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5finternal_147',['PTMCMC_MH_dynamic_PT_alloc_internal',['../mcmc__sampler_8h.html#a1f2269f6a41aba9eb0404c85999debbf',1,'PTMCMC_MH_dynamic_PT_alloc_internal(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_position, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *interface, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *interface, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *interface, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, bool dynamic_chain_number, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file, bool burn_phase):&#160;mcmc_sampler.h'],['../mcmc__sampler_8cpp.html#a47597967b719fb93386625cd16ef5bc8',1,'PTMCMC_MH_dynamic_PT_alloc_internal(double ***output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, int t0, int nu, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, bool dynamic_chain_number, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file, bool burn_phase):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_148',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated',['../mcmc__sampler_8h.html#a58547b1e9b7f5fabcc815660b84d5722',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_position, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), double(*log_likelihood)(double *param, mcmc_data_interface *interface, void *parameters), void(*fisher)(double *param, double **fisher, mcmc_data_interface *interface, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a0c1b2330fe77bbf8d279accac2d0cae4',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), double(*log_likelihood)(double *param, mcmc_data_interface *interface, void *parameters), void(*fisher)(double *param, double **fisher, mcmc_data_interface *interface, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5fgw_149',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW',['../mcmc__gw_8h.html#a5a0b6663a2e19df9417b744a6d8d12d7',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#a5a0b6663a2e19df9417b744a6d8d12d7',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5fgw_5fv2_150',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW_v2',['../mcmc__gw__extended_8h.html#a4f726c24351c71976cfb71fe90627e30',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW_v2(int dimension, int independentSamples, int ensembleSize, int ensembleN, bayesship::positionInfo *initialPosition, bayesship::positionInfo **initialEnsemble, double swapProb, int burnIterations, int burnPriorIterations, int priorIterations, bool writePriorData, int batchSize, double **priorRanges, bayesship::probabilityFn *lp, int numThreads, bool pool, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string outputDir, std::string outputFileMoniker, bool ignoreExistingCheckpoint, bool restrictSwapTemperatures, bool coldChainStorageOnly):&#160;mcmc_gw_extended.cpp'],['../mcmc__gw__extended_8cpp.html#a22a3bee912b546007118d065ceef5606',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW_v2(int dimension, int independentSamples, int ensembleSize, int ensembleN, bayesship::positionInfo *initialPosition, bayesship::positionInfo **initialEnsemble, double swapProb, int burnIterations, int burnPriorIterations, int priorIterations, bool writePriorData, int batchSize, double **priorRanges, bayesship::probabilityFn *log_prior, int numThreads, bool pool, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string outputDir, std::string outputFileMoniker, bool ignoreExistingCheckpoint, bool restrictSwapTemperatures, bool coldChainStorageOnly):&#160;mcmc_gw_extended.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5finternal_151',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal',['../mcmc__sampler_8h.html#ae5547f010f59d953a7e445a69e782356',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_position, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *interface, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *interface, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *interface, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.h'],['../mcmc__sampler_8cpp.html#a5e331e2cb0a37166f1edcaee2492dade',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5finternal_5fdriver_152',['PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal_driver',['../mcmc__sampler_8h.html#aee7761988eec5863920686025d14e4f9',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal_driver(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file, bool continue_burn):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#aee7761988eec5863920686025d14e4f9',1,'PTMCMC_MH_dynamic_PT_alloc_uncorrelated_internal_driver(mcmc_sampler_output *sampler_output, double **output, int dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file, bool continue_burn):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fgw_153',['PTMCMC_MH_GW',['../mcmc__gw_8h.html#a8713dc500016043cd1a5c6a509b49de7',1,'PTMCMC_MH_GW(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detector, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#ae992d3cfd36b49874b4e89f38576b7ca',1,'PTMCMC_MH_GW(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, double(*log_prior)(double *param, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_gw.cpp']]],
  ['ptmcmc_5fmh_5finternal_154',['PTMCMC_MH_internal',['../mcmc__sampler_8h.html#a5aeb6a8579ebae23529bc14fd5e41e26',1,'PTMCMC_MH_internal(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double **ensemble_initial_position, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_filename, bool tune, bool burn_phase):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#ae6b9d7fba7f2aad43434b830b4641762',1,'PTMCMC_MH_internal(double ***output, int dimension, int N_steps, int chain_N, double *initial_pos, double *seeding_var, double **ensemble_initial_pos, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string checkpoint_file, bool tune, bool burn_phase):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5floop_155',['PTMCMC_MH_loop',['../mcmc__sampler_8h.html#a4d9c70d8f28cedec9e942ecdb83ed35c',1,'PTMCMC_MH_loop(sampler *samplerptr):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a4d9c70d8f28cedec9e942ecdb83ed35c',1,'PTMCMC_MH_loop(sampler *samplerptr):&#160;mcmc_sampler.cpp']]],
  ['ptmcmc_5fmh_5fstep_5fincremental_156',['PTMCMC_MH_step_incremental',['../mcmc__sampler_8h.html#a6414c5a834d83dbe783326f3864d1fd4',1,'PTMCMC_MH_step_incremental(sampler *samplerptr, int increment):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a6414c5a834d83dbe783326f3864d1fd4',1,'PTMCMC_MH_step_incremental(sampler *samplerptr, int increment):&#160;mcmc_sampler.cpp']]],
  ['public_5fstop_157',['public_stop',['../classThreadPool.html#ab85f3bf5998e7bd213326dab9895504d',1,'ThreadPool']]]
];
