var searchData=
[
  ['radius_5fat_5flat_0',['radius_at_lat',['../detector__util_8h.html#adcb816dfe662ececa657888ff18132bd',1,'radius_at_lat(double latitude, double elevation):&#160;detector_util.cpp'],['../detector__util_8cpp.html#adcb816dfe662ececa657888ff18132bd',1,'radius_at_lat(double latitude, double elevation):&#160;detector_util.cpp']]],
  ['read_5ffile_1',['read_file',['../io__util_8h.html#aad742282a09bb261d21080e8874578ba',1,'read_file(std::string filename, double **output, int rows, int cols):&#160;io_util.cpp'],['../io__util_8h.html#abed5d6708a7adc8cd37ca0d578730b17',1,'read_file(std::string filename, int **output, int rows, int cols):&#160;io_util.cpp'],['../io__util_8h.html#a788a44b839a09910024159d9d10764d0',1,'read_file(std::string filename, double *output):&#160;io_util.cpp'],['../io__util_8h.html#a6add7454e404e8305cd6695b0cff428e',1,'read_file(std::string filename, int *output):&#160;io_util.cpp'],['../io__util_8cpp.html#aad742282a09bb261d21080e8874578ba',1,'read_file(std::string filename, double **output, int rows, int cols):&#160;io_util.cpp'],['../io__util_8cpp.html#abed5d6708a7adc8cd37ca0d578730b17',1,'read_file(std::string filename, int **output, int rows, int cols):&#160;io_util.cpp'],['../io__util_8cpp.html#a788a44b839a09910024159d9d10764d0',1,'read_file(std::string filename, double *output):&#160;io_util.cpp'],['../io__util_8cpp.html#a6add7454e404e8305cd6695b0cff428e',1,'read_file(std::string filename, int *output):&#160;io_util.cpp']]],
  ['read_5flosc_5fdata_5ffile_2',['read_LOSC_data_file',['../io__util_8h.html#abbb4e70ddc93c8995739b3a481bbf3a6',1,'read_LOSC_data_file(std::string filename, double *output, double *data_start_time, double *duration, double *fs):&#160;io_util.cpp'],['../io__util_8cpp.html#abbb4e70ddc93c8995739b3a481bbf3a6',1,'read_LOSC_data_file(std::string filename, double *output, double *data_start_time, double *duration, double *fs):&#160;io_util.cpp']]],
  ['read_5flosc_5fpsd_5ffile_3',['read_LOSC_PSD_file',['../io__util_8h.html#a089aa96b136d368b0c740c416811c39d',1,'read_LOSC_PSD_file(std::string filename, double **output, int rows, int cols):&#160;io_util.cpp'],['../io__util_8cpp.html#a089aa96b136d368b0c740c416811c39d',1,'read_LOSC_PSD_file(std::string filename, double **output, int rows, int cols):&#160;io_util.cpp']]],
  ['reduce_5fextrinsic_4',['reduce_extrinsic',['../fisher_8cpp.html#aada801108b3d850efe063d91c2d43176',1,'fisher.cpp']]],
  ['reduce_5foutput_5',['reduce_output',['../mcmc__sampler__internals_8h.html#ab3a269de21c5c614d6ec3fcb8c5ffb1d',1,'reduce_output(int step_num, int max_dimension, double ***output_old, int ***status_old, int **model_status_old, double **output_new, int **status_new, int **model_status_new, int chain_N, double *temps, bool RJ):&#160;mcmc_sampler_internals.h'],['../mcmc__sampler__internals_8cpp.html#aca274b24f586441830d2b946d3ee9b99',1,'reduce_output(int step_num, int max_dimension, double ***output_old, int ***status_old, int **model_status_old, double **output_new, int **status_new, int *model_status_new, int chain_N, int nested_model_number, double *temps, bool RJ):&#160;mcmc_sampler_internals.cpp']]],
  ['relativebinninglikelihood_6',['RelativeBinningLikelihood',['../classRelativeBinningLikelihood.html#a0e945b270efe8eb656b757fd35c7345e',1,'RelativeBinningLikelihood']]],
  ['relativebinningprinter_7',['RelativeBinningPrinter',['../adaptivelikelihoods_8cpp.html#a7eb22b806c28ffb4be2eb47822b50049',1,'adaptivelikelihoods.cpp']]],
  ['repack_5fnon_5fparameter_5foptions_8',['repack_non_parameter_options',['../fisher_8h.html#a92eebd80a98aa7fb1872bb8700702f77',1,'repack_non_parameter_options(gen_params_base&lt; T &gt; *waveform_params, gen_params_base&lt; double &gt; *input_params, std::string gen_method):&#160;fisher.cpp'],['../fisher_8cpp.html#a92eebd80a98aa7fb1872bb8700702f77',1,'repack_non_parameter_options(gen_params_base&lt; T &gt; *waveform_params, gen_params_base&lt; double &gt; *input_params, std::string gen_method):&#160;fisher.cpp']]],
  ['repack_5fnon_5fparameter_5foptions_3c_20adouble_20_3e_9',['repack_non_parameter_options&lt; adouble &gt;',['../fisher_8cpp.html#ab1145b36a382264d5a39f79facf8f9be',1,'fisher.cpp']]],
  ['repack_5fnon_5fparameter_5foptions_3c_20double_20_3e_10',['repack_non_parameter_options&lt; double &gt;',['../fisher_8cpp.html#adcafe56ca448601bb2b04f5228181742',1,'fisher.cpp']]],
  ['repack_5fparameters_11',['repack_parameters',['../fisher_8h.html#ae9abf5e34ebefb45c534eacd8c6d408b',1,'repack_parameters(T *avec_parameters, gen_params_base&lt; T &gt; *a_params, std::string generation_method, int dim, gen_params_base&lt; double &gt; *original_params):&#160;fisher.cpp'],['../fisher_8cpp.html#ae9abf5e34ebefb45c534eacd8c6d408b',1,'repack_parameters(T *avec_parameters, gen_params_base&lt; T &gt; *a_params, std::string generation_method, int dim, gen_params_base&lt; double &gt; *original_params):&#160;fisher.cpp']]],
  ['repack_5fparameters_3c_20adouble_20_3e_12',['repack_parameters&lt; adouble &gt;',['../fisher_8cpp.html#a35526714c92028b3083eee115558984a',1,'fisher.cpp']]],
  ['repack_5fparameters_3c_20double_20_3e_13',['repack_parameters&lt; double &gt;',['../fisher_8cpp.html#a339139bedbb1eb4a31f068d0e635bc8a',1,'fisher.cpp']]],
  ['repack_5fparameters_5fpy_14',['repack_parameters_py',['../gwatpy__wrapping_8h.html#abd7bf970172c6b97fba0198d15f7c86e',1,'repack_parameters_py(double *parameters, gen_params_base&lt; double &gt; *gen_param, char *generation_method, int dim):&#160;gwatpy_wrapping.cpp'],['../gwatpy__wrapping_8cpp.html#abd7bf970172c6b97fba0198d15f7c86e',1,'repack_parameters_py(double *parameters, gen_params_base&lt; double &gt; *gen_param, char *generation_method, int dim):&#160;gwatpy_wrapping.cpp']]],
  ['right_5finterferometer_15',['right_interferometer',['../detector__util_8h.html#aba61bbb9ec49fa1a781bc29925ee4f05',1,'right_interferometer(det_res_pat&lt; T &gt; *r_pat, T theta, T phi, T psi):&#160;detector_util.cpp'],['../detector__util_8cpp.html#aba61bbb9ec49fa1a781bc29925ee4f05',1,'right_interferometer(det_res_pat&lt; T &gt; *r_pat, T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_3c_20adouble_20_3e_16',['right_interferometer&lt; adouble &gt;',['../detector__util_8cpp.html#ad598ed68916f4e94dd5dad13e0f2185a',1,'detector_util.cpp']]],
  ['right_5finterferometer_3c_20double_20_3e_17',['right_interferometer&lt; double &gt;',['../detector__util_8cpp.html#a9445b8eb089e9629c5e79cd57884bd71',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fb_18',['right_interferometer_b',['../detector__util_8h.html#aed0d23e90ea879f1a6fabd1b15ea44b1',1,'right_interferometer_b(T theta, T phi, T psi):&#160;detector_util.cpp'],['../detector__util_8cpp.html#aed0d23e90ea879f1a6fabd1b15ea44b1',1,'right_interferometer_b(T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fb_3c_20adouble_20_3e_19',['right_interferometer_b&lt; adouble &gt;',['../detector__util_8cpp.html#aa2ef77000647fcf8cf18a2bf2630a2f0',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fb_3c_20double_20_3e_20',['right_interferometer_b&lt; double &gt;',['../detector__util_8cpp.html#a6663bb60e912e7081a45d0d436c83b76',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fcross_21',['right_interferometer_cross',['../detector__util_8h.html#a3d3d83c7a398244da315cc9a6f0b15df',1,'right_interferometer_cross(T theta, T phi):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a3d3d83c7a398244da315cc9a6f0b15df',1,'right_interferometer_cross(T theta, T phi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fcross_3c_20adouble_20_3e_22',['right_interferometer_cross&lt; adouble &gt;',['../detector__util_8cpp.html#a8e6fc4de47b97427c171eac01f4ac522',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fcross_3c_20double_20_3e_23',['right_interferometer_cross&lt; double &gt;',['../detector__util_8cpp.html#adc40f82cc0183a2bbea0f1fb225bb8bc',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fl_24',['right_interferometer_l',['../detector__util_8h.html#a3a648f1c03e4bdfc299e295a6e7bf800',1,'right_interferometer_l(T theta, T phi, T psi):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a3a648f1c03e4bdfc299e295a6e7bf800',1,'right_interferometer_l(T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fl_3c_20adouble_20_3e_25',['right_interferometer_l&lt; adouble &gt;',['../detector__util_8cpp.html#afe807a98151715c507105bbe907b9f2b',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fl_3c_20double_20_3e_26',['right_interferometer_l&lt; double &gt;',['../detector__util_8cpp.html#afdc52a75522243c16c0159e1d847a1b4',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fplus_27',['right_interferometer_plus',['../detector__util_8h.html#aa60bf261e973bd490d1c83015af22aad',1,'right_interferometer_plus(T theta, T phi):&#160;detector_util.cpp'],['../detector__util_8cpp.html#aa60bf261e973bd490d1c83015af22aad',1,'right_interferometer_plus(T theta, T phi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fplus_3c_20adouble_20_3e_28',['right_interferometer_plus&lt; adouble &gt;',['../detector__util_8cpp.html#a462d92f45d6faa1ac7c89766a7fdaeb8',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fplus_3c_20double_20_3e_29',['right_interferometer_plus&lt; double &gt;',['../detector__util_8cpp.html#ae50582d64b9bb601a188ce01b0a8c318',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fx_30',['right_interferometer_x',['../detector__util_8h.html#a8f39969b71899fdcb11e2a1aebfc38b4',1,'right_interferometer_x(T theta, T phi, T psi):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a8f39969b71899fdcb11e2a1aebfc38b4',1,'right_interferometer_x(T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fx_3c_20adouble_20_3e_31',['right_interferometer_x&lt; adouble &gt;',['../detector__util_8cpp.html#a7b68193c1fa2137da34554ea5f14ed54',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fx_3c_20double_20_3e_32',['right_interferometer_x&lt; double &gt;',['../detector__util_8cpp.html#ad11779ea86388b87e6bbb0618cfe8df8',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fy_33',['right_interferometer_y',['../detector__util_8h.html#a3c1df4557169dde7770caf08e9825460',1,'right_interferometer_y(T theta, T phi, T psi):&#160;detector_util.cpp'],['../detector__util_8cpp.html#a3c1df4557169dde7770caf08e9825460',1,'right_interferometer_y(T theta, T phi, T psi):&#160;detector_util.cpp']]],
  ['right_5finterferometer_5fy_3c_20adouble_20_3e_34',['right_interferometer_y&lt; adouble &gt;',['../detector__util_8cpp.html#a0512d55c0c704ccac49e78c3c1c3515d',1,'detector_util.cpp']]],
  ['right_5finterferometer_5fy_3c_20double_20_3e_35',['right_interferometer_y&lt; double &gt;',['../detector__util_8cpp.html#ab0203f9b125ce19a366a3dd3a1bda859',1,'detector_util.cpp']]],
  ['rj_5fsmooth_5fhistory_36',['RJ_smooth_history',['../mcmc__sampler__internals_8h.html#a1b5c301686c971e3f9359cdd661529b3',1,'RJ_smooth_history(sampler *sampler, double *current_param, int *current_param_status, int base_history_id, double *eff_history_coord, int *eff_history_status, int chain_id):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8cpp.html#a1b5c301686c971e3f9359cdd661529b3',1,'RJ_smooth_history(sampler *sampler, double *current_param, int *current_param_status, int base_history_id, double *eff_history_coord, int *eff_history_status, int chain_id):&#160;mcmc_sampler_internals.cpp']]],
  ['rj_5fstep_37',['RJ_step',['../mcmc__sampler__internals_8h.html#ae73004b2441610fb3ebb6b148db7eec4',1,'RJ_step(sampler *sampler, double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, int chain_number):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8cpp.html#ae73004b2441610fb3ebb6b148db7eec4',1,'RJ_step(sampler *sampler, double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, int chain_number):&#160;mcmc_sampler_internals.cpp']]],
  ['rjmcmc_5f2wf_5ffisher_5fwrapper_38',['RJMCMC_2WF_fisher_wrapper',['../mcmc__gw_8h.html#ae88936c760265fdffa8db562c67b4cdd',1,'RJMCMC_2WF_fisher_wrapper(double *param, int *status, int model_status, double **fisher, mcmc_data_interface *interface, void *user_param):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#a9be294166a29865fc84747a84f9fa070',1,'RJMCMC_2WF_fisher_wrapper(double *param, int *status, int model_status, double **fisher, mcmc_data_interface *interface, void *parameters):&#160;mcmc_gw.cpp']]],
  ['rjmcmc_5f2wf_5flikelihood_5fwrapper_39',['RJMCMC_2WF_likelihood_wrapper',['../mcmc__gw_8h.html#a619ae3f6a26208b89f27e546d2017a8b',1,'RJMCMC_2WF_likelihood_wrapper(double *param, int *status, int model_status, mcmc_data_interface *interface, void *user_param):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#a81356e047e02dce0c80263c53ad18dad',1,'RJMCMC_2WF_likelihood_wrapper(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters):&#160;mcmc_gw.cpp']]],
  ['rjmcmc_5f2wf_5frj_5fproposal_5fwrapper_40',['RJMCMC_2WF_RJ_proposal_wrapper',['../mcmc__gw_8h.html#a5cb38f56fe9e39843dc18d8bcb995532',1,'RJMCMC_2WF_RJ_proposal_wrapper(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, mcmc_data_interface *interface, void *user_param):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#ad725be4d1eb4a557e2764cdb08e4f038',1,'RJMCMC_2WF_RJ_proposal_wrapper(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, mcmc_data_interface *interface, void *parameters):&#160;mcmc_gw.cpp']]],
  ['rjptmcmc_5fmethod_5fspecific_5fprep_41',['RJPTMCMC_method_specific_prep',['../mcmc__gw_8h.html#a2e8407e705ac51ccc0e1685858ff946f',1,'RJPTMCMC_method_specific_prep(std::string generation_method, int max_dim, int min_dim, double *seeding_var, bool local_seeding):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#a2e8407e705ac51ccc0e1685858ff946f',1,'RJPTMCMC_method_specific_prep(std::string generation_method, int max_dim, int min_dim, double *seeding_var, bool local_seeding):&#160;mcmc_gw.cpp']]],
  ['rjptmcmc_5fmethod_5fspecific_5fprep_5fv2_42',['RJPTMCMC_method_specific_prep_v2',['../mcmc__gw__extended_8h.html#abae6704a139e01839ef003dbba6e375d',1,'RJPTMCMC_method_specific_prep_v2(std::string generation_method, int dimension, bool *intrinsic, MCMC_modification_struct *mod_struct):&#160;mcmc_gw_extended.cpp'],['../mcmc__gw__extended_8cpp.html#abae6704a139e01839ef003dbba6e375d',1,'RJPTMCMC_method_specific_prep_v2(std::string generation_method, int dimension, bool *intrinsic, MCMC_modification_struct *mod_struct):&#160;mcmc_gw_extended.cpp']]],
  ['rjptmcmc_5fmh_43',['RJPTMCMC_MH',['../mcmc__sampler_8h.html#a6f16c9ffa2d0f3ce7238cff2acaec710',1,'RJPTMCMC_MH(double ***output, int ***parameter_status, int **model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_position, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int *status, int model_status, mcmc_data_interface *, void *parameters), double(*log_likelihood)(double *param, int *status, int model_status, mcmc_data_interface *, void *parameters), void(*fisher)(double *param, int *status, int model_status, double **fisher, mcmc_data_interface *, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, mcmc_data_interface *, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a752684398a4c441810545550968434cb',1,'RJPTMCMC_MH(double ***output, int ***parameter_status, int **model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, double(*log_prior)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), double(*log_likelihood)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), void(*fisher)(double *param, int *status, int model_status, double **fisher, mcmc_data_interface *interface, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, mcmc_data_interface *interface, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['rjptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fcomprehensive_44',['RJPTMCMC_MH_dynamic_PT_alloc_comprehensive',['../mcmc__sampler_8h.html#a8aedfe559b7d0fed9abd02256dd59cc5',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive(mcmc_sampler_output *sampler_output, double **output, int **parameter_status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), double(*log_likelihood)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), void(*fisher)(double *param, int *status, int model_status, double **fisher, mcmc_data_interface *interface, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, mcmc_data_interface *interface, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a8aedfe559b7d0fed9abd02256dd59cc5',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive(mcmc_sampler_output *sampler_output, double **output, int **parameter_status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), double(*log_likelihood)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), void(*fisher)(double *param, int *status, int model_status, double **fisher, mcmc_data_interface *interface, void *parameters), void(*RJ_proposal)(double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, double *MH_corrections, mcmc_data_interface *interface, void *parameters), void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['rjptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fcomprehensive_5f2wf_5fgw_45',['RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_2WF_GW',['../mcmc__gw_8h.html#a7004d90447a5b542e634291e9ec94e21',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_2WF_GW(mcmc_sampler_output *sampler_output, double **output, int **status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double **prior_ranges, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method_base, std::string generation_method_extended, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp'],['../mcmc__gw_8cpp.html#a7004d90447a5b542e634291e9ec94e21',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_2WF_GW(mcmc_sampler_output *sampler_output, double **output, int **status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double **prior_ranges, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, double(*log_prior)(double *param, int *status, int model_status, mcmc_data_interface *interface, void *parameters), int numThreads, bool pool, bool show_prog, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method_base, std::string generation_method_extended, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_filename):&#160;mcmc_gw.cpp']]],
  ['rjptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fcomprehensive_5finternal_46',['RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal',['../mcmc__sampler_8h.html#a8ae38e866a03e4c009c9cabd989d4eac',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal(mcmc_sampler_output *sampler_output, double **output, int **parameter_status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a8ae38e866a03e4c009c9cabd989d4eac',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal(mcmc_sampler_output *sampler_output, double **output, int **parameter_status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['rjptmcmc_5fmh_5fdynamic_5fpt_5falloc_5fcomprehensive_5finternal_5fdriver_47',['RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal_driver',['../mcmc__sampler_8h.html#a1c8f7c799d85e866d9cfdd01d70a2bda',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal_driver(mcmc_sampler_output *sampler_output, double **output, int **status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a1c8f7c799d85e866d9cfdd01d70a2bda',1,'RJPTMCMC_MH_dynamic_PT_alloc_comprehensive_internal_driver(mcmc_sampler_output *sampler_output, double **output, int **status, int *model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, int max_chain_N_thermo_ensemble, int swp_freq, int t0, int nu, int max_chunk_size, std::string chain_distribution_scheme, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['rjptmcmc_5fmh_5fdynamic_5fpt_5falloc_5funcorrelated_5fgw_5fv2_48',['RJPTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW_v2',['../mcmc__gw__extended_8h.html#a5913ddff17aaccd88db694bff7891b3e',1,'RJPTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW_v2(int minDim, int maxDim, int independentSamples, int ensembleSize, int ensembleN, bayesship::positionInfo *initialPosition, bayesship::positionInfo **initialEnsemble, double swapProb, int burnIterations, int burnPriorIterations, int priorIterations, bool writePriorData, int batchSize, double **priorRanges, bayesship::probabilityFn *log_prior, int numThreads, bool pool, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string generation_method_extended, std::string outputDir, std::string outputFileMoniker, bool ignoreExistingCheckpoint, bool restrictSwapTemperatures, bool coldChainStorageOnly):&#160;mcmc_gw_extended.cpp'],['../mcmc__gw__extended_8cpp.html#a5913ddff17aaccd88db694bff7891b3e',1,'RJPTMCMC_MH_dynamic_PT_alloc_uncorrelated_GW_v2(int minDim, int maxDim, int independentSamples, int ensembleSize, int ensembleN, bayesship::positionInfo *initialPosition, bayesship::positionInfo **initialEnsemble, double swapProb, int burnIterations, int burnPriorIterations, int priorIterations, bool writePriorData, int batchSize, double **priorRanges, bayesship::probabilityFn *log_prior, int numThreads, bool pool, int num_detectors, std::complex&lt; double &gt; **data, double **noise_psd, double **frequencies, int *data_length, double gps_time, std::string *detectors, MCMC_modification_struct *mod_struct, std::string generation_method, std::string generation_method_extended, std::string outputDir, std::string outputFileMoniker, bool ignoreExistingCheckpoint, bool restrictSwapTemperatures, bool coldChainStorageOnly):&#160;mcmc_gw_extended.cpp']]],
  ['rjptmcmc_5fmh_5finternal_49',['RJPTMCMC_MH_internal',['../mcmc__sampler_8h.html#a03a9c0abb63eb66e92f193c1265a5eb2',1,'RJPTMCMC_MH_internal(double ***output, int ***parameter_status, int **model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_position, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#a115d879a7cc88c6d66ceaf1feee8aafa',1,'RJPTMCMC_MH_internal(double ***output, int ***parameter_status, int **model_status, int nested_model_number, int max_dimension, int min_dimension, int N_steps, int chain_N, double *initial_pos, int *initial_status, int initial_model_status, double *seeding_var, double **ensemble_initial_pos, int **ensemble_initial_status, int *ensemble_initial_model_status, double *chain_temps, int swp_freq, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_prior, std::function&lt; double(double *, int *, int, mcmc_data_interface *, void *)&gt; log_likelihood, std::function&lt; void(double *, int *, int, double **, mcmc_data_interface *, void *)&gt;fisher, std::function&lt; void(double *, double *, int *, int *, int *, int *, double *, mcmc_data_interface *, void *)&gt; RJ_proposal, void **user_parameters, int numThreads, bool pool, bool show_prog, bool update_RJ_width, std::string statistics_filename, std::string chain_filename, std::string auto_corr_filename, std::string likelihood_log_filename, std::string checkpoint_file):&#160;mcmc_sampler.cpp']]],
  ['rm_5ffisher_5fdim_50',['rm_fisher_dim',['../util_8h.html#aa3b3e1ddc0801e2dcfa09d5683936817',1,'rm_fisher_dim(double **input, int full_dim, double **output, int reduced_dim, int *removed_dims):&#160;util.cpp'],['../util_8cpp.html#aa3b3e1ddc0801e2dcfa09d5683936817',1,'rm_fisher_dim(double **input, int full_dim, double **output, int reduced_dim, int *removed_dims):&#160;util.cpp']]],
  ['roots_51',['Roots',['../IMRPhenomPv3utils_8h.html#a2adfa79321ed779391149295a9a7fd41',1,'Roots(const T L_norm, const T J_norm, const sysprecquant&lt; T &gt; *system):&#160;IMRPhenomPv3utils.cpp'],['../IMRPhenomPv3utils_8cpp.html#a2adfa79321ed779391149295a9a7fd41',1,'Roots(const T L_norm, const T J_norm, const sysprecquant&lt; T &gt; *system):&#160;IMRPhenomPv3utils.cpp']]],
  ['roots_3c_20adouble_20_3e_52',['Roots&lt; adouble &gt;',['../IMRPhenomPv3utils_8cpp.html#a1aa92995aae3ff69dfa15889c0fb3f3d',1,'IMRPhenomPv3utils.cpp']]],
  ['roots_3c_20double_20_3e_53',['Roots&lt; double &gt;',['../IMRPhenomPv3utils_8cpp.html#a7a6a07298eb0fcb8ae1feb63a718f954',1,'IMRPhenomPv3utils.cpp']]]
];
