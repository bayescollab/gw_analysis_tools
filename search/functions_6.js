var searchData=
[
  ['f_5f0pn_0',['f_0PN',['../pn__waveform__util_8h.html#af5b4f8b6607df1da69fd5cfc2edad586',1,'f_0PN(T t, T chirpmass):&#160;pn_waveform_util.cpp'],['../pn__waveform__util_8cpp.html#af5b4f8b6607df1da69fd5cfc2edad586',1,'f_0PN(T t, T chirpmass):&#160;pn_waveform_util.cpp']]],
  ['f_5f0pn_3c_20adouble_20_3e_1',['f_0PN&lt; adouble &gt;',['../pn__waveform__util_8cpp.html#aa09913a3b246b57dc7e51af50ddf7587',1,'pn_waveform_util.cpp']]],
  ['f_5f0pn_3c_20double_20_3e_2',['f_0PN&lt; double &gt;',['../pn__waveform__util_8cpp.html#a5ec67837f864fd6f0349ac04c1618bb4',1,'pn_waveform_util.cpp']]],
  ['f_5f0pn_5fpy_3',['f_0PN_py',['../gwatpy__wrapping_8h.html#acd677b0c3d3d9152dc899594b89bb12c',1,'f_0PN_py(double t, double chirpmass):&#160;gwatpy_wrapping.cpp'],['../gwatpy__wrapping_8cpp.html#acd677b0c3d3d9152dc899594b89bb12c',1,'f_0PN_py(double t, double chirpmass):&#160;gwatpy_wrapping.cpp']]],
  ['factorial_4',['factorial',['../util_8h.html#ae40cc3f267c33745a8a2485638d5db55',1,'factorial(long num):&#160;util.cpp'],['../util_8cpp.html#ae40cc3f267c33745a8a2485638d5db55',1,'factorial(long num):&#160;util.cpp']]],
  ['fcontact_5',['fcontact',['../util_8h.html#ab4e6e8330f62c234ad74029f6d87fb08',1,'fcontact(T M_detector, T DL, std::string cosmology):&#160;util.cpp'],['../util_8cpp.html#ab4e6e8330f62c234ad74029f6d87fb08',1,'fcontact(T M_detector, T DL, std::string cosmology):&#160;util.cpp']]],
  ['fcontact_3c_20adouble_20_3e_6',['fcontact&lt; adouble &gt;',['../util_8cpp.html#af5df57487782c1fe95a23e814f532101',1,'util.cpp']]],
  ['fcontact_3c_20double_20_3e_7',['fcontact&lt; double &gt;',['../util_8cpp.html#a5b3080dc69b13d1535febd3bbe29a1d3',1,'util.cpp']]],
  ['final_5fspin_8',['final_spin',['../classIMRPhenomD.html#aca95715b46b019637d054e06a1ba1e8f',1,'IMRPhenomD::final_spin()'],['../classIMRPhenomPv2.html#a3d37a40e4d1bce6ca673e6b30e64fe67',1,'IMRPhenomPv2::final_spin()']]],
  ['finalspin0815_9',['FinalSpin0815',['../classIMRPhenomD.html#af638fe3433f2367f9dfe6e2236a6b0ee',1,'IMRPhenomD']]],
  ['finalspin0815_5fs_10',['FinalSpin0815_s',['../classIMRPhenomD.html#a75e0b12192eec9c3b7278810236c20a3',1,'IMRPhenomD']]],
  ['finalspinimrphenomd_5fall_5fin_5fplane_5fspin_5fon_5flarger_5fbh_11',['FinalSpinIMRPhenomD_all_in_plane_spin_on_larger_BH',['../classIMRPhenomPv2.html#a36cbd07ab5b8c1663c7f8c8e75cf4e74',1,'IMRPhenomPv2']]],
  ['find_5fdatatype_12',['find_datatype',['../io__util_8h.html#a627ac895351aa8f4c26a2565cf1769d0',1,'find_datatype(std::string type):&#160;io_util.cpp'],['../io__util_8cpp.html#a627ac895351aa8f4c26a2565cf1769d0',1,'find_datatype(std::string type):&#160;io_util.cpp']]],
  ['find_5fmax_5ffrequency_13',['find_max_frequency',['../classRelativeBinningLikelihood.html#a93faf5ca2af36a4d81f6e7f8a6343499',1,'RelativeBinningLikelihood']]],
  ['fisco_14',['FISCO',['../pn__waveform__util_8h.html#a21c903bf96c1808515ab21865be1a082',1,'FISCO(T mass):&#160;pn_waveform_util.cpp'],['../pn__waveform__util_8cpp.html#a21c903bf96c1808515ab21865be1a082',1,'FISCO(T mass):&#160;pn_waveform_util.cpp'],['../pn__waveform__util_8cpp.html#a110331fe889e9295d2a86b4a0434d617',1,'FISCO(adouble mass):&#160;pn_waveform_util.cpp'],['../pn__waveform__util_8cpp.html#af13235f3068018f5517813d4ef67b69f',1,'FISCO(double mass):&#160;pn_waveform_util.cpp']]],
  ['fisher_5fautodiff_15',['fisher_autodiff',['../fisher_8h.html#a0ffedc0d92d342dceae2e9c77e779384',1,'fisher_autodiff(double *frequency, int length, string generation_method, string detector, string reference_detector, double **output, int dimension, gen_params *parameters, std::string integration_method=&quot;SIMPSONS&quot;, double *weights=NULL, bool log10_f=false, double *noise=NULL, int *amp_tapes=NULL, int *phase_tapes=NULL):&#160;fisher.h'],['../fisher_8cpp.html#a01aeb1efb93752f6690c233360dc6b03',1,'fisher_autodiff(double *frequency, int length, std::string generation_method, std::string detector, std::string reference_detector, double **output, int dimension, gen_params *parameters, std::string integration_method, double *weights, bool log10_f, double *noise, int *amp_tapes, int *phase_tapes):&#160;fisher.cpp']]],
  ['fisher_5fautodiff_5fbatch_5fmod_16',['fisher_autodiff_batch_mod',['../fisher_8h.html#ae6b36c5d32b4476623b56c505f520c52',1,'fisher_autodiff_batch_mod(double *frequency, int length, string generation_method, string detector, string reference_detector, double **output, int base_dimension, int full_dimension, gen_params *parameters, std::string integration_method=&quot;SIMPSONS&quot;, double *weights=NULL, bool log10_f=false, double *noise=NULL, int *amp_tapes=NULL, int *phase_tapes=NULL):&#160;fisher.h'],['../fisher_8cpp.html#aa6b12081077e6f02d55f20d0589bc57b',1,'fisher_autodiff_batch_mod(double *frequency, int length, std::string generation_method, std::string detector, std::string reference_detector, double **output, int base_dimension, int full_dimension, gen_params *parameters, std::string integration_method, double *weights, bool log10_f, double *noise, int *amp_tapes, int *phase_tapes):&#160;fisher.cpp']]],
  ['fisher_5fautodiff_5fgq_5finternal_17',['fisher_autodiff_gq_internal',['../fisher_8h.html#a8be528e95a8ca2fd0d786d6c0a99a66c',1,'fisher.h']]],
  ['fisher_5fautodiff_5fgsl_5fintegration_18',['fisher_autodiff_gsl_integration',['../fisher_8h.html#ae23818b708bd1961b9d9ed4ee12f2a0e',1,'fisher_autodiff_gsl_integration(double *frequency_bounds, string generation_method, string sensitivity_curve, string detector, string reference_detector, double **output, double **error, int dimension, gen_params *parameters, double abserr, double relerr):&#160;fisher.cpp'],['../fisher_8h.html#ace3fac58dae5d96f60549e6633287998',1,'fisher_autodiff_gsl_integration(double *frequency_bounds, string generation_method, string sensitivity_curve, string detector, string reference_detector, double **output, double **error, int dimension, gen_params *parameters, double abserr, double relerr, std::string error_log, bool logerr):&#160;fisher.cpp'],['../fisher_8cpp.html#ae23818b708bd1961b9d9ed4ee12f2a0e',1,'fisher_autodiff_gsl_integration(double *frequency_bounds, string generation_method, string sensitivity_curve, string detector, string reference_detector, double **output, double **error, int dimension, gen_params *parameters, double abserr, double relerr):&#160;fisher.cpp'],['../fisher_8cpp.html#ace3fac58dae5d96f60549e6633287998',1,'fisher_autodiff_gsl_integration(double *frequency_bounds, string generation_method, string sensitivity_curve, string detector, string reference_detector, double **output, double **error, int dimension, gen_params *parameters, double abserr, double relerr, std::string error_log, bool logerr):&#160;fisher.cpp']]],
  ['fisher_5fautodiff_5fgsl_5fintegration_5fbatch_5fmod_19',['fisher_autodiff_gsl_integration_batch_mod',['../fisher_8h.html#a727aa66ee384240bfb2e4a468ead9aee',1,'fisher_autodiff_gsl_integration_batch_mod(double *frequency_bounds, string generation_method, string sensitivity_curve, string detector, string reference_detector, double **output, double **error, int base_dimension, int full_dimension, gen_params *parameters, double abserr, double relerr):&#160;fisher.cpp'],['../fisher_8h.html#ae4ad894f2812dba4ff39a142c66210d9',1,'fisher_autodiff_gsl_integration_batch_mod(double *frequency_bounds, string generation_method, string sensitivity_curve, string detector, string reference_detector, double **output, double **error, int base_dimension, int full_dimension, gen_params *parameters, double abserr, double relerr, std::string error_log, bool logerr):&#160;fisher.cpp'],['../fisher_8cpp.html#a727aa66ee384240bfb2e4a468ead9aee',1,'fisher_autodiff_gsl_integration_batch_mod(double *frequency_bounds, string generation_method, string sensitivity_curve, string detector, string reference_detector, double **output, double **error, int base_dimension, int full_dimension, gen_params *parameters, double abserr, double relerr):&#160;fisher.cpp'],['../fisher_8cpp.html#ae4ad894f2812dba4ff39a142c66210d9',1,'fisher_autodiff_gsl_integration_batch_mod(double *frequency_bounds, string generation_method, string sensitivity_curve, string detector, string reference_detector, double **output, double **error, int base_dimension, int full_dimension, gen_params *parameters, double abserr, double relerr, std::string error_log, bool logerr):&#160;fisher.cpp']]],
  ['fisher_5fautodiff_5finterp_20',['fisher_autodiff_interp',['../fisher_8h.html#a9c10af73c2798390b3fb320dab5195ef',1,'fisher_autodiff_interp(double *frequency, int length, string generation_method, string detector, string reference_detector, double **output, int dimension, gen_params *parameters, int downsampling_factor, int *amp_tapes=NULL, int *phase_tapes=NULL, double *noise=NULL):&#160;fisher.h'],['../fisher_8cpp.html#a2fb37ba52acaf206b2887f4686eb6e5a',1,'fisher_autodiff_interp(double *frequency, int length, std::string generation_method, std::string detector, std::string reference_detector, double **output, int dimension, gen_params *parameters, int downsampling_factor, int *amp_tapes, int *phase_tapes, double *noise):&#160;fisher.cpp']]],
  ['fisher_5fcalculation_5fsky_5faveraged_21',['fisher_calculation_sky_averaged',['../classIMRPhenomD.html#aa11b2b18790e11237a1a4f1ad1036f6e',1,'IMRPhenomD']]],
  ['fisher_5fgeneric_22',['fisher_generic',['../mcmc__sampler_8cpp.html#ae502487a4e9a91db1526abb9134ac799',1,'mcmc_sampler.cpp']]],
  ['fisher_5fnumerical_23',['fisher_numerical',['../fisher_8h.html#a68e512951ef66f04109d4729e64747df',1,'fisher_numerical(double *frequency, int length, string generation_method, string detector, string reference_detector, double **output, int dimension, gen_params_base&lt; double &gt; *parameters, int order, int *amp_tapes=NULL, int *phase_tapes=NULL, double *noise=NULL, Quadrature *quadMethod=NULL):&#160;fisher.cpp'],['../fisher_8cpp.html#afd57497bdc9ca0303d14b76c2a00f779',1,'fisher_numerical(double *frequency, int length, string generation_method, string detector, string reference_detector, double **output, int dimension, gen_params_base&lt; double &gt; *parameters, int order, int *amp_tapes, int *phase_tapes, double *noise, Quadrature *quadMethod):&#160;fisher.cpp']]],
  ['fisher_5fstep_24',['fisher_step',['../mcmc__sampler__internals_8h.html#a02d0d2ecf1ddb20871e3a5c7d8d296e3',1,'fisher_step(sampler *sampler, double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, int chain_index):&#160;mcmc_sampler_internals.cpp'],['../mcmc__sampler__internals_8cpp.html#a02d0d2ecf1ddb20871e3a5c7d8d296e3',1,'fisher_step(sampler *sampler, double *current_param, double *proposed_param, int *current_status, int *proposed_status, int *current_model_status, int *proposed_model_status, int chain_index):&#160;mcmc_sampler_internals.cpp']]],
  ['flush_5fswap_5fqueue_25',['flush_swap_queue',['../classThreadPool.html#a72adf6209254ae9e21504313a518b6ee',1,'ThreadPool']]],
  ['fourier_5famplitude_26',['fourier_amplitude',['../waveform__generator_8h.html#a0c791c00bc1552f2f70cadfbdff73a06',1,'fourier_amplitude(T *frequencies, int length, T *amplitude, std::string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_generator.h'],['../waveform__generator_8cpp.html#acbc169a17e10956bcc7e1e47fc3c0310',1,'fourier_amplitude(T *frequencies, int length, T *amplitude, string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_generator.cpp']]],
  ['fourier_5famplitude_3c_20adouble_20_3e_27',['fourier_amplitude&lt; adouble &gt;',['../waveform__generator_8cpp.html#ad5faa8c46ea3876ad16b5c80d8b8ae53',1,'waveform_generator.cpp']]],
  ['fourier_5famplitude_3c_20double_20_3e_28',['fourier_amplitude&lt; double &gt;',['../waveform__generator_8cpp.html#aacebe5c329697d0c9f8ef3a0dbf351b4',1,'waveform_generator.cpp']]],
  ['fourier_5famplitudec_29',['fourier_amplitudeC',['../waveform__generator__C_8h.html#a18c1264b84b1be0ffdae4e08e4965435',1,'fourier_amplitudeC(double *frequencies, int length, double *amplitude, char *generation_method, double mass1, double mass2, double DL, double spin1x, double spin1y, double spin1z, double spin2x, double spin2y, double spin2z, double incl_angle, double theta, double phi):&#160;waveform_generator_C.cpp'],['../waveform__generator__C_8cpp.html#a18c1264b84b1be0ffdae4e08e4965435',1,'fourier_amplitudeC(double *frequencies, int length, double *amplitude, char *generation_method, double mass1, double mass2, double DL, double spin1x, double spin1y, double spin1z, double spin2x, double spin2y, double spin2z, double incl_angle, double theta, double phi):&#160;waveform_generator_C.cpp']]],
  ['fourier_5fdetector_5famplitude_5fphase_30',['fourier_detector_amplitude_phase',['../waveform__util_8h.html#a505fe9689f0a2c8484fd2edb087d7f37',1,'fourier_detector_amplitude_phase(double *frequencies, int length, double *amplitude, double *phase, std::string detector, std::string generation_method, gen_params *parameters):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a505fe9689f0a2c8484fd2edb087d7f37',1,'fourier_detector_amplitude_phase(double *frequencies, int length, double *amplitude, double *phase, std::string detector, std::string generation_method, gen_params *parameters):&#160;waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_31',['fourier_detector_response',['../waveform__util_8h.html#a759e633c6a807efa7b48fd66eb74ccf6',1,'fourier_detector_response(T *frequencies, int length, std::complex&lt; T &gt; *response, std::string detector, std::string generation_method, gen_params_base&lt; T &gt; *parameters, T *times=NULL):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a6ae5262e3a7ee2c676e8fe426f113368',1,'fourier_detector_response(T *frequencies, int length, std::complex&lt; T &gt; *response, std::string detector, std::string generation_method, gen_params_base&lt; T &gt; *parameters, T *times):&#160;waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_3c_20adouble_20_3e_32',['fourier_detector_response&lt; adouble &gt;',['../waveform__util_8cpp.html#a8a43be423902973710a251fc0747228d',1,'waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_3c_20double_20_3e_33',['fourier_detector_response&lt; double &gt;',['../waveform__util_8cpp.html#a88ac9554c7e1fc70d5ce5bc9925853ff',1,'waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_5fequatorial_34',['fourier_detector_response_equatorial',['../waveform__util_8h.html#a60af19b43c942909ae104c9dee4b6e2d',1,'fourier_detector_response_equatorial(T *frequencies, int length, waveform_polarizations&lt; T &gt; *, std::complex&lt; T &gt; *detector_response, T ra, T dec, T psi, double gmst, T *times, T LISA_alpha0, T LISA_phi0, T theta_j_ecl, T phi_j_ecl, std::string detector):&#160;waveform_util.cpp'],['../waveform__util_8h.html#a234c1a71c579c913e0c1033d951dbbe5',1,'fourier_detector_response_equatorial(T *frequencies, int length, std::complex&lt; T &gt; *response, std::string detector, std::string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_util.cpp'],['../waveform__util_8h.html#a6f2665d6e33ace647dc022cdbdc66045',1,'fourier_detector_response_equatorial(T *frequencies, int length, std::complex&lt; T &gt; *response, std::string detector, std::string generation_method, gen_params_base&lt; T &gt; *parameters, T *times):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a19133f1d973c9c7cbf30f074c5836327',1,'fourier_detector_response_equatorial(T *frequencies, int length, waveform_polarizations&lt; T &gt; *wp, std::complex&lt; T &gt; *detector_response, T ra, T dec, T psi, double gmst, T *times, T LISA_alpha0, T LISA_phi0, T theta_j_ecl, T phi_j_ecl, std::string detector):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a234c1a71c579c913e0c1033d951dbbe5',1,'fourier_detector_response_equatorial(T *frequencies, int length, std::complex&lt; T &gt; *response, std::string detector, std::string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a6f2665d6e33ace647dc022cdbdc66045',1,'fourier_detector_response_equatorial(T *frequencies, int length, std::complex&lt; T &gt; *response, std::string detector, std::string generation_method, gen_params_base&lt; T &gt; *parameters, T *times):&#160;waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_5fequatorial_3c_20adouble_20_3e_35',['fourier_detector_response_equatorial&lt; adouble &gt;',['../waveform__util_8cpp.html#a1faab1c5d5f4241de880ab858b05ee81',1,'fourier_detector_response_equatorial&lt; adouble &gt;(adouble *, int, std::complex&lt; adouble &gt; *, std::string, std::string, gen_params_base&lt; adouble &gt; *):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a71b91c8d2033985e5794567e289f36ba',1,'fourier_detector_response_equatorial&lt; adouble &gt;(adouble *, int, std::complex&lt; adouble &gt; *, std::string, std::string, gen_params_base&lt; adouble &gt; *, adouble *):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a2435d1b69d35c3be44be73d0d990d1b9',1,'fourier_detector_response_equatorial&lt; adouble &gt;(adouble *, int, waveform_polarizations&lt; adouble &gt; *, std::complex&lt; adouble &gt; *, adouble, adouble, adouble, double, adouble *, adouble, adouble, adouble, adouble, std::string):&#160;waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_5fequatorial_3c_20double_20_3e_36',['fourier_detector_response_equatorial&lt; double &gt;',['../waveform__util_8cpp.html#a96e092a44046a7db0b8b148351db66de',1,'fourier_detector_response_equatorial&lt; double &gt;(double *, int, std::complex&lt; double &gt; *, std::string, std::string, gen_params_base&lt; double &gt; *):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#aaf0b7ea8cfa7ea5b708bbd06ad7225a7',1,'fourier_detector_response_equatorial&lt; double &gt;(double *, int, std::complex&lt; double &gt; *, std::string, std::string, gen_params_base&lt; double &gt; *, double *):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a7ac72bc085d6f028ef59fe56e06f6141',1,'fourier_detector_response_equatorial&lt; double &gt;(double *, int, waveform_polarizations&lt; double &gt; *, std::complex&lt; double &gt; *, double, double, double, double, double *, double, double, double, double, std::string):&#160;waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_5fhorizon_37',['fourier_detector_response_horizon',['../waveform__util_8h.html#a64a27ff9b4fdf6bab19f8d8fef2ab875',1,'fourier_detector_response_horizon(T *frequencies, int length, waveform_polarizations&lt; T &gt; *, std::complex&lt; T &gt; *detector_response, T theta, T phi, std::string detector):&#160;waveform_util.cpp'],['../waveform__util_8h.html#a0f73e9b19ee36b880876d6f4957a6b08',1,'fourier_detector_response_horizon(T *frequencies, int length, waveform_polarizations&lt; T &gt; *, std::complex&lt; T &gt; *detector_response, T theta, T phi, T psi, std::string detector):&#160;waveform_util.cpp'],['../waveform__util_8h.html#ada5544fbdbe68fb348d59fa7714fa35e',1,'fourier_detector_response_horizon(T *frequencies, int length, std::complex&lt; T &gt; *response, std::string detector, std::string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a6a395e775a94797518aa910aaca2e089',1,'fourier_detector_response_horizon(T *frequencies, int length, waveform_polarizations&lt; T &gt; *wp, std::complex&lt; T &gt; *detector_response, T theta, T phi, std::string detector):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#abdf24a3d710e54f778cba4b18b6df4b9',1,'fourier_detector_response_horizon(T *frequencies, int length, waveform_polarizations&lt; T &gt; *wp, std::complex&lt; T &gt; *detector_response, T theta, T phi, T psi, std::string detector):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#ada5544fbdbe68fb348d59fa7714fa35e',1,'fourier_detector_response_horizon(T *frequencies, int length, std::complex&lt; T &gt; *response, std::string detector, std::string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_5fhorizon_3c_20adouble_20_3e_38',['fourier_detector_response_horizon&lt; adouble &gt;',['../waveform__util_8cpp.html#a6c1a3257b80c62dee8030580da5b74bd',1,'fourier_detector_response_horizon&lt; adouble &gt;(adouble *, int, waveform_polarizations&lt; adouble &gt; *, std::complex&lt; adouble &gt; *, adouble, adouble, std::string):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#aacf385a72aaa26e1c20ddbaf006a411d',1,'fourier_detector_response_horizon&lt; adouble &gt;(adouble *, int, waveform_polarizations&lt; adouble &gt; *, std::complex&lt; adouble &gt; *, adouble, adouble, adouble, std::string):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a59d08bb07507baf28e371705d6c045a7',1,'fourier_detector_response_horizon&lt; adouble &gt;(adouble *, int, std::complex&lt; adouble &gt; *, std::string, std::string, gen_params_base&lt; adouble &gt; *):&#160;waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_5fhorizon_3c_20double_20_3e_39',['fourier_detector_response_horizon&lt; double &gt;',['../waveform__util_8cpp.html#af0dfec87ff514b662dc1e07fafacaa49',1,'fourier_detector_response_horizon&lt; double &gt;(double *, int, waveform_polarizations&lt; double &gt; *, std::complex&lt; double &gt; *, double, double, std::string):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a55011a9e0f096b730561cde1a8eef652',1,'fourier_detector_response_horizon&lt; double &gt;(double *, int, waveform_polarizations&lt; double &gt; *, std::complex&lt; double &gt; *, double, double, double, std::string):&#160;waveform_util.cpp'],['../waveform__util_8cpp.html#a130bbffc150ff0db8593398cf3cd4990',1,'fourier_detector_response_horizon&lt; double &gt;(double *, int, std::complex&lt; double &gt; *, std::string, std::string, gen_params_base&lt; double &gt; *):&#160;waveform_util.cpp']]],
  ['fourier_5fdetector_5fresponse_5fpy_40',['fourier_detector_response_py',['../gwatpy__wrapping_8h.html#a8934feb95a4e865c279e61cbcc128ba6',1,'fourier_detector_response_py(double *frequencies, int length, double *response_real, double *response_imaginary, char *detector, char *generation_method, gen_params_base&lt; double &gt; *parameters):&#160;gwatpy_wrapping.cpp'],['../gwatpy__wrapping_8cpp.html#a8934feb95a4e865c279e61cbcc128ba6',1,'fourier_detector_response_py(double *frequencies, int length, double *response_real, double *response_imaginary, char *detector, char *generation_method, gen_params_base&lt; double &gt; *parameters):&#160;gwatpy_wrapping.cpp']]],
  ['fourier_5fphase_41',['fourier_phase',['../waveform__generator_8h.html#a68aef1d43c5333493d165d32b6f11685',1,'fourier_phase(T *frequencies, int length, T *phase, std::string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_generator.h'],['../waveform__generator_8h.html#ae0fa91d4261e2c39116cf2be47fd5724',1,'fourier_phase(T *frequencies, int length, T *phase_plus, T *phase_cross, std::string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_generator.h'],['../waveform__generator_8cpp.html#a12a44f307fdb1bc05115b84c52f2e88c',1,'fourier_phase(T *frequencies, int length, T *phase, string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_generator.cpp'],['../waveform__generator_8cpp.html#a5c1e4c24cb332e1a692502e4f3004eb5',1,'fourier_phase(T *frequencies, int length, T *phase_plus, T *phase_cross, string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_generator.cpp']]],
  ['fourier_5fphase_3c_20adouble_20_3e_42',['fourier_phase&lt; adouble &gt;',['../waveform__generator_8cpp.html#abd8a9e9f681e02dbc3b8042401de2c4b',1,'fourier_phase&lt; adouble &gt;(adouble *, int, adouble *, std::string, gen_params_base&lt; adouble &gt; *):&#160;waveform_generator.cpp'],['../waveform__generator_8cpp.html#a0c9227be02abd9079abb29bb86076d0b',1,'fourier_phase&lt; adouble &gt;(adouble *, int, adouble *, adouble *, std::string, gen_params_base&lt; adouble &gt; *):&#160;waveform_generator.cpp']]],
  ['fourier_5fphase_3c_20double_20_3e_43',['fourier_phase&lt; double &gt;',['../waveform__generator_8cpp.html#a53c29cfd7c4887ca3de425149eb38aa1',1,'fourier_phase&lt; double &gt;(double *, int, double *, std::string, gen_params_base&lt; double &gt; *):&#160;waveform_generator.cpp'],['../waveform__generator_8cpp.html#a1f97fafbad6ad4527ae1447a19746bdf',1,'fourier_phase&lt; double &gt;(double *, int, double *, double *, std::string, gen_params_base&lt; double &gt; *):&#160;waveform_generator.cpp']]],
  ['fourier_5fphasec_44',['fourier_phaseC',['../waveform__generator__C_8h.html#afd4fde7d1811b98fb5e7f467c9b797ef',1,'fourier_phaseC(double *frequencies, int length, double *phase, char *generation_method, double mass1, double mass2, double DL, double spin1x, double spin1y, double spin1z, double spin2x, double spin2y, double spin2z, double tc, double f_ref, double phiRef, double *ppE_beta, double *ppE_b, int Nmod, double incl_angle, double theta, double phi):&#160;waveform_generator_C.cpp'],['../waveform__generator__C_8cpp.html#afd4fde7d1811b98fb5e7f467c9b797ef',1,'fourier_phaseC(double *frequencies, int length, double *phase, char *generation_method, double mass1, double mass2, double DL, double spin1x, double spin1y, double spin1z, double spin2x, double spin2y, double spin2z, double tc, double f_ref, double phiRef, double *ppE_beta, double *ppE_b, int Nmod, double incl_angle, double theta, double phi):&#160;waveform_generator_C.cpp']]],
  ['fourier_5fwaveform_45',['fourier_waveform',['../waveform__generator_8h.html#ac35bae5d593c85cb0a70586a88a866bc',1,'fourier_waveform(T *frequencies, int length, waveform_polarizations&lt; T &gt; *wp, std::string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_generator.h'],['../waveform__generator_8h.html#a647bd428ed46deb7da4981b9789b56ea',1,'fourier_waveform(double *frequencies, int length, double *waveform_plus_real, double *waveform_plus_imag, double *waveform_cross_real, double *waveform_cross_imag, double *waveform_x_real, double *waveform_x_imag, double *waveform_y_real, double *waveform_y_imag, double *waveform_b_real, double *waveform_b_imag, double *waveform_l_real, double *waveform_l_imag, std::string generation_method, gen_params *parameters):&#160;waveform_generator.h'],['../waveform__generator_8h.html#ace521e7a8e3747632121ceabf6eaa305',1,'fourier_waveform(double *frequencies, int length, std::complex&lt; double &gt; *waveform, std::string generation_method, gen_params *parameters):&#160;waveform_generator.h'],['../waveform__generator_8h.html#a3f551caee9adc33674e4b74daa6bbb54',1,'fourier_waveform(double *frequencies, int length, double *waveform_real, double *waveform_imag, std::string generation_method, gen_params *parameters):&#160;waveform_generator.h'],['../waveform__generator_8cpp.html#a81379dcf01981682bb781c1148867744',1,'fourier_waveform(T *frequencies, int length, waveform_polarizations&lt; T &gt; *wp, string generation_method, gen_params_base&lt; T &gt; *parameters):&#160;waveform_generator.cpp'],['../waveform__generator_8cpp.html#a9e47001f45368979de8db4c5aab34c41',1,'fourier_waveform(double *frequencies, int length, double *waveform_plus_real, double *waveform_plus_imag, double *waveform_cross_real, double *waveform_cross_imag, double *waveform_x_real, double *waveform_x_imag, double *waveform_y_real, double *waveform_y_imag, double *waveform_b_real, double *waveform_b_imag, double *waveform_l_real, double *waveform_l_imag, string generation_method, gen_params *parameters):&#160;waveform_generator.cpp'],['../waveform__generator_8cpp.html#a290382872adb5860aa7ba5f2c90a14af',1,'fourier_waveform(double *frequencies, int length, std::complex&lt; double &gt; *waveform, string generation_method, gen_params *parameters):&#160;waveform_generator.cpp'],['../waveform__generator_8cpp.html#a0784e75fc03593f717553a5983aca394',1,'fourier_waveform(double *frequencies, int length, double *waveform_real, double *waveform_imag, string generation_method, gen_params *parameters):&#160;waveform_generator.cpp']]],
  ['fourier_5fwaveform_3c_20adouble_20_3e_46',['fourier_waveform&lt; adouble &gt;',['../waveform__generator_8cpp.html#a6fe91d8b8d0fddb563d1a94753bd00de',1,'waveform_generator.cpp']]],
  ['fourier_5fwaveform_3c_20double_20_3e_47',['fourier_waveform&lt; double &gt;',['../waveform__generator_8cpp.html#a1215227ddd839084d4e983b30f77a053',1,'waveform_generator.cpp']]],
  ['fourier_5fwaveform_5ffull_5fpy_48',['fourier_waveform_full_py',['../gwatpy__wrapping_8h.html#ab1a03c2ad4ed1e0933924ef49ebf500f',1,'fourier_waveform_full_py(double *frequencies, int length, double *wf_plus_real, double *wf_plus_imaginary, double *wf_cross_real, double *wf_cross_imaginary, double *wf_x_real, double *wf_x_imaginary, double *wf_y_real, double *wf_y_imaginary, double *wf_b_real, double *wf_b_imaginary, double *wf_l_real, double *wf_l_imaginary, char *generation_method, gen_params_base&lt; double &gt; *parameters):&#160;gwatpy_wrapping.cpp'],['../gwatpy__wrapping_8cpp.html#ab1a03c2ad4ed1e0933924ef49ebf500f',1,'fourier_waveform_full_py(double *frequencies, int length, double *wf_plus_real, double *wf_plus_imaginary, double *wf_cross_real, double *wf_cross_imaginary, double *wf_x_real, double *wf_x_imaginary, double *wf_y_real, double *wf_y_imaginary, double *wf_b_real, double *wf_b_imaginary, double *wf_l_real, double *wf_l_imaginary, char *generation_method, gen_params_base&lt; double &gt; *parameters):&#160;gwatpy_wrapping.cpp']]],
  ['fourier_5fwaveform_5fpy_49',['fourier_waveform_py',['../gwatpy__wrapping_8h.html#a67afef4cebd3eec5f696bbb488667ba4',1,'fourier_waveform_py(double *frequencies, int length, double *wf_plus_real, double *wf_plus_imaginary, double *wf_cross_real, double *wf_cross_imaginary, char *generation_method, gen_params_base&lt; double &gt; *parameters):&#160;gwatpy_wrapping.cpp'],['../gwatpy__wrapping_8cpp.html#a67afef4cebd3eec5f696bbb488667ba4',1,'fourier_waveform_py(double *frequencies, int length, double *wf_plus_real, double *wf_plus_imaginary, double *wf_cross_real, double *wf_cross_imaginary, char *generation_method, gen_params_base&lt; double &gt; *parameters):&#160;gwatpy_wrapping.cpp']]],
  ['fourier_5fwaveformc_50',['fourier_waveformC',['../waveform__generator__C_8h.html#a6efdbfd57e80b295e17cbb0579febea8',1,'fourier_waveformC(double *frequencies, int length, double *waveform_plus_real, double *waveform_plus_imag, double *waveform_cross_real, double *waveform_cross_imag, char *generation_method, double mass1, double mass2, double DL, double spin1x, double spin1y, double spin1z, double spin2x, double spin2y, double spin2z, double tc, double f_ref, double phiRef, double *ppE_beta, double *ppE_b, int Nmod, double incl_angle, double theta, double phi):&#160;waveform_generator_C.cpp'],['../waveform__generator__C_8cpp.html#ad3c1b27fbcecdba6f6414b64589647d4',1,'fourier_waveformC(double *frequencies, int length, double *waveform_plus_real, double *waveform_plus_imag, double *waveform_cross_real, double *waveform_cross_imag, char *generation_method, double mass1, double mass2, double DL, double spin1x, double spin1y, double spin1z, double spin2x, double spin2y, double spin2z, double phiRef, double tc, double f_ref, double *ppE_beta, double *ppE_b, int Nmod, double incl_angle, double theta, double phi):&#160;waveform_generator_C.cpp']]],
  ['fpeak_51',['fpeak',['../classIMRPhenomD.html#a31c4222e9a39b6eadd42c4f6707d8245',1,'IMRPhenomD']]],
  ['free_5flosc_5fdata_52',['free_LOSC_data',['../io__util_8h.html#a3196bd767443186731edcfc84e43ac93',1,'free_LOSC_data(std::complex&lt; double &gt; **data, double **psds, double **freqs, int num_detectors, int length):&#160;io_util.cpp'],['../io__util_8cpp.html#a3196bd767443186731edcfc84e43ac93',1,'free_LOSC_data(std::complex&lt; double &gt; **data, double **psds, double **freqs, int num_detectors, int length):&#160;io_util.cpp']]],
  ['free_5flumd_5fz_5finterp_53',['free_LumD_Z_interp',['../util_8h.html#a9ec71fbb0a133a3099b570e6cfe4c116',1,'free_LumD_Z_interp(gsl_interp_accel **Z_DL_accel_ptr, gsl_spline **Z_DL_spline_ptr):&#160;util.cpp'],['../util_8cpp.html#a9ec71fbb0a133a3099b570e6cfe4c116',1,'free_LumD_Z_interp(gsl_interp_accel **Z_DL_accel_ptr, gsl_spline **Z_DL_spline_ptr):&#160;util.cpp']]],
  ['free_5flumd_5fz_5finterp_5fc_54',['free_LumD_Z_interp_C',['../waveform__generator__C_8h.html#ab483270374d434fb6ce50afc456578d7',1,'waveform_generator_C.h']]],
  ['full_5frandom_5fswap_55',['full_random_swap',['../mcmc__sampler_8h.html#af641a69035024384f290c1cedc1c65cd',1,'full_random_swap(sampler *s):&#160;mcmc_sampler.cpp'],['../mcmc__sampler_8cpp.html#af641a69035024384f290c1cedc1c65cd',1,'full_random_swap(sampler *s):&#160;mcmc_sampler.cpp']]]
];
